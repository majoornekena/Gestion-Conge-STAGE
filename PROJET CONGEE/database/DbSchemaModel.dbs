<?xml version="1.0" encoding="UTF-8" ?>
<project name="Conge" id="Project-504" database="PostgreSQL" >
	<schema name="information_schema" >
		<udt name="cardinal_number" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${name} integer CONSTRAINT cardinal_number_domain_check CHECK (VALUE >= 0)]]></udt_script>
		</udt>
		<udt name="character_data" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${name} character varying ]]></udt_script>
		</udt>
		<udt name="sql_identifier" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${name} name ]]></udt_script>
		</udt>
		<udt name="time_stamp" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${name} timestamp(2) with time zone DEFAULT CURRENT_TIMESTAMP(2) ]]></udt_script>
		</udt>
		<udt name="yes_or_no" udt_java_type="12" udt_precision="NONE" >
			<udt_script><![CDATA[CREATE DOMAIN ${name} character varying(3) CONSTRAINT yes_or_no_check CHECK (VALUE::text = ANY (ARRAY['YES'::character varying, 'NO'::character varying]::text[]))]]></udt_script>
		</udt>
		<table name="sql_features" type="GLOBAL_TEMPORARY" spec="" >
			<column name="feature_id" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="feature_name" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="sub_feature_id" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="sub_feature_name" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="is_supported" type="varchar" length="3" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="is_verified_by" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="comments" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
		</table>
		<table name="sql_implementation_info" type="GLOBAL_TEMPORARY" spec="" >
			<column name="implementation_info_id" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="implementation_info_name" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="integer_value" type="integer" length="32" jt="4" />
			<column name="character_value" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="comments" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
		</table>
		<table name="sql_languages" type="GLOBAL_TEMPORARY" spec="" >
			<column name="sql_language_source" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="sql_language_year" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="sql_language_conformance" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="sql_language_integrity" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="sql_language_implementation" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="sql_language_binding_style" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="sql_language_programming_language" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
		</table>
		<table name="sql_packages" type="GLOBAL_TEMPORARY" spec="" >
			<column name="feature_id" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="feature_name" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="is_supported" type="varchar" length="3" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="is_verified_by" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="comments" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
		</table>
		<table name="sql_parts" type="GLOBAL_TEMPORARY" spec="" >
			<column name="feature_id" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="feature_name" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="is_supported" type="varchar" length="3" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="is_verified_by" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="comments" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
		</table>
		<table name="sql_sizing" type="GLOBAL_TEMPORARY" spec="" >
			<column name="sizing_id" type="integer" length="32" jt="4" />
			<column name="sizing_name" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="supported_value" type="integer" length="32" jt="4" />
			<column name="comments" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
		</table>
		<table name="sql_sizing_profiles" type="GLOBAL_TEMPORARY" spec="" >
			<column name="sizing_id" type="integer" length="32" jt="4" />
			<column name="sizing_name" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="profile_id" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="required_value" type="integer" length="32" jt="4" />
			<column name="comments" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
		</table>
		<view name="_pg_foreign_data_wrappers" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}     (current_database())::information_schema.sql_identifier AS foreign_data_wrapper_catalog,     (w.fdwname)::information_schema.sql_identifier AS foreign_data_wrapper_name,     (u.rolname)::information_schema.sql_identifier AS authorization_identifier,     ('c'::character varying)::information_schema.character_data AS foreign_data_wrapper_language    FROM pg_foreign_data_wrapper w,     pg_authid u   WHERE ((u.oid = w.fdwowner) AND (pg_has_role(w.fdwowner, 'USAGE'::text) OR has_foreign_data_wrapper_privilege(w.oid, 'USAGE'::text)))]]></view_script>
		</view>
		<view name="_pg_foreign_servers" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}     (current_database())::information_schema.sql_identifier AS foreign_server_catalog,     (s.srvname)::information_schema.sql_identifier AS foreign_server_name,     (current_database())::information_schema.sql_identifier AS foreign_data_wrapper_catalog,     (w.fdwname)::information_schema.sql_identifier AS foreign_data_wrapper_name,     (s.srvtype)::information_schema.character_data AS foreign_server_type,     (s.srvversion)::information_schema.character_data AS foreign_server_version,     (u.rolname)::information_schema.sql_identifier AS authorization_identifier    FROM pg_foreign_server s,     pg_foreign_data_wrapper w,     pg_authid u   WHERE ((w.oid = s.srvfdw) AND (u.oid = s.srvowner) AND (pg_has_role(s.srvowner, 'USAGE'::text) OR has_server_privilege(s.oid, 'USAGE'::text)))]]></view_script>
		</view>
		<view name="_pg_foreign_table_columns" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} ((u.oid = c.relowner) AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_column_privilege(c.oid, a.attnum, 'SELECT, INSERT, UPDATE, REFERENCES'::text)) AND (n.oid = c.relnamespace) AND (c.oid = t.ftrelid) AND (c.relkind = 'f'::"char") AND (a.attrelid = c.oid) AND (a.attnum > 0))]]></view_script>
		</view>
		<view name="_pg_foreign_tables" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS foreign_table_catalog,     (n.nspname)::information_schema.sql_identifier AS foreign_table_schema,     (c.relname)::information_schema.sql_identifier AS foreign_table_name,     t.ftoptions,     (current_database())::information_schema.sql_identifier AS foreign_server_catalog,     (s.srvname)::information_schema.sql_identifier AS foreign_server_name,     (u.rolname)::information_schema.sql_identifier AS authorization_identifier    FROM pg_foreign_table t,     pg_foreign_server s,     pg_foreign_data_wrapper w,     pg_authid u,     pg_namespace n,     pg_class c   WHERE ((w.oid = s.srvfdw) AND (u.oid = c.relowner) AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_table_privilege(c.oid, 'SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'::text) OR has_any_column_privilege(c.oid, 'SELECT, INSERT, UPDATE, REFERENCES'::text)) AND (n.oid = c.relnamespace) AND (c.oid = t.ftrelid) AND (c.relkind = 'f'::"char") AND (s.oid = t.ftserver))]]></view_script>
		</view>
		<view name="_pg_user_mappings" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}     (COALESCE(u.rolname, 'PUBLIC'::name))::information_schema.sql_identifier AS authorization_identifier,     s.foreign_server_catalog,     s.foreign_server_name,     s.authorization_identifier AS srvowner    FROM (pg_user_mapping um      LEFT JOIN pg_authid u ON ((u.oid = um.umuser))),     information_schema._pg_foreign_servers s   WHERE (s.oid = um.umserver)]]></view_script>
		</view>
		<view name="administrable_role_authorizations" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} ((applicable_roles.is_grantable)::text = 'YES'::text)]]></view_script>
		</view>
		<view name="applicable_roles" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (a.rolname)::information_schema.sql_identifier AS grantee,     (b.rolname)::information_schema.sql_identifier AS role_name,     (         CASE             WHEN m.admin_option THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS is_grantable    FROM ((pg_auth_members m      JOIN pg_authid a ON ((m.member = a.oid)))      JOIN pg_authid b ON ((m.roleid = b.oid)))   WHERE pg_has_role(a.oid, 'USAGE'::text)]]></view_script>
		</view>
		<view name="attributes" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS udt_catalog,     (nc.nspname)::information_schema.sql_identifier AS udt_schema,     (c.relname)::information_schema.sql_identifier AS udt_name,     (a.attname)::information_schema.sql_identifier AS attribute_name,     (a.attnum)::information_schema.cardinal_number AS ordinal_position,     (pg_get_expr(ad.adbin, ad.adrelid))::information_schema.character_data AS attribute_default,     (         CASE             WHEN (a.attnotnull OR ((t.typtype = 'd'::"char") AND t.typnotnull)) THEN 'NO'::text             ELSE 'YES'::text         END)::information_schema.yes_or_no AS is_nullable,     (         CASE             WHEN ((t.typelem <> (0)::oid) AND (t.typlen = '-1'::integer)) THEN 'ARRAY'::text             WHEN (nt.nspname = 'pg_catalog'::name) THEN format_type(a.atttypid, NULL::integer)             ELSE 'USER-DEFINED'::text         END)::information_schema.character_data AS data_type,     (information_schema._pg_char_max_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS character_maximum_length,     (information_schema._pg_char_octet_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS character_octet_length,     (NULL::name)::information_schema.sql_identifier AS character_set_catalog,     (NULL::name)::information_schema.sql_identifier AS character_set_schema,     (NULL::name)::information_schema.sql_identifier AS character_set_name,     (         CASE             WHEN (nco.nspname IS NOT NULL) THEN current_database()             ELSE NULL::name         END)::information_schema.sql_identifier AS collation_catalog,     (nco.nspname)::information_schema.sql_identifier AS collation_schema,     (co.collname)::information_schema.sql_identifier AS collation_name,     (information_schema._pg_numeric_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_precision,     (information_schema._pg_numeric_precision_radix(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_precision_radix,     (information_schema._pg_numeric_scale(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_scale,     (information_schema._pg_datetime_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS datetime_precision,     (information_schema._pg_interval_type(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.character_data AS interval_type,     (NULL::integer)::information_schema.cardinal_number AS interval_precision,     (current_database())::information_schema.sql_identifier AS attribute_udt_catalog,     (nt.nspname)::information_schema.sql_identifier AS attribute_udt_schema,     (t.typname)::information_schema.sql_identifier AS attribute_udt_name,     (NULL::name)::information_schema.sql_identifier AS scope_catalog,     (NULL::name)::information_schema.sql_identifier AS scope_schema,     (NULL::name)::information_schema.sql_identifier AS scope_name,     (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,     (a.attnum)::information_schema.sql_identifier AS dtd_identifier,     ('NO'::character varying)::information_schema.yes_or_no AS is_derived_reference_attribute    FROM ((((pg_attribute a      LEFT JOIN pg_attrdef ad ON (((a.attrelid = ad.adrelid) AND (a.attnum = ad.adnum))))      JOIN (pg_class c      JOIN pg_namespace nc ON ((c.relnamespace = nc.oid))) ON ((a.attrelid = c.oid)))      JOIN (pg_type t      JOIN pg_namespace nt ON ((t.typnamespace = nt.oid))) ON ((a.atttypid = t.oid)))      LEFT JOIN (pg_collation co      JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((a.attcollation = co.oid) AND ((nco.nspname <> 'pg_catalog'::name) OR (co.collname <> 'default'::name)))))   WHERE ((a.attnum > 0) AND (NOT a.attisdropped) AND (c.relkind = 'c'::"char") AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_type_privilege(c.reltype, 'USAGE'::text)))]]></view_script>
		</view>
		<view name="character_sets" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (NULL::name)::information_schema.sql_identifier AS character_set_catalog,     (NULL::name)::information_schema.sql_identifier AS character_set_schema,     (getdatabaseencoding())::information_schema.sql_identifier AS character_set_name,     (         CASE             WHEN (getdatabaseencoding() = 'UTF8'::name) THEN 'UCS'::name             ELSE getdatabaseencoding()         END)::information_schema.sql_identifier AS character_repertoire,     (getdatabaseencoding())::information_schema.sql_identifier AS form_of_use,     (current_database())::information_schema.sql_identifier AS default_collate_catalog,     (nc.nspname)::information_schema.sql_identifier AS default_collate_schema,     (c.collname)::information_schema.sql_identifier AS default_collate_name    FROM (pg_database d      LEFT JOIN (pg_collation c      JOIN pg_namespace nc ON ((c.collnamespace = nc.oid))) ON (((d.datcollate = c.collcollate) AND (d.datctype = c.collctype))))   WHERE (d.datname = current_database())   ORDER BY (char_length((c.collname)::text)) DESC, c.collname  LIMIT 1]]></view_script>
		</view>
		<view name="check_constraint_routine_usage" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS constraint_catalog,     (nc.nspname)::information_schema.sql_identifier AS constraint_schema,     (c.conname)::information_schema.sql_identifier AS constraint_name,     (current_database())::information_schema.sql_identifier AS specific_catalog,     (np.nspname)::information_schema.sql_identifier AS specific_schema,     (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name    FROM pg_namespace nc,     pg_constraint c,     pg_depend d,     pg_proc p,     pg_namespace np   WHERE ((nc.oid = c.connamespace) AND (c.contype = 'c'::"char") AND (c.oid = d.objid) AND (d.classid = ('pg_constraint'::regclass)::oid) AND (d.refobjid = p.oid) AND (d.refclassid = ('pg_proc'::regclass)::oid) AND (p.pronamespace = np.oid) AND pg_has_role(p.proowner, 'USAGE'::text))]]></view_script>
		</view>
		<view name="check_constraints" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS constraint_catalog,     (rs.nspname)::information_schema.sql_identifier AS constraint_schema,     (con.conname)::information_schema.sql_identifier AS constraint_name,     ("substring"(pg_get_constraintdef(con.oid), 7))::information_schema.character_data AS check_clause    FROM (((pg_constraint con      LEFT JOIN pg_namespace rs ON ((rs.oid = con.connamespace)))      LEFT JOIN pg_class c ON ((c.oid = con.conrelid)))      LEFT JOIN pg_type t ON ((t.oid = con.contypid)))   WHERE (pg_has_role(COALESCE(c.relowner, t.typowner), 'USAGE'::text) AND (con.contype = 'c'::"char")) UNION  SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,     (n.nspname)::information_schema.sql_identifier AS constraint_schema,     (((((((n.oid)::text || '_'::text) || (r.oid)::text) || '_'::text) || (a.attnum)::text) || '_not_null'::text))::information_schema.sql_identifier AS constraint_name,     (((a.attname)::text || ' IS NOT NULL'::text))::information_schema.character_data AS check_clause    FROM pg_namespace n,     pg_class r,     pg_attribute a   WHERE ((n.oid = r.relnamespace) AND (r.oid = a.attrelid) AND (a.attnum > 0) AND (NOT a.attisdropped) AND a.attnotnull AND (r.relkind = ANY (ARRAY['r'::"char", 'p'::"char"])) AND pg_has_role(r.relowner, 'USAGE'::text))]]></view_script>
		</view>
		<view name="collation_character_set_applicability" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS collation_catalog,     (nc.nspname)::information_schema.sql_identifier AS collation_schema,     (c.collname)::information_schema.sql_identifier AS collation_name,     (NULL::name)::information_schema.sql_identifier AS character_set_catalog,     (NULL::name)::information_schema.sql_identifier AS character_set_schema,     (getdatabaseencoding())::information_schema.sql_identifier AS character_set_name    FROM pg_collation c,     pg_namespace nc   WHERE ((c.collnamespace = nc.oid) AND (c.collencoding = ANY (ARRAY['-1'::integer, ( SELECT pg_database.encoding            FROM pg_database           WHERE (pg_database.datname = current_database()))])))]]></view_script>
		</view>
		<view name="collations" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS collation_catalog,     (nc.nspname)::information_schema.sql_identifier AS collation_schema,     (c.collname)::information_schema.sql_identifier AS collation_name,     ('NO PAD'::character varying)::information_schema.character_data AS pad_attribute    FROM pg_collation c,     pg_namespace nc   WHERE ((c.collnamespace = nc.oid) AND (c.collencoding = ANY (ARRAY['-1'::integer, ( SELECT pg_database.encoding            FROM pg_database           WHERE (pg_database.datname = current_database()))])))]]></view_script>
		</view>
		<view name="column_column_usage" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS table_catalog,     (n.nspname)::information_schema.sql_identifier AS table_schema,     (c.relname)::information_schema.sql_identifier AS table_name,     (ac.attname)::information_schema.sql_identifier AS column_name,     (ad.attname)::information_schema.sql_identifier AS dependent_column    FROM pg_namespace n,     pg_class c,     pg_depend d,     pg_attribute ac,     pg_attribute ad   WHERE ((n.oid = c.relnamespace) AND (c.oid = ac.attrelid) AND (c.oid = ad.attrelid) AND (d.classid = ('pg_class'::regclass)::oid) AND (d.refclassid = ('pg_class'::regclass)::oid) AND (d.objid = d.refobjid) AND (c.oid = d.objid) AND (d.objsubid = ad.attnum) AND (d.refobjsubid = ac.attnum) AND (ad.attgenerated <> ''::"char") AND pg_has_role(c.relowner, 'USAGE'::text))]]></view_script>
		</view>
		<view name="column_domain_usage" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS domain_catalog,     (nt.nspname)::information_schema.sql_identifier AS domain_schema,     (t.typname)::information_schema.sql_identifier AS domain_name,     (current_database())::information_schema.sql_identifier AS table_catalog,     (nc.nspname)::information_schema.sql_identifier AS table_schema,     (c.relname)::information_schema.sql_identifier AS table_name,     (a.attname)::information_schema.sql_identifier AS column_name    FROM pg_type t,     pg_namespace nt,     pg_class c,     pg_namespace nc,     pg_attribute a   WHERE ((t.typnamespace = nt.oid) AND (c.relnamespace = nc.oid) AND (a.attrelid = c.oid) AND (a.atttypid = t.oid) AND (t.typtype = 'd'::"char") AND (c.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'f'::"char", 'p'::"char"])) AND (a.attnum > 0) AND (NOT a.attisdropped) AND pg_has_role(t.typowner, 'USAGE'::text))]]></view_script>
		</view>
		<view name="column_options" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS table_catalog,     (c.nspname)::information_schema.sql_identifier AS table_schema,     (c.relname)::information_schema.sql_identifier AS table_name,     (c.attname)::information_schema.sql_identifier AS column_name,     ((pg_options_to_table(c.attfdwoptions)).option_name)::information_schema.sql_identifier AS option_name,     ((pg_options_to_table(c.attfdwoptions)).option_value)::information_schema.character_data AS option_value    FROM information_schema._pg_foreign_table_columns c]]></view_script>
		</view>
		<view name="column_privileges" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (u_grantor.rolname)::information_schema.sql_identifier AS grantor,     (grantee.rolname)::information_schema.sql_identifier AS grantee,     (current_database())::information_schema.sql_identifier AS table_catalog,     (nc.nspname)::information_schema.sql_identifier AS table_schema,     (x.relname)::information_schema.sql_identifier AS table_name,     (x.attname)::information_schema.sql_identifier AS column_name,     (x.prtype)::information_schema.character_data AS privilege_type,     (         CASE             WHEN (pg_has_role(x.grantee, x.relowner, 'USAGE'::text) OR x.grantable) THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS is_grantable    FROM ( SELECT pr_c.grantor,             pr_c.grantee,             a.attname,             pr_c.relname,             pr_c.relnamespace,             pr_c.prtype,             pr_c.grantable,             pr_c.relowner            FROM ( SELECT pg_class.oid,                     pg_class.relname,                     pg_class.relnamespace,                     pg_class.relowner,                     (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::"char", pg_class.relowner)))).grantor AS grantor,                     (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::"char", pg_class.relowner)))).grantee AS grantee,                     (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::"char", pg_class.relowner)))).privilege_type AS privilege_type,                     (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::"char", pg_class.relowner)))).is_grantable AS is_grantable                    FROM pg_class                   WHERE (pg_class.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'f'::"char", 'p'::"char"]))) pr_c(oid, relname, relnamespace, relowner, grantor, grantee, prtype, grantable),             pg_attribute a           WHERE ((a.attrelid = pr_c.oid) AND (a.attnum > 0) AND (NOT a.attisdropped))         UNION          SELECT pr_a.grantor,             pr_a.grantee,             pr_a.attname,             c.relname,             c.relnamespace,             pr_a.prtype,             pr_a.grantable,             c.relowner            FROM ( SELECT a.attrelid,                     a.attname,                     (aclexplode(COALESCE(a.attacl, acldefault('c'::"char", cc.relowner)))).grantor AS grantor,                     (aclexplode(COALESCE(a.attacl, acldefault('c'::"char", cc.relowner)))).grantee AS grantee,                     (aclexplode(COALESCE(a.attacl, acldefault('c'::"char", cc.relowner)))).privilege_type AS privilege_type,                     (aclexplode(COALESCE(a.attacl, acldefault('c'::"char", cc.relowner)))).is_grantable AS is_grantable                    FROM (pg_attribute a                      JOIN pg_class cc ON ((a.attrelid = cc.oid)))                   WHERE ((a.attnum > 0) AND (NOT a.attisdropped))) pr_a(attrelid, attname, grantor, grantee, prtype, grantable),             pg_class c           WHERE ((pr_a.attrelid = c.oid) AND (c.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'f'::"char", 'p'::"char"])))) x,     pg_namespace nc,     pg_authid u_grantor,     ( SELECT pg_authid.oid,             pg_authid.rolname            FROM pg_authid         UNION ALL          SELECT (0)::oid AS oid,             'PUBLIC'::name) grantee(oid, rolname)   WHERE ((x.relnamespace = nc.oid) AND (x.grantee = grantee.oid) AND (x.grantor = u_grantor.oid) AND (x.prtype = ANY (ARRAY['INSERT'::text, 'SELECT'::text, 'UPDATE'::text, 'REFERENCES'::text])) AND (pg_has_role(u_grantor.oid, 'USAGE'::text) OR pg_has_role(grantee.oid, 'USAGE'::text) OR (grantee.rolname = 'PUBLIC'::name)))]]></view_script>
		</view>
		<view name="column_udt_usage" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS udt_catalog,     (COALESCE(nbt.nspname, nt.nspname))::information_schema.sql_identifier AS udt_schema,     (COALESCE(bt.typname, t.typname))::information_schema.sql_identifier AS udt_name,     (current_database())::information_schema.sql_identifier AS table_catalog,     (nc.nspname)::information_schema.sql_identifier AS table_schema,     (c.relname)::information_schema.sql_identifier AS table_name,     (a.attname)::information_schema.sql_identifier AS column_name    FROM pg_attribute a,     pg_class c,     pg_namespace nc,     ((pg_type t      JOIN pg_namespace nt ON ((t.typnamespace = nt.oid)))      LEFT JOIN (pg_type bt      JOIN pg_namespace nbt ON ((bt.typnamespace = nbt.oid))) ON (((t.typtype = 'd'::"char") AND (t.typbasetype = bt.oid))))   WHERE ((a.attrelid = c.oid) AND (a.atttypid = t.oid) AND (nc.oid = c.relnamespace) AND (a.attnum > 0) AND (NOT a.attisdropped) AND (c.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'f'::"char", 'p'::"char"])) AND pg_has_role(COALESCE(bt.typowner, t.typowner), 'USAGE'::text))]]></view_script>
		</view>
		<view name="columns" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS table_catalog,     (nc.nspname)::information_schema.sql_identifier AS table_schema,     (c.relname)::information_schema.sql_identifier AS table_name,     (a.attname)::information_schema.sql_identifier AS column_name,     (a.attnum)::information_schema.cardinal_number AS ordinal_position,     (         CASE             WHEN (a.attgenerated = ''::"char") THEN pg_get_expr(ad.adbin, ad.adrelid)             ELSE NULL::text         END)::information_schema.character_data AS column_default,     (         CASE             WHEN (a.attnotnull OR ((t.typtype = 'd'::"char") AND t.typnotnull)) THEN 'NO'::text             ELSE 'YES'::text         END)::information_schema.yes_or_no AS is_nullable,     (         CASE             WHEN (t.typtype = 'd'::"char") THEN             CASE                 WHEN ((bt.typelem <> (0)::oid) AND (bt.typlen = '-1'::integer)) THEN 'ARRAY'::text                 WHEN (nbt.nspname = 'pg_catalog'::name) THEN format_type(t.typbasetype, NULL::integer)                 ELSE 'USER-DEFINED'::text             END             ELSE             CASE                 WHEN ((t.typelem <> (0)::oid) AND (t.typlen = '-1'::integer)) THEN 'ARRAY'::text                 WHEN (nt.nspname = 'pg_catalog'::name) THEN format_type(a.atttypid, NULL::integer)                 ELSE 'USER-DEFINED'::text             END         END)::information_schema.character_data AS data_type,     (information_schema._pg_char_max_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS character_maximum_length,     (information_schema._pg_char_octet_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS character_octet_length,     (information_schema._pg_numeric_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_precision,     (information_schema._pg_numeric_precision_radix(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_precision_radix,     (information_schema._pg_numeric_scale(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_scale,     (information_schema._pg_datetime_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS datetime_precision,     (information_schema._pg_interval_type(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.character_data AS interval_type,     (NULL::integer)::information_schema.cardinal_number AS interval_precision,     (NULL::name)::information_schema.sql_identifier AS character_set_catalog,     (NULL::name)::information_schema.sql_identifier AS character_set_schema,     (NULL::name)::information_schema.sql_identifier AS character_set_name,     (         CASE             WHEN (nco.nspname IS NOT NULL) THEN current_database()             ELSE NULL::name         END)::information_schema.sql_identifier AS collation_catalog,     (nco.nspname)::information_schema.sql_identifier AS collation_schema,     (co.collname)::information_schema.sql_identifier AS collation_name,     (         CASE             WHEN (t.typtype = 'd'::"char") THEN current_database()             ELSE NULL::name         END)::information_schema.sql_identifier AS domain_catalog,     (         CASE             WHEN (t.typtype = 'd'::"char") THEN nt.nspname             ELSE NULL::name         END)::information_schema.sql_identifier AS domain_schema,     (         CASE             WHEN (t.typtype = 'd'::"char") THEN t.typname             ELSE NULL::name         END)::information_schema.sql_identifier AS domain_name,     (current_database())::information_schema.sql_identifier AS udt_catalog,     (COALESCE(nbt.nspname, nt.nspname))::information_schema.sql_identifier AS udt_schema,     (COALESCE(bt.typname, t.typname))::information_schema.sql_identifier AS udt_name,     (NULL::name)::information_schema.sql_identifier AS scope_catalog,     (NULL::name)::information_schema.sql_identifier AS scope_schema,     (NULL::name)::information_schema.sql_identifier AS scope_name,     (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,     (a.attnum)::information_schema.sql_identifier AS dtd_identifier,     ('NO'::character varying)::information_schema.yes_or_no AS is_self_referencing,     (         CASE             WHEN (a.attidentity = ANY (ARRAY['a'::"char", 'd'::"char"])) THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS is_identity,     (         CASE a.attidentity             WHEN 'a'::"char" THEN 'ALWAYS'::text             WHEN 'd'::"char" THEN 'BY DEFAULT'::text             ELSE NULL::text         END)::information_schema.character_data AS identity_generation,     (seq.seqstart)::information_schema.character_data AS identity_start,     (seq.seqincrement)::information_schema.character_data AS identity_increment,     (seq.seqmax)::information_schema.character_data AS identity_maximum,     (seq.seqmin)::information_schema.character_data AS identity_minimum,     (         CASE             WHEN seq.seqcycle THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS identity_cycle,     (         CASE             WHEN (a.attgenerated <> ''::"char") THEN 'ALWAYS'::text             ELSE 'NEVER'::text         END)::information_schema.character_data AS is_generated,     (         CASE             WHEN (a.attgenerated <> ''::"char") THEN pg_get_expr(ad.adbin, ad.adrelid)             ELSE NULL::text         END)::information_schema.character_data AS generation_expression,     (         CASE             WHEN ((c.relkind = ANY (ARRAY['r'::"char", 'p'::"char"])) OR ((c.relkind = ANY (ARRAY['v'::"char", 'f'::"char"])) AND pg_column_is_updatable((c.oid)::regclass, a.attnum, false))) THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS is_updatable    FROM ((((((pg_attribute a      LEFT JOIN pg_attrdef ad ON (((a.attrelid = ad.adrelid) AND (a.attnum = ad.adnum))))      JOIN (pg_class c      JOIN pg_namespace nc ON ((c.relnamespace = nc.oid))) ON ((a.attrelid = c.oid)))      JOIN (pg_type t      JOIN pg_namespace nt ON ((t.typnamespace = nt.oid))) ON ((a.atttypid = t.oid)))      LEFT JOIN (pg_type bt      JOIN pg_namespace nbt ON ((bt.typnamespace = nbt.oid))) ON (((t.typtype = 'd'::"char") AND (t.typbasetype = bt.oid))))      LEFT JOIN (pg_collation co      JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((a.attcollation = co.oid) AND ((nco.nspname <> 'pg_catalog'::name) OR (co.collname <> 'default'::name)))))      LEFT JOIN (pg_depend dep      JOIN pg_sequence seq ON (((dep.classid = ('pg_class'::regclass)::oid) AND (dep.objid = seq.seqrelid) AND (dep.deptype = 'i'::"char")))) ON (((dep.refclassid = ('pg_class'::regclass)::oid) AND (dep.refobjid = c.oid) AND (dep.refobjsubid = a.attnum))))   WHERE ((NOT pg_is_other_temp_schema(nc.oid)) AND (a.attnum > 0) AND (NOT a.attisdropped) AND (c.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'f'::"char", 'p'::"char"])) AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_column_privilege(c.oid, a.attnum, 'SELECT, INSERT, UPDATE, REFERENCES'::text)))]]></view_script>
		</view>
		<view name="constraint_column_usage" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS table_catalog,     (x.tblschema)::information_schema.sql_identifier AS table_schema,     (x.tblname)::information_schema.sql_identifier AS table_name,     (x.colname)::information_schema.sql_identifier AS column_name,     (current_database())::information_schema.sql_identifier AS constraint_catalog,     (x.cstrschema)::information_schema.sql_identifier AS constraint_schema,     (x.cstrname)::information_schema.sql_identifier AS constraint_name    FROM ( SELECT DISTINCT nr.nspname,             r.relname,             r.relowner,             a.attname,             nc.nspname,             c.conname            FROM pg_namespace nr,             pg_class r,             pg_attribute a,             pg_depend d,             pg_namespace nc,             pg_constraint c           WHERE ((nr.oid = r.relnamespace) AND (r.oid = a.attrelid) AND (d.refclassid = ('pg_class'::regclass)::oid) AND (d.refobjid = r.oid) AND (d.refobjsubid = a.attnum) AND (d.classid = ('pg_constraint'::regclass)::oid) AND (d.objid = c.oid) AND (c.connamespace = nc.oid) AND (c.contype = 'c'::"char") AND (r.relkind = ANY (ARRAY['r'::"char", 'p'::"char"])) AND (NOT a.attisdropped))         UNION ALL          SELECT nr.nspname,             r.relname,             r.relowner,             a.attname,             nc.nspname,             c.conname            FROM pg_namespace nr,             pg_class r,             pg_attribute a,             pg_namespace nc,             pg_constraint c           WHERE ((nr.oid = r.relnamespace) AND (r.oid = a.attrelid) AND (nc.oid = c.connamespace) AND (r.oid =                 CASE c.contype                     WHEN 'f'::"char" THEN c.confrelid                     ELSE c.conrelid                 END) AND (a.attnum = ANY (                 CASE c.contype                     WHEN 'f'::"char" THEN c.confkey                     ELSE c.conkey                 END)) AND (NOT a.attisdropped) AND (c.contype = ANY (ARRAY['p'::"char", 'u'::"char", 'f'::"char"])) AND (r.relkind = ANY (ARRAY['r'::"char", 'p'::"char"])))) x(tblschema, tblname, tblowner, colname, cstrschema, cstrname)   WHERE pg_has_role(x.tblowner, 'USAGE'::text)]]></view_script>
		</view>
		<view name="constraint_table_usage" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS table_catalog,     (nr.nspname)::information_schema.sql_identifier AS table_schema,     (r.relname)::information_schema.sql_identifier AS table_name,     (current_database())::information_schema.sql_identifier AS constraint_catalog,     (nc.nspname)::information_schema.sql_identifier AS constraint_schema,     (c.conname)::information_schema.sql_identifier AS constraint_name    FROM pg_constraint c,     pg_namespace nc,     pg_class r,     pg_namespace nr   WHERE ((c.connamespace = nc.oid) AND (r.relnamespace = nr.oid) AND (((c.contype = 'f'::"char") AND (c.confrelid = r.oid)) OR ((c.contype = ANY (ARRAY['p'::"char", 'u'::"char"])) AND (c.conrelid = r.oid))) AND (r.relkind = ANY (ARRAY['r'::"char", 'p'::"char"])) AND pg_has_role(r.relowner, 'USAGE'::text))]]></view_script>
		</view>
		<view name="data_type_privileges" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS object_catalog,     x.objschema AS object_schema,     x.objname AS object_name,     (x.objtype)::information_schema.character_data AS object_type,     x.objdtdid AS dtd_identifier    FROM ( SELECT attributes.udt_schema,             attributes.udt_name,             'USER-DEFINED TYPE'::text AS text,             attributes.dtd_identifier            FROM information_schema.attributes         UNION ALL          SELECT columns.table_schema,             columns.table_name,             'TABLE'::text AS text,             columns.dtd_identifier            FROM information_schema.columns         UNION ALL          SELECT domains.domain_schema,             domains.domain_name,             'DOMAIN'::text AS text,             domains.dtd_identifier            FROM information_schema.domains         UNION ALL          SELECT parameters.specific_schema,             parameters.specific_name,             'ROUTINE'::text AS text,             parameters.dtd_identifier            FROM information_schema.parameters         UNION ALL          SELECT routines.specific_schema,             routines.specific_name,             'ROUTINE'::text AS text,             routines.dtd_identifier            FROM information_schema.routines) x(objschema, objname, objtype, objdtdid)]]></view_script>
		</view>
		<view name="domain_constraints" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS constraint_catalog,     (rs.nspname)::information_schema.sql_identifier AS constraint_schema,     (con.conname)::information_schema.sql_identifier AS constraint_name,     (current_database())::information_schema.sql_identifier AS domain_catalog,     (n.nspname)::information_schema.sql_identifier AS domain_schema,     (t.typname)::information_schema.sql_identifier AS domain_name,     (         CASE             WHEN con.condeferrable THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS is_deferrable,     (         CASE             WHEN con.condeferred THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS initially_deferred    FROM pg_namespace rs,     pg_namespace n,     pg_constraint con,     pg_type t   WHERE ((rs.oid = con.connamespace) AND (n.oid = t.typnamespace) AND (t.oid = con.contypid) AND (pg_has_role(t.typowner, 'USAGE'::text) OR has_type_privilege(t.oid, 'USAGE'::text)))]]></view_script>
		</view>
		<view name="domain_udt_usage" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS udt_catalog,     (nbt.nspname)::information_schema.sql_identifier AS udt_schema,     (bt.typname)::information_schema.sql_identifier AS udt_name,     (current_database())::information_schema.sql_identifier AS domain_catalog,     (nt.nspname)::information_schema.sql_identifier AS domain_schema,     (t.typname)::information_schema.sql_identifier AS domain_name    FROM pg_type t,     pg_namespace nt,     pg_type bt,     pg_namespace nbt   WHERE ((t.typnamespace = nt.oid) AND (t.typbasetype = bt.oid) AND (bt.typnamespace = nbt.oid) AND (t.typtype = 'd'::"char") AND pg_has_role(bt.typowner, 'USAGE'::text))]]></view_script>
		</view>
		<view name="domains" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS domain_catalog,     (nt.nspname)::information_schema.sql_identifier AS domain_schema,     (t.typname)::information_schema.sql_identifier AS domain_name,     (         CASE             WHEN ((t.typelem <> (0)::oid) AND (t.typlen = '-1'::integer)) THEN 'ARRAY'::text             WHEN (nbt.nspname = 'pg_catalog'::name) THEN format_type(t.typbasetype, NULL::integer)             ELSE 'USER-DEFINED'::text         END)::information_schema.character_data AS data_type,     (information_schema._pg_char_max_length(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS character_maximum_length,     (information_schema._pg_char_octet_length(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS character_octet_length,     (NULL::name)::information_schema.sql_identifier AS character_set_catalog,     (NULL::name)::information_schema.sql_identifier AS character_set_schema,     (NULL::name)::information_schema.sql_identifier AS character_set_name,     (         CASE             WHEN (nco.nspname IS NOT NULL) THEN current_database()             ELSE NULL::name         END)::information_schema.sql_identifier AS collation_catalog,     (nco.nspname)::information_schema.sql_identifier AS collation_schema,     (co.collname)::information_schema.sql_identifier AS collation_name,     (information_schema._pg_numeric_precision(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS numeric_precision,     (information_schema._pg_numeric_precision_radix(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS numeric_precision_radix,     (information_schema._pg_numeric_scale(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS numeric_scale,     (information_schema._pg_datetime_precision(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS datetime_precision,     (information_schema._pg_interval_type(t.typbasetype, t.typtypmod))::information_schema.character_data AS interval_type,     (NULL::integer)::information_schema.cardinal_number AS interval_precision,     (t.typdefault)::information_schema.character_data AS domain_default,     (current_database())::information_schema.sql_identifier AS udt_catalog,     (nbt.nspname)::information_schema.sql_identifier AS udt_schema,     (bt.typname)::information_schema.sql_identifier AS udt_name,     (NULL::name)::information_schema.sql_identifier AS scope_catalog,     (NULL::name)::information_schema.sql_identifier AS scope_schema,     (NULL::name)::information_schema.sql_identifier AS scope_name,     (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,     (1)::information_schema.sql_identifier AS dtd_identifier    FROM (((pg_type t      JOIN pg_namespace nt ON ((t.typnamespace = nt.oid)))      JOIN (pg_type bt      JOIN pg_namespace nbt ON ((bt.typnamespace = nbt.oid))) ON (((t.typbasetype = bt.oid) AND (t.typtype = 'd'::"char"))))      LEFT JOIN (pg_collation co      JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((t.typcollation = co.oid) AND ((nco.nspname <> 'pg_catalog'::name) OR (co.collname <> 'default'::name)))))   WHERE (pg_has_role(t.typowner, 'USAGE'::text) OR has_type_privilege(t.oid, 'USAGE'::text))]]></view_script>
		</view>
		<view name="element_types" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS object_catalog,     (n.nspname)::information_schema.sql_identifier AS object_schema,     x.objname AS object_name,     (x.objtype)::information_schema.character_data AS object_type,     (x.objdtdid)::information_schema.sql_identifier AS collection_type_identifier,     (         CASE             WHEN (nbt.nspname = 'pg_catalog'::name) THEN format_type(bt.oid, NULL::integer)             ELSE 'USER-DEFINED'::text         END)::information_schema.character_data AS data_type,     (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,     (NULL::integer)::information_schema.cardinal_number AS character_octet_length,     (NULL::name)::information_schema.sql_identifier AS character_set_catalog,     (NULL::name)::information_schema.sql_identifier AS character_set_schema,     (NULL::name)::information_schema.sql_identifier AS character_set_name,     (         CASE             WHEN (nco.nspname IS NOT NULL) THEN current_database()             ELSE NULL::name         END)::information_schema.sql_identifier AS collation_catalog,     (nco.nspname)::information_schema.sql_identifier AS collation_schema,     (co.collname)::information_schema.sql_identifier AS collation_name,     (NULL::integer)::information_schema.cardinal_number AS numeric_precision,     (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,     (NULL::integer)::information_schema.cardinal_number AS numeric_scale,     (NULL::integer)::information_schema.cardinal_number AS datetime_precision,     (NULL::character varying)::information_schema.character_data AS interval_type,     (NULL::integer)::information_schema.cardinal_number AS interval_precision,     (NULL::character varying)::information_schema.character_data AS domain_default,     (current_database())::information_schema.sql_identifier AS udt_catalog,     (nbt.nspname)::information_schema.sql_identifier AS udt_schema,     (bt.typname)::information_schema.sql_identifier AS udt_name,     (NULL::name)::information_schema.sql_identifier AS scope_catalog,     (NULL::name)::information_schema.sql_identifier AS scope_schema,     (NULL::name)::information_schema.sql_identifier AS scope_name,     (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,     (('a'::text || (x.objdtdid)::text))::information_schema.sql_identifier AS dtd_identifier    FROM pg_namespace n,     pg_type at,     pg_namespace nbt,     pg_type bt,     (( SELECT c.relnamespace,             (c.relname)::information_schema.sql_identifier AS relname,                 CASE                     WHEN (c.relkind = 'c'::"char") THEN 'USER-DEFINED TYPE'::text                     ELSE 'TABLE'::text                 END AS "case",             a.attnum,             a.atttypid,             a.attcollation            FROM pg_class c,             pg_attribute a           WHERE ((c.oid = a.attrelid) AND (c.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'f'::"char", 'c'::"char", 'p'::"char"])) AND (a.attnum > 0) AND (NOT a.attisdropped))         UNION ALL          SELECT t.typnamespace,             (t.typname)::information_schema.sql_identifier AS typname,             'DOMAIN'::text AS text,             1,             t.typbasetype,             t.typcollation            FROM pg_type t           WHERE (t.typtype = 'd'::"char")         UNION ALL          SELECT ss.pronamespace,             (nameconcatoid(ss.proname, ss.oid))::information_schema.sql_identifier AS nameconcatoid,             'ROUTINE'::text AS text,             (ss.x).n AS n,             (ss.x).x AS x,             0            FROM ( SELECT p.pronamespace,                     p.proname,                     p.oid,                     information_schema._pg_expandarray(COALESCE(p.proallargtypes, (p.proargtypes)::oid[])) AS x                    FROM pg_proc p) ss         UNION ALL          SELECT p.pronamespace,             (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS nameconcatoid,             'ROUTINE'::text AS text,             0,             p.prorettype,             0            FROM pg_proc p) x(objschema, objname, objtype, objdtdid, objtypeid, objcollation)      LEFT JOIN (pg_collation co      JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((x.objcollation = co.oid) AND ((nco.nspname <> 'pg_catalog'::name) OR (co.collname <> 'default'::name)))))   WHERE ((n.oid = x.objschema) AND (at.oid = x.objtypeid) AND ((at.typelem <> (0)::oid) AND (at.typlen = '-1'::integer)) AND (at.typelem = bt.oid) AND (nbt.oid = bt.typnamespace) AND ((n.nspname, (x.objname)::name, x.objtype, ((x.objdtdid)::information_schema.sql_identifier)::name) IN ( SELECT data_type_privileges.object_schema,             data_type_privileges.object_name,             data_type_privileges.object_type,             data_type_privileges.dtd_identifier            FROM information_schema.data_type_privileges)))]]></view_script>
		</view>
		<view name="enabled_roles" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (a.rolname)::information_schema.sql_identifier AS role_name    FROM pg_authid a   WHERE pg_has_role(a.oid, 'USAGE'::text)]]></view_script>
		</view>
		<view name="foreign_data_wrapper_options" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}     ((pg_options_to_table(w.fdwoptions)).option_name)::information_schema.sql_identifier AS option_name,     ((pg_options_to_table(w.fdwoptions)).option_value)::information_schema.character_data AS option_value    FROM information_schema._pg_foreign_data_wrappers w]]></view_script>
		</view>
		<view name="foreign_data_wrappers" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}     (NULL::character varying)::information_schema.character_data AS library_name,     w.foreign_data_wrapper_language    FROM information_schema._pg_foreign_data_wrappers w]]></view_script>
		</view>
		<view name="foreign_server_options" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}     ((pg_options_to_table(s.srvoptions)).option_name)::information_schema.sql_identifier AS option_name,     ((pg_options_to_table(s.srvoptions)).option_value)::information_schema.character_data AS option_value    FROM information_schema._pg_foreign_servers s]]></view_script>
		</view>
		<view name="foreign_servers" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT _pg_foreign_servers.foreign_server_catalog,     _pg_foreign_servers.foreign_server_name,     _pg_foreign_servers.foreign_data_wrapper_catalog,     _pg_foreign_servers.foreign_data_wrapper_name,     _pg_foreign_servers.foreign_server_type,     _pg_foreign_servers.foreign_server_version,     _pg_foreign_servers.authorization_identifier    FROM information_schema._pg_foreign_servers]]></view_script>
		</view>
		<view name="foreign_table_options" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}     ((pg_options_to_table(t.ftoptions)).option_name)::information_schema.sql_identifier AS option_name,     ((pg_options_to_table(t.ftoptions)).option_value)::information_schema.character_data AS option_value    FROM information_schema._pg_foreign_tables t]]></view_script>
		</view>
		<view name="foreign_tables" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT _pg_foreign_tables.foreign_table_catalog,     _pg_foreign_tables.foreign_table_schema,     _pg_foreign_tables.foreign_table_name,     _pg_foreign_tables.foreign_server_catalog,     _pg_foreign_tables.foreign_server_name    FROM information_schema._pg_foreign_tables]]></view_script>
		</view>
		<view name="information_schema_catalog_name" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS catalog_name]]></view_script>
		</view>
		<view name="key_column_usage" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS constraint_catalog,     (ss.nc_nspname)::information_schema.sql_identifier AS constraint_schema,     (ss.conname)::information_schema.sql_identifier AS constraint_name,     (current_database())::information_schema.sql_identifier AS table_catalog,     (ss.nr_nspname)::information_schema.sql_identifier AS table_schema,     (ss.relname)::information_schema.sql_identifier AS table_name,     (a.attname)::information_schema.sql_identifier AS column_name,     ((ss.x).n)::information_schema.cardinal_number AS ordinal_position,     (         CASE             WHEN (ss.contype = 'f'::"char") THEN information_schema._pg_index_position(ss.conindid, ss.confkey[(ss.x).n])             ELSE NULL::integer         END)::information_schema.cardinal_number AS position_in_unique_constraint    FROM pg_attribute a,     ( SELECT r.oid AS roid,             r.relname,             r.relowner,             nc.nspname AS nc_nspname,             nr.nspname AS nr_nspname,             c.oid AS coid,             c.conname,             c.contype,             c.conindid,             c.confkey,             c.confrelid,             information_schema._pg_expandarray(c.conkey) AS x            FROM pg_namespace nr,             pg_class r,             pg_namespace nc,             pg_constraint c           WHERE ((nr.oid = r.relnamespace) AND (r.oid = c.conrelid) AND (nc.oid = c.connamespace) AND (c.contype = ANY (ARRAY['p'::"char", 'u'::"char", 'f'::"char"])) AND (r.relkind = ANY (ARRAY['r'::"char", 'p'::"char"])) AND (NOT pg_is_other_temp_schema(nr.oid)))) ss   WHERE ((ss.roid = a.attrelid) AND (a.attnum = (ss.x).x) AND (NOT a.attisdropped) AND (pg_has_role(ss.relowner, 'USAGE'::text) OR has_column_privilege(ss.roid, a.attnum, 'SELECT, INSERT, UPDATE, REFERENCES'::text)))]]></view_script>
		</view>
		<view name="parameters" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS specific_catalog,     (ss.n_nspname)::information_schema.sql_identifier AS specific_schema,     (nameconcatoid(ss.proname, ss.p_oid))::information_schema.sql_identifier AS specific_name,     ((ss.x).n)::information_schema.cardinal_number AS ordinal_position,     (         CASE             WHEN (ss.proargmodes IS NULL) THEN 'IN'::text             WHEN (ss.proargmodes[(ss.x).n] = 'i'::"char") THEN 'IN'::text             WHEN (ss.proargmodes[(ss.x).n] = 'o'::"char") THEN 'OUT'::text             WHEN (ss.proargmodes[(ss.x).n] = 'b'::"char") THEN 'INOUT'::text             WHEN (ss.proargmodes[(ss.x).n] = 'v'::"char") THEN 'IN'::text             WHEN (ss.proargmodes[(ss.x).n] = 't'::"char") THEN 'OUT'::text             ELSE NULL::text         END)::information_schema.character_data AS parameter_mode,     ('NO'::character varying)::information_schema.yes_or_no AS is_result,     ('NO'::character varying)::information_schema.yes_or_no AS as_locator,     (NULLIF(ss.proargnames[(ss.x).n], ''::text))::information_schema.sql_identifier AS parameter_name,     (         CASE             WHEN ((t.typelem <> (0)::oid) AND (t.typlen = '-1'::integer)) THEN 'ARRAY'::text             WHEN (nt.nspname = 'pg_catalog'::name) THEN format_type(t.oid, NULL::integer)             ELSE 'USER-DEFINED'::text         END)::information_schema.character_data AS data_type,     (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,     (NULL::integer)::information_schema.cardinal_number AS character_octet_length,     (NULL::name)::information_schema.sql_identifier AS character_set_catalog,     (NULL::name)::information_schema.sql_identifier AS character_set_schema,     (NULL::name)::information_schema.sql_identifier AS character_set_name,     (NULL::name)::information_schema.sql_identifier AS collation_catalog,     (NULL::name)::information_schema.sql_identifier AS collation_schema,     (NULL::name)::information_schema.sql_identifier AS collation_name,     (NULL::integer)::information_schema.cardinal_number AS numeric_precision,     (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,     (NULL::integer)::information_schema.cardinal_number AS numeric_scale,     (NULL::integer)::information_schema.cardinal_number AS datetime_precision,     (NULL::character varying)::information_schema.character_data AS interval_type,     (NULL::integer)::information_schema.cardinal_number AS interval_precision,     (current_database())::information_schema.sql_identifier AS udt_catalog,     (nt.nspname)::information_schema.sql_identifier AS udt_schema,     (t.typname)::information_schema.sql_identifier AS udt_name,     (NULL::name)::information_schema.sql_identifier AS scope_catalog,     (NULL::name)::information_schema.sql_identifier AS scope_schema,     (NULL::name)::information_schema.sql_identifier AS scope_name,     (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,     ((ss.x).n)::information_schema.sql_identifier AS dtd_identifier,     (         CASE             WHEN pg_has_role(ss.proowner, 'USAGE'::text) THEN pg_get_function_arg_default(ss.p_oid, (ss.x).n)             ELSE NULL::text         END)::information_schema.character_data AS parameter_default    FROM pg_type t,     pg_namespace nt,     ( SELECT n.nspname AS n_nspname,             p.proname,             p.oid AS p_oid,             p.proowner,             p.proargnames,             p.proargmodes,             information_schema._pg_expandarray(COALESCE(p.proallargtypes, (p.proargtypes)::oid[])) AS x            FROM pg_namespace n,             pg_proc p           WHERE ((n.oid = p.pronamespace) AND (pg_has_role(p.proowner, 'USAGE'::text) OR has_function_privilege(p.oid, 'EXECUTE'::text)))) ss   WHERE ((t.oid = (ss.x).x) AND (t.typnamespace = nt.oid))]]></view_script>
		</view>
		<view name="referential_constraints" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS constraint_catalog,     (ncon.nspname)::information_schema.sql_identifier AS constraint_schema,     (con.conname)::information_schema.sql_identifier AS constraint_name,     (         CASE             WHEN (npkc.nspname IS NULL) THEN NULL::name             ELSE current_database()         END)::information_schema.sql_identifier AS unique_constraint_catalog,     (npkc.nspname)::information_schema.sql_identifier AS unique_constraint_schema,     (pkc.conname)::information_schema.sql_identifier AS unique_constraint_name,     (         CASE con.confmatchtype             WHEN 'f'::"char" THEN 'FULL'::text             WHEN 'p'::"char" THEN 'PARTIAL'::text             WHEN 's'::"char" THEN 'NONE'::text             ELSE NULL::text         END)::information_schema.character_data AS match_option,     (         CASE con.confupdtype             WHEN 'c'::"char" THEN 'CASCADE'::text             WHEN 'n'::"char" THEN 'SET NULL'::text             WHEN 'd'::"char" THEN 'SET DEFAULT'::text             WHEN 'r'::"char" THEN 'RESTRICT'::text             WHEN 'a'::"char" THEN 'NO ACTION'::text             ELSE NULL::text         END)::information_schema.character_data AS update_rule,     (         CASE con.confdeltype             WHEN 'c'::"char" THEN 'CASCADE'::text             WHEN 'n'::"char" THEN 'SET NULL'::text             WHEN 'd'::"char" THEN 'SET DEFAULT'::text             WHEN 'r'::"char" THEN 'RESTRICT'::text             WHEN 'a'::"char" THEN 'NO ACTION'::text             ELSE NULL::text         END)::information_schema.character_data AS delete_rule    FROM ((((((pg_namespace ncon      JOIN pg_constraint con ON ((ncon.oid = con.connamespace)))      JOIN pg_class c ON (((con.conrelid = c.oid) AND (con.contype = 'f'::"char"))))      LEFT JOIN pg_depend d1 ON (((d1.objid = con.oid) AND (d1.classid = ('pg_constraint'::regclass)::oid) AND (d1.refclassid = ('pg_class'::regclass)::oid) AND (d1.refobjsubid = 0))))      LEFT JOIN pg_depend d2 ON (((d2.refclassid = ('pg_constraint'::regclass)::oid) AND (d2.classid = ('pg_class'::regclass)::oid) AND (d2.objid = d1.refobjid) AND (d2.objsubid = 0) AND (d2.deptype = 'i'::"char"))))      LEFT JOIN pg_constraint pkc ON (((pkc.oid = d2.refobjid) AND (pkc.contype = ANY (ARRAY['p'::"char", 'u'::"char"])) AND (pkc.conrelid = con.confrelid))))      LEFT JOIN pg_namespace npkc ON ((pkc.connamespace = npkc.oid)))   WHERE (pg_has_role(c.relowner, 'USAGE'::text) OR has_table_privilege(c.oid, 'INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'::text) OR has_any_column_privilege(c.oid, 'INSERT, UPDATE, REFERENCES'::text))]]></view_script>
		</view>
		<view name="role_column_grants" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (((column_privileges.grantor)::name IN ( SELECT enabled_roles.role_name            FROM information_schema.enabled_roles)) OR ((column_privileges.grantee)::name IN ( SELECT enabled_roles.role_name            FROM information_schema.enabled_roles)))]]></view_script>
		</view>
		<view name="role_routine_grants" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (((routine_privileges.grantor)::name IN ( SELECT enabled_roles.role_name            FROM information_schema.enabled_roles)) OR ((routine_privileges.grantee)::name IN ( SELECT enabled_roles.role_name            FROM information_schema.enabled_roles)))]]></view_script>
		</view>
		<view name="role_table_grants" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (((table_privileges.grantor)::name IN ( SELECT enabled_roles.role_name            FROM information_schema.enabled_roles)) OR ((table_privileges.grantee)::name IN ( SELECT enabled_roles.role_name            FROM information_schema.enabled_roles)))]]></view_script>
		</view>
		<view name="role_udt_grants" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (((udt_privileges.grantor)::name IN ( SELECT enabled_roles.role_name            FROM information_schema.enabled_roles)) OR ((udt_privileges.grantee)::name IN ( SELECT enabled_roles.role_name            FROM information_schema.enabled_roles)))]]></view_script>
		</view>
		<view name="role_usage_grants" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (((usage_privileges.grantor)::name IN ( SELECT enabled_roles.role_name            FROM information_schema.enabled_roles)) OR ((usage_privileges.grantee)::name IN ( SELECT enabled_roles.role_name            FROM information_schema.enabled_roles)))]]></view_script>
		</view>
		<view name="routine_privileges" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (u_grantor.rolname)::information_schema.sql_identifier AS grantor,     (grantee.rolname)::information_schema.sql_identifier AS grantee,     (current_database())::information_schema.sql_identifier AS specific_catalog,     (n.nspname)::information_schema.sql_identifier AS specific_schema,     (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,     (current_database())::information_schema.sql_identifier AS routine_catalog,     (n.nspname)::information_schema.sql_identifier AS routine_schema,     (p.proname)::information_schema.sql_identifier AS routine_name,     ('EXECUTE'::character varying)::information_schema.character_data AS privilege_type,     (         CASE             WHEN (pg_has_role(grantee.oid, p.proowner, 'USAGE'::text) OR p.grantable) THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS is_grantable    FROM ( SELECT pg_proc.oid,             pg_proc.proname,             pg_proc.proowner,             pg_proc.pronamespace,             (aclexplode(COALESCE(pg_proc.proacl, acldefault('f'::"char", pg_proc.proowner)))).grantor AS grantor,             (aclexplode(COALESCE(pg_proc.proacl, acldefault('f'::"char", pg_proc.proowner)))).grantee AS grantee,             (aclexplode(COALESCE(pg_proc.proacl, acldefault('f'::"char", pg_proc.proowner)))).privilege_type AS privilege_type,             (aclexplode(COALESCE(pg_proc.proacl, acldefault('f'::"char", pg_proc.proowner)))).is_grantable AS is_grantable            FROM pg_proc) p(oid, proname, proowner, pronamespace, grantor, grantee, prtype, grantable),     pg_namespace n,     pg_authid u_grantor,     ( SELECT pg_authid.oid,             pg_authid.rolname            FROM pg_authid         UNION ALL          SELECT (0)::oid AS oid,             'PUBLIC'::name) grantee(oid, rolname)   WHERE ((p.pronamespace = n.oid) AND (grantee.oid = p.grantee) AND (u_grantor.oid = p.grantor) AND (p.prtype = 'EXECUTE'::text) AND (pg_has_role(u_grantor.oid, 'USAGE'::text) OR pg_has_role(grantee.oid, 'USAGE'::text) OR (grantee.rolname = 'PUBLIC'::name)))]]></view_script>
		</view>
		<view name="routines" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS specific_catalog,     (n.nspname)::information_schema.sql_identifier AS specific_schema,     (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,     (current_database())::information_schema.sql_identifier AS routine_catalog,     (n.nspname)::information_schema.sql_identifier AS routine_schema,     (p.proname)::information_schema.sql_identifier AS routine_name,     (         CASE p.prokind             WHEN 'f'::"char" THEN 'FUNCTION'::text             WHEN 'p'::"char" THEN 'PROCEDURE'::text             ELSE NULL::text         END)::information_schema.character_data AS routine_type,     (NULL::name)::information_schema.sql_identifier AS module_catalog,     (NULL::name)::information_schema.sql_identifier AS module_schema,     (NULL::name)::information_schema.sql_identifier AS module_name,     (NULL::name)::information_schema.sql_identifier AS udt_catalog,     (NULL::name)::information_schema.sql_identifier AS udt_schema,     (NULL::name)::information_schema.sql_identifier AS udt_name,     (         CASE             WHEN (p.prokind = 'p'::"char") THEN NULL::text             WHEN ((t.typelem <> (0)::oid) AND (t.typlen = '-1'::integer)) THEN 'ARRAY'::text             WHEN (nt.nspname = 'pg_catalog'::name) THEN format_type(t.oid, NULL::integer)             ELSE 'USER-DEFINED'::text         END)::information_schema.character_data AS data_type,     (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,     (NULL::integer)::information_schema.cardinal_number AS character_octet_length,     (NULL::name)::information_schema.sql_identifier AS character_set_catalog,     (NULL::name)::information_schema.sql_identifier AS character_set_schema,     (NULL::name)::information_schema.sql_identifier AS character_set_name,     (NULL::name)::information_schema.sql_identifier AS collation_catalog,     (NULL::name)::information_schema.sql_identifier AS collation_schema,     (NULL::name)::information_schema.sql_identifier AS collation_name,     (NULL::integer)::information_schema.cardinal_number AS numeric_precision,     (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,     (NULL::integer)::information_schema.cardinal_number AS numeric_scale,     (NULL::integer)::information_schema.cardinal_number AS datetime_precision,     (NULL::character varying)::information_schema.character_data AS interval_type,     (NULL::integer)::information_schema.cardinal_number AS interval_precision,     (         CASE             WHEN (nt.nspname IS NOT NULL) THEN current_database()             ELSE NULL::name         END)::information_schema.sql_identifier AS type_udt_catalog,     (nt.nspname)::information_schema.sql_identifier AS type_udt_schema,     (t.typname)::information_schema.sql_identifier AS type_udt_name,     (NULL::name)::information_schema.sql_identifier AS scope_catalog,     (NULL::name)::information_schema.sql_identifier AS scope_schema,     (NULL::name)::information_schema.sql_identifier AS scope_name,     (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,     (         CASE             WHEN (p.prokind <> 'p'::"char") THEN 0             ELSE NULL::integer         END)::information_schema.sql_identifier AS dtd_identifier,     (         CASE             WHEN (l.lanname = 'sql'::name) THEN 'SQL'::text             ELSE 'EXTERNAL'::text         END)::information_schema.character_data AS routine_body,     (         CASE             WHEN pg_has_role(p.proowner, 'USAGE'::text) THEN p.prosrc             ELSE NULL::text         END)::information_schema.character_data AS routine_definition,     (         CASE             WHEN (l.lanname = 'c'::name) THEN p.prosrc             ELSE NULL::text         END)::information_schema.character_data AS external_name,     (upper((l.lanname)::text))::information_schema.character_data AS external_language,     ('GENERAL'::character varying)::information_schema.character_data AS parameter_style,     (         CASE             WHEN (p.provolatile = 'i'::"char") THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS is_deterministic,     ('MODIFIES'::character varying)::information_schema.character_data AS sql_data_access,     (         CASE             WHEN (p.prokind <> 'p'::"char") THEN             CASE                 WHEN p.proisstrict THEN 'YES'::text                 ELSE 'NO'::text             END             ELSE NULL::text         END)::information_schema.yes_or_no AS is_null_call,     (NULL::character varying)::information_schema.character_data AS sql_path,     ('YES'::character varying)::information_schema.yes_or_no AS schema_level_routine,     (0)::information_schema.cardinal_number AS max_dynamic_result_sets,     (NULL::character varying)::information_schema.yes_or_no AS is_user_defined_cast,     (NULL::character varying)::information_schema.yes_or_no AS is_implicitly_invocable,     (         CASE             WHEN p.prosecdef THEN 'DEFINER'::text             ELSE 'INVOKER'::text         END)::information_schema.character_data AS security_type,     (NULL::name)::information_schema.sql_identifier AS to_sql_specific_catalog,     (NULL::name)::information_schema.sql_identifier AS to_sql_specific_schema,     (NULL::name)::information_schema.sql_identifier AS to_sql_specific_name,     ('NO'::character varying)::information_schema.yes_or_no AS as_locator,     (NULL::timestamp with time zone)::information_schema.time_stamp AS created,     (NULL::timestamp with time zone)::information_schema.time_stamp AS last_altered,     (NULL::character varying)::information_schema.yes_or_no AS new_savepoint_level,     ('NO'::character varying)::information_schema.yes_or_no AS is_udt_dependent,     (NULL::character varying)::information_schema.character_data AS result_cast_from_data_type,     (NULL::character varying)::information_schema.yes_or_no AS result_cast_as_locator,     (NULL::integer)::information_schema.cardinal_number AS result_cast_char_max_length,     (NULL::integer)::information_schema.cardinal_number AS result_cast_char_octet_length,     (NULL::name)::information_schema.sql_identifier AS result_cast_char_set_catalog,     (NULL::name)::information_schema.sql_identifier AS result_cast_char_set_schema,     (NULL::name)::information_schema.sql_identifier AS result_cast_char_set_name,     (NULL::name)::information_schema.sql_identifier AS result_cast_collation_catalog,     (NULL::name)::information_schema.sql_identifier AS result_cast_collation_schema,     (NULL::name)::information_schema.sql_identifier AS result_cast_collation_name,     (NULL::integer)::information_schema.cardinal_number AS result_cast_numeric_precision,     (NULL::integer)::information_schema.cardinal_number AS result_cast_numeric_precision_radix,     (NULL::integer)::information_schema.cardinal_number AS result_cast_numeric_scale,     (NULL::integer)::information_schema.cardinal_number AS result_cast_datetime_precision,     (NULL::character varying)::information_schema.character_data AS result_cast_interval_type,     (NULL::integer)::information_schema.cardinal_number AS result_cast_interval_precision,     (NULL::name)::information_schema.sql_identifier AS result_cast_type_udt_catalog,     (NULL::name)::information_schema.sql_identifier AS result_cast_type_udt_schema,     (NULL::name)::information_schema.sql_identifier AS result_cast_type_udt_name,     (NULL::name)::information_schema.sql_identifier AS result_cast_scope_catalog,     (NULL::name)::information_schema.sql_identifier AS result_cast_scope_schema,     (NULL::name)::information_schema.sql_identifier AS result_cast_scope_name,     (NULL::integer)::information_schema.cardinal_number AS result_cast_maximum_cardinality,     (NULL::name)::information_schema.sql_identifier AS result_cast_dtd_identifier    FROM (((pg_namespace n      JOIN pg_proc p ON ((n.oid = p.pronamespace)))      JOIN pg_language l ON ((p.prolang = l.oid)))      LEFT JOIN (pg_type t      JOIN pg_namespace nt ON ((t.typnamespace = nt.oid))) ON (((p.prorettype = t.oid) AND (p.prokind <> 'p'::"char"))))   WHERE (pg_has_role(p.proowner, 'USAGE'::text) OR has_function_privilege(p.oid, 'EXECUTE'::text))]]></view_script>
		</view>
		<view name="schemata" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS catalog_name,     (n.nspname)::information_schema.sql_identifier AS schema_name,     (u.rolname)::information_schema.sql_identifier AS schema_owner,     (NULL::name)::information_schema.sql_identifier AS default_character_set_catalog,     (NULL::name)::information_schema.sql_identifier AS default_character_set_schema,     (NULL::name)::information_schema.sql_identifier AS default_character_set_name,     (NULL::character varying)::information_schema.character_data AS sql_path    FROM pg_namespace n,     pg_authid u   WHERE ((n.nspowner = u.oid) AND (pg_has_role(n.nspowner, 'USAGE'::text) OR has_schema_privilege(n.oid, 'CREATE, USAGE'::text)))]]></view_script>
		</view>
		<view name="sequences" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS sequence_catalog,     (nc.nspname)::information_schema.sql_identifier AS sequence_schema,     (c.relname)::information_schema.sql_identifier AS sequence_name,     (format_type(s.seqtypid, NULL::integer))::information_schema.character_data AS data_type,     (information_schema._pg_numeric_precision(s.seqtypid, '-1'::integer))::information_schema.cardinal_number AS numeric_precision,     (2)::information_schema.cardinal_number AS numeric_precision_radix,     (0)::information_schema.cardinal_number AS numeric_scale,     (s.seqstart)::information_schema.character_data AS start_value,     (s.seqmin)::information_schema.character_data AS minimum_value,     (s.seqmax)::information_schema.character_data AS maximum_value,     (s.seqincrement)::information_schema.character_data AS increment,     (         CASE             WHEN s.seqcycle THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS cycle_option    FROM pg_namespace nc,     pg_class c,     pg_sequence s   WHERE ((c.relnamespace = nc.oid) AND (c.relkind = 'S'::"char") AND (NOT (EXISTS ( SELECT 1            FROM pg_depend           WHERE ((pg_depend.classid = ('pg_class'::regclass)::oid) AND (pg_depend.objid = c.oid) AND (pg_depend.deptype = 'i'::"char"))))) AND (NOT pg_is_other_temp_schema(nc.oid)) AND (c.oid = s.seqrelid) AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_sequence_privilege(c.oid, 'SELECT, UPDATE, USAGE'::text)))]]></view_script>
		</view>
		<view name="table_constraints" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS constraint_catalog,     (nc.nspname)::information_schema.sql_identifier AS constraint_schema,     (c.conname)::information_schema.sql_identifier AS constraint_name,     (current_database())::information_schema.sql_identifier AS table_catalog,     (nr.nspname)::information_schema.sql_identifier AS table_schema,     (r.relname)::information_schema.sql_identifier AS table_name,     (         CASE c.contype             WHEN 'c'::"char" THEN 'CHECK'::text             WHEN 'f'::"char" THEN 'FOREIGN KEY'::text             WHEN 'p'::"char" THEN 'PRIMARY KEY'::text             WHEN 'u'::"char" THEN 'UNIQUE'::text             ELSE NULL::text         END)::information_schema.character_data AS constraint_type,     (         CASE             WHEN c.condeferrable THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS is_deferrable,     (         CASE             WHEN c.condeferred THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS initially_deferred,     ('YES'::character varying)::information_schema.yes_or_no AS enforced    FROM pg_namespace nc,     pg_namespace nr,     pg_constraint c,     pg_class r   WHERE ((nc.oid = c.connamespace) AND (nr.oid = r.relnamespace) AND (c.conrelid = r.oid) AND (c.contype <> ALL (ARRAY['t'::"char", 'x'::"char"])) AND (r.relkind = ANY (ARRAY['r'::"char", 'p'::"char"])) AND (NOT pg_is_other_temp_schema(nr.oid)) AND (pg_has_role(r.relowner, 'USAGE'::text) OR has_table_privilege(r.oid, 'INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'::text) OR has_any_column_privilege(r.oid, 'INSERT, UPDATE, REFERENCES'::text))) UNION ALL  SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,     (nr.nspname)::information_schema.sql_identifier AS constraint_schema,     (((((((nr.oid)::text || '_'::text) || (r.oid)::text) || '_'::text) || (a.attnum)::text) || '_not_null'::text))::information_schema.sql_identifier AS constraint_name,     (current_database())::information_schema.sql_identifier AS table_catalog,     (nr.nspname)::information_schema.sql_identifier AS table_schema,     (r.relname)::information_schema.sql_identifier AS table_name,     ('CHECK'::character varying)::information_schema.character_data AS constraint_type,     ('NO'::character varying)::information_schema.yes_or_no AS is_deferrable,     ('NO'::character varying)::information_schema.yes_or_no AS initially_deferred,     ('YES'::character varying)::information_schema.yes_or_no AS enforced    FROM pg_namespace nr,     pg_class r,     pg_attribute a   WHERE ((nr.oid = r.relnamespace) AND (r.oid = a.attrelid) AND a.attnotnull AND (a.attnum > 0) AND (NOT a.attisdropped) AND (r.relkind = ANY (ARRAY['r'::"char", 'p'::"char"])) AND (NOT pg_is_other_temp_schema(nr.oid)) AND (pg_has_role(r.relowner, 'USAGE'::text) OR has_table_privilege(r.oid, 'INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'::text) OR has_any_column_privilege(r.oid, 'INSERT, UPDATE, REFERENCES'::text)))]]></view_script>
		</view>
		<view name="table_privileges" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (u_grantor.rolname)::information_schema.sql_identifier AS grantor,     (grantee.rolname)::information_schema.sql_identifier AS grantee,     (current_database())::information_schema.sql_identifier AS table_catalog,     (nc.nspname)::information_schema.sql_identifier AS table_schema,     (c.relname)::information_schema.sql_identifier AS table_name,     (c.prtype)::information_schema.character_data AS privilege_type,     (         CASE             WHEN (pg_has_role(grantee.oid, c.relowner, 'USAGE'::text) OR c.grantable) THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS is_grantable,     (         CASE             WHEN (c.prtype = 'SELECT'::text) THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS with_hierarchy    FROM ( SELECT pg_class.oid,             pg_class.relname,             pg_class.relnamespace,             pg_class.relkind,             pg_class.relowner,             (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::"char", pg_class.relowner)))).grantor AS grantor,             (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::"char", pg_class.relowner)))).grantee AS grantee,             (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::"char", pg_class.relowner)))).privilege_type AS privilege_type,             (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::"char", pg_class.relowner)))).is_grantable AS is_grantable            FROM pg_class) c(oid, relname, relnamespace, relkind, relowner, grantor, grantee, prtype, grantable),     pg_namespace nc,     pg_authid u_grantor,     ( SELECT pg_authid.oid,             pg_authid.rolname            FROM pg_authid         UNION ALL          SELECT (0)::oid AS oid,             'PUBLIC'::name) grantee(oid, rolname)   WHERE ((c.relnamespace = nc.oid) AND (c.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'f'::"char", 'p'::"char"])) AND (c.grantee = grantee.oid) AND (c.grantor = u_grantor.oid) AND (c.prtype = ANY (ARRAY['INSERT'::text, 'SELECT'::text, 'UPDATE'::text, 'DELETE'::text, 'TRUNCATE'::text, 'REFERENCES'::text, 'TRIGGER'::text])) AND (pg_has_role(u_grantor.oid, 'USAGE'::text) OR pg_has_role(grantee.oid, 'USAGE'::text) OR (grantee.rolname = 'PUBLIC'::name)))]]></view_script>
		</view>
		<view name="tables" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS table_catalog,     (nc.nspname)::information_schema.sql_identifier AS table_schema,     (c.relname)::information_schema.sql_identifier AS table_name,     (         CASE             WHEN (nc.oid = pg_my_temp_schema()) THEN 'LOCAL TEMPORARY'::text             WHEN (c.relkind = ANY (ARRAY['r'::"char", 'p'::"char"])) THEN 'BASE TABLE'::text             WHEN (c.relkind = 'v'::"char") THEN 'VIEW'::text             WHEN (c.relkind = 'f'::"char") THEN 'FOREIGN'::text             ELSE NULL::text         END)::information_schema.character_data AS table_type,     (NULL::name)::information_schema.sql_identifier AS self_referencing_column_name,     (NULL::character varying)::information_schema.character_data AS reference_generation,     (         CASE             WHEN (t.typname IS NOT NULL) THEN current_database()             ELSE NULL::name         END)::information_schema.sql_identifier AS user_defined_type_catalog,     (nt.nspname)::information_schema.sql_identifier AS user_defined_type_schema,     (t.typname)::information_schema.sql_identifier AS user_defined_type_name,     (         CASE             WHEN ((c.relkind = ANY (ARRAY['r'::"char", 'p'::"char"])) OR ((c.relkind = ANY (ARRAY['v'::"char", 'f'::"char"])) AND ((pg_relation_is_updatable((c.oid)::regclass, false) & 8) = 8))) THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS is_insertable_into,     (         CASE             WHEN (t.typname IS NOT NULL) THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS is_typed,     (NULL::character varying)::information_schema.character_data AS commit_action    FROM ((pg_namespace nc      JOIN pg_class c ON ((nc.oid = c.relnamespace)))      LEFT JOIN (pg_type t      JOIN pg_namespace nt ON ((t.typnamespace = nt.oid))) ON ((c.reloftype = t.oid)))   WHERE ((c.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'f'::"char", 'p'::"char"])) AND (NOT pg_is_other_temp_schema(nc.oid)) AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_table_privilege(c.oid, 'SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'::text) OR has_any_column_privilege(c.oid, 'SELECT, INSERT, UPDATE, REFERENCES'::text)))]]></view_script>
		</view>
		<view name="transforms" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS udt_catalog,     (nt.nspname)::information_schema.sql_identifier AS udt_schema,     (t.typname)::information_schema.sql_identifier AS udt_name,     (current_database())::information_schema.sql_identifier AS specific_catalog,     (np.nspname)::information_schema.sql_identifier AS specific_schema,     (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,     (l.lanname)::information_schema.sql_identifier AS group_name,     ('FROM SQL'::character varying)::information_schema.character_data AS transform_type    FROM (((((pg_type t      JOIN pg_transform x ON ((t.oid = x.trftype)))      JOIN pg_language l ON ((x.trflang = l.oid)))      JOIN pg_proc p ON (((x.trffromsql)::oid = p.oid)))      JOIN pg_namespace nt ON ((t.typnamespace = nt.oid)))      JOIN pg_namespace np ON ((p.pronamespace = np.oid))) UNION  SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,     (nt.nspname)::information_schema.sql_identifier AS udt_schema,     (t.typname)::information_schema.sql_identifier AS udt_name,     (current_database())::information_schema.sql_identifier AS specific_catalog,     (np.nspname)::information_schema.sql_identifier AS specific_schema,     (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,     (l.lanname)::information_schema.sql_identifier AS group_name,     ('TO SQL'::character varying)::information_schema.character_data AS transform_type    FROM (((((pg_type t      JOIN pg_transform x ON ((t.oid = x.trftype)))      JOIN pg_language l ON ((x.trflang = l.oid)))      JOIN pg_proc p ON (((x.trftosql)::oid = p.oid)))      JOIN pg_namespace nt ON ((t.typnamespace = nt.oid)))      JOIN pg_namespace np ON ((p.pronamespace = np.oid)))   ORDER BY 1, 2, 3, 7, 8]]></view_script>
		</view>
		<view name="triggered_update_columns" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS trigger_catalog,     (n.nspname)::information_schema.sql_identifier AS trigger_schema,     (t.tgname)::information_schema.sql_identifier AS trigger_name,     (current_database())::information_schema.sql_identifier AS event_object_catalog,     (n.nspname)::information_schema.sql_identifier AS event_object_schema,     (c.relname)::information_schema.sql_identifier AS event_object_table,     (a.attname)::information_schema.sql_identifier AS event_object_column    FROM pg_namespace n,     pg_class c,     pg_trigger t,     ( SELECT ta0.tgoid,             (ta0.tgat).x AS tgattnum,             (ta0.tgat).n AS tgattpos            FROM ( SELECT pg_trigger.oid AS tgoid,                     information_schema._pg_expandarray(pg_trigger.tgattr) AS tgat                    FROM pg_trigger) ta0) ta,     pg_attribute a   WHERE ((n.oid = c.relnamespace) AND (c.oid = t.tgrelid) AND (t.oid = ta.tgoid) AND ((a.attrelid = t.tgrelid) AND (a.attnum = ta.tgattnum)) AND (NOT t.tgisinternal) AND (NOT pg_is_other_temp_schema(n.oid)) AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_column_privilege(c.oid, a.attnum, 'INSERT, UPDATE, REFERENCES'::text)))]]></view_script>
		</view>
		<view name="triggers" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS trigger_catalog,     (n.nspname)::information_schema.sql_identifier AS trigger_schema,     (t.tgname)::information_schema.sql_identifier AS trigger_name,     (em.text)::information_schema.character_data AS event_manipulation,     (current_database())::information_schema.sql_identifier AS event_object_catalog,     (n.nspname)::information_schema.sql_identifier AS event_object_schema,     (c.relname)::information_schema.sql_identifier AS event_object_table,     (rank() OVER (PARTITION BY (n.nspname)::information_schema.sql_identifier, (c.relname)::information_schema.sql_identifier, em.num, ((t.tgtype)::integer & 1), ((t.tgtype)::integer & 66) ORDER BY t.tgname))::information_schema.cardinal_number AS action_order,     (         CASE             WHEN pg_has_role(c.relowner, 'USAGE'::text) THEN (regexp_match(pg_get_triggerdef(t.oid), '.{35,} WHEN \((.+)\) EXECUTE FUNCTION'::text))[1]             ELSE NULL::text         END)::information_schema.character_data AS action_condition,     ("substring"(pg_get_triggerdef(t.oid), ("position"("substring"(pg_get_triggerdef(t.oid), 48), 'EXECUTE FUNCTION'::text) + 47)))::information_schema.character_data AS action_statement,     (         CASE ((t.tgtype)::integer & 1)             WHEN 1 THEN 'ROW'::text             ELSE 'STATEMENT'::text         END)::information_schema.character_data AS action_orientation,     (         CASE ((t.tgtype)::integer & 66)             WHEN 2 THEN 'BEFORE'::text             WHEN 64 THEN 'INSTEAD OF'::text             ELSE 'AFTER'::text         END)::information_schema.character_data AS action_timing,     (t.tgoldtable)::information_schema.sql_identifier AS action_reference_old_table,     (t.tgnewtable)::information_schema.sql_identifier AS action_reference_new_table,     (NULL::name)::information_schema.sql_identifier AS action_reference_old_row,     (NULL::name)::information_schema.sql_identifier AS action_reference_new_row,     (NULL::timestamp with time zone)::information_schema.time_stamp AS created    FROM pg_namespace n,     pg_class c,     pg_trigger t,     ( VALUES (4,'INSERT'::text), (8,'DELETE'::text), (16,'UPDATE'::text)) em(num, text)   WHERE ((n.oid = c.relnamespace) AND (c.oid = t.tgrelid) AND (((t.tgtype)::integer & em.num) <> 0) AND (NOT t.tgisinternal) AND (NOT pg_is_other_temp_schema(n.oid)) AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_table_privilege(c.oid, 'INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'::text) OR has_any_column_privilege(c.oid, 'INSERT, UPDATE, REFERENCES'::text)))]]></view_script>
		</view>
		<view name="udt_privileges" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (u_grantor.rolname)::information_schema.sql_identifier AS grantor,     (grantee.rolname)::information_schema.sql_identifier AS grantee,     (current_database())::information_schema.sql_identifier AS udt_catalog,     (n.nspname)::information_schema.sql_identifier AS udt_schema,     (t.typname)::information_schema.sql_identifier AS udt_name,     ('TYPE USAGE'::character varying)::information_schema.character_data AS privilege_type,     (         CASE             WHEN (pg_has_role(grantee.oid, t.typowner, 'USAGE'::text) OR t.grantable) THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS is_grantable    FROM ( SELECT pg_type.oid,             pg_type.typname,             pg_type.typnamespace,             pg_type.typtype,             pg_type.typowner,             (aclexplode(COALESCE(pg_type.typacl, acldefault('T'::"char", pg_type.typowner)))).grantor AS grantor,             (aclexplode(COALESCE(pg_type.typacl, acldefault('T'::"char", pg_type.typowner)))).grantee AS grantee,             (aclexplode(COALESCE(pg_type.typacl, acldefault('T'::"char", pg_type.typowner)))).privilege_type AS privilege_type,             (aclexplode(COALESCE(pg_type.typacl, acldefault('T'::"char", pg_type.typowner)))).is_grantable AS is_grantable            FROM pg_type) t(oid, typname, typnamespace, typtype, typowner, grantor, grantee, prtype, grantable),     pg_namespace n,     pg_authid u_grantor,     ( SELECT pg_authid.oid,             pg_authid.rolname            FROM pg_authid         UNION ALL          SELECT (0)::oid AS oid,             'PUBLIC'::name) grantee(oid, rolname)   WHERE ((t.typnamespace = n.oid) AND (t.typtype = 'c'::"char") AND (t.grantee = grantee.oid) AND (t.grantor = u_grantor.oid) AND (t.prtype = 'USAGE'::text) AND (pg_has_role(u_grantor.oid, 'USAGE'::text) OR pg_has_role(grantee.oid, 'USAGE'::text) OR (grantee.rolname = 'PUBLIC'::name)))]]></view_script>
		</view>
		<view name="usage_privileges" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (u.rolname)::information_schema.sql_identifier AS grantor,     ('PUBLIC'::name)::information_schema.sql_identifier AS grantee,     (current_database())::information_schema.sql_identifier AS object_catalog,     (n.nspname)::information_schema.sql_identifier AS object_schema,     (c.collname)::information_schema.sql_identifier AS object_name,     ('COLLATION'::character varying)::information_schema.character_data AS object_type,     ('USAGE'::character varying)::information_schema.character_data AS privilege_type,     ('NO'::character varying)::information_schema.yes_or_no AS is_grantable    FROM pg_authid u,     pg_namespace n,     pg_collation c   WHERE ((u.oid = c.collowner) AND (c.collnamespace = n.oid) AND (c.collencoding = ANY (ARRAY['-1'::integer, ( SELECT pg_database.encoding            FROM pg_database           WHERE (pg_database.datname = current_database()))]))) UNION ALL  SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,     (grantee.rolname)::information_schema.sql_identifier AS grantee,     (current_database())::information_schema.sql_identifier AS object_catalog,     (n.nspname)::information_schema.sql_identifier AS object_schema,     (t.typname)::information_schema.sql_identifier AS object_name,     ('DOMAIN'::character varying)::information_schema.character_data AS object_type,     ('USAGE'::character varying)::information_schema.character_data AS privilege_type,     (         CASE             WHEN (pg_has_role(grantee.oid, t.typowner, 'USAGE'::text) OR t.grantable) THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS is_grantable    FROM ( SELECT pg_type.oid,             pg_type.typname,             pg_type.typnamespace,             pg_type.typtype,             pg_type.typowner,             (aclexplode(COALESCE(pg_type.typacl, acldefault('T'::"char", pg_type.typowner)))).grantor AS grantor,             (aclexplode(COALESCE(pg_type.typacl, acldefault('T'::"char", pg_type.typowner)))).grantee AS grantee,             (aclexplode(COALESCE(pg_type.typacl, acldefault('T'::"char", pg_type.typowner)))).privilege_type AS privilege_type,             (aclexplode(COALESCE(pg_type.typacl, acldefault('T'::"char", pg_type.typowner)))).is_grantable AS is_grantable            FROM pg_type) t(oid, typname, typnamespace, typtype, typowner, grantor, grantee, prtype, grantable),     pg_namespace n,     pg_authid u_grantor,     ( SELECT pg_authid.oid,             pg_authid.rolname            FROM pg_authid         UNION ALL          SELECT (0)::oid AS oid,             'PUBLIC'::name) grantee(oid, rolname)   WHERE ((t.typnamespace = n.oid) AND (t.typtype = 'd'::"char") AND (t.grantee = grantee.oid) AND (t.grantor = u_grantor.oid) AND (t.prtype = 'USAGE'::text) AND (pg_has_role(u_grantor.oid, 'USAGE'::text) OR pg_has_role(grantee.oid, 'USAGE'::text) OR (grantee.rolname = 'PUBLIC'::name))) UNION ALL  SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,     (grantee.rolname)::information_schema.sql_identifier AS grantee,     (current_database())::information_schema.sql_identifier AS object_catalog,     (''::name)::information_schema.sql_identifier AS object_schema,     (fdw.fdwname)::information_schema.sql_identifier AS object_name,     ('FOREIGN DATA WRAPPER'::character varying)::information_schema.character_data AS object_type,     ('USAGE'::character varying)::information_schema.character_data AS privilege_type,     (         CASE             WHEN (pg_has_role(grantee.oid, fdw.fdwowner, 'USAGE'::text) OR fdw.grantable) THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS is_grantable    FROM ( SELECT pg_foreign_data_wrapper.fdwname,             pg_foreign_data_wrapper.fdwowner,             (aclexplode(COALESCE(pg_foreign_data_wrapper.fdwacl, acldefault('F'::"char", pg_foreign_data_wrapper.fdwowner)))).grantor AS grantor,             (aclexplode(COALESCE(pg_foreign_data_wrapper.fdwacl, acldefault('F'::"char", pg_foreign_data_wrapper.fdwowner)))).grantee AS grantee,             (aclexplode(COALESCE(pg_foreign_data_wrapper.fdwacl, acldefault('F'::"char", pg_foreign_data_wrapper.fdwowner)))).privilege_type AS privilege_type,             (aclexplode(COALESCE(pg_foreign_data_wrapper.fdwacl, acldefault('F'::"char", pg_foreign_data_wrapper.fdwowner)))).is_grantable AS is_grantable            FROM pg_foreign_data_wrapper) fdw(fdwname, fdwowner, grantor, grantee, prtype, grantable),     pg_authid u_grantor,     ( SELECT pg_authid.oid,             pg_authid.rolname            FROM pg_authid         UNION ALL          SELECT (0)::oid AS oid,             'PUBLIC'::name) grantee(oid, rolname)   WHERE ((u_grantor.oid = fdw.grantor) AND (grantee.oid = fdw.grantee) AND (fdw.prtype = 'USAGE'::text) AND (pg_has_role(u_grantor.oid, 'USAGE'::text) OR pg_has_role(grantee.oid, 'USAGE'::text) OR (grantee.rolname = 'PUBLIC'::name))) UNION ALL  SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,     (grantee.rolname)::information_schema.sql_identifier AS grantee,     (current_database())::information_schema.sql_identifier AS object_catalog,     (''::name)::information_schema.sql_identifier AS object_schema,     (srv.srvname)::information_schema.sql_identifier AS object_name,     ('FOREIGN SERVER'::character varying)::information_schema.character_data AS object_type,     ('USAGE'::character varying)::information_schema.character_data AS privilege_type,     (         CASE             WHEN (pg_has_role(grantee.oid, srv.srvowner, 'USAGE'::text) OR srv.grantable) THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS is_grantable    FROM ( SELECT pg_foreign_server.srvname,             pg_foreign_server.srvowner,             (aclexplode(COALESCE(pg_foreign_server.srvacl, acldefault('S'::"char", pg_foreign_server.srvowner)))).grantor AS grantor,             (aclexplode(COALESCE(pg_foreign_server.srvacl, acldefault('S'::"char", pg_foreign_server.srvowner)))).grantee AS grantee,             (aclexplode(COALESCE(pg_foreign_server.srvacl, acldefault('S'::"char", pg_foreign_server.srvowner)))).privilege_type AS privilege_type,             (aclexplode(COALESCE(pg_foreign_server.srvacl, acldefault('S'::"char", pg_foreign_server.srvowner)))).is_grantable AS is_grantable            FROM pg_foreign_server) srv(srvname, srvowner, grantor, grantee, prtype, grantable),     pg_authid u_grantor,     ( SELECT pg_authid.oid,             pg_authid.rolname            FROM pg_authid         UNION ALL          SELECT (0)::oid AS oid,             'PUBLIC'::name) grantee(oid, rolname)   WHERE ((u_grantor.oid = srv.grantor) AND (grantee.oid = srv.grantee) AND (srv.prtype = 'USAGE'::text) AND (pg_has_role(u_grantor.oid, 'USAGE'::text) OR pg_has_role(grantee.oid, 'USAGE'::text) OR (grantee.rolname = 'PUBLIC'::name))) UNION ALL  SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,     (grantee.rolname)::information_schema.sql_identifier AS grantee,     (current_database())::information_schema.sql_identifier AS object_catalog,     (n.nspname)::information_schema.sql_identifier AS object_schema,     (c.relname)::information_schema.sql_identifier AS object_name,     ('SEQUENCE'::character varying)::information_schema.character_data AS object_type,     ('USAGE'::character varying)::information_schema.character_data AS privilege_type,     (         CASE             WHEN (pg_has_role(grantee.oid, c.relowner, 'USAGE'::text) OR c.grantable) THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS is_grantable    FROM ( SELECT pg_class.oid,             pg_class.relname,             pg_class.relnamespace,             pg_class.relkind,             pg_class.relowner,             (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::"char", pg_class.relowner)))).grantor AS grantor,             (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::"char", pg_class.relowner)))).grantee AS grantee,             (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::"char", pg_class.relowner)))).privilege_type AS privilege_type,             (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::"char", pg_class.relowner)))).is_grantable AS is_grantable            FROM pg_class) c(oid, relname, relnamespace, relkind, relowner, grantor, grantee, prtype, grantable),     pg_namespace n,     pg_authid u_grantor,     ( SELECT pg_authid.oid,             pg_authid.rolname            FROM pg_authid         UNION ALL          SELECT (0)::oid AS oid,             'PUBLIC'::name) grantee(oid, rolname)   WHERE ((c.relnamespace = n.oid) AND (c.relkind = 'S'::"char") AND (c.grantee = grantee.oid) AND (c.grantor = u_grantor.oid) AND (c.prtype = 'USAGE'::text) AND (pg_has_role(u_grantor.oid, 'USAGE'::text) OR pg_has_role(grantee.oid, 'USAGE'::text) OR (grantee.rolname = 'PUBLIC'::name)))]]></view_script>
		</view>
		<view name="user_defined_types" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS user_defined_type_catalog,     (n.nspname)::information_schema.sql_identifier AS user_defined_type_schema,     (c.relname)::information_schema.sql_identifier AS user_defined_type_name,     ('STRUCTURED'::character varying)::information_schema.character_data AS user_defined_type_category,     ('YES'::character varying)::information_schema.yes_or_no AS is_instantiable,     (NULL::character varying)::information_schema.yes_or_no AS is_final,     (NULL::character varying)::information_schema.character_data AS ordering_form,     (NULL::character varying)::information_schema.character_data AS ordering_category,     (NULL::name)::information_schema.sql_identifier AS ordering_routine_catalog,     (NULL::name)::information_schema.sql_identifier AS ordering_routine_schema,     (NULL::name)::information_schema.sql_identifier AS ordering_routine_name,     (NULL::character varying)::information_schema.character_data AS reference_type,     (NULL::character varying)::information_schema.character_data AS data_type,     (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,     (NULL::integer)::information_schema.cardinal_number AS character_octet_length,     (NULL::name)::information_schema.sql_identifier AS character_set_catalog,     (NULL::name)::information_schema.sql_identifier AS character_set_schema,     (NULL::name)::information_schema.sql_identifier AS character_set_name,     (NULL::name)::information_schema.sql_identifier AS collation_catalog,     (NULL::name)::information_schema.sql_identifier AS collation_schema,     (NULL::name)::information_schema.sql_identifier AS collation_name,     (NULL::integer)::information_schema.cardinal_number AS numeric_precision,     (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,     (NULL::integer)::information_schema.cardinal_number AS numeric_scale,     (NULL::integer)::information_schema.cardinal_number AS datetime_precision,     (NULL::character varying)::information_schema.character_data AS interval_type,     (NULL::integer)::information_schema.cardinal_number AS interval_precision,     (NULL::name)::information_schema.sql_identifier AS source_dtd_identifier,     (NULL::name)::information_schema.sql_identifier AS ref_dtd_identifier    FROM pg_namespace n,     pg_class c,     pg_type t   WHERE ((n.oid = c.relnamespace) AND (t.typrelid = c.oid) AND (c.relkind = 'c'::"char") AND (pg_has_role(t.typowner, 'USAGE'::text) OR has_type_privilege(t.oid, 'USAGE'::text)))]]></view_script>
		</view>
		<view name="user_mapping_options" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}     (opts.option_name)::information_schema.sql_identifier AS option_name,     (         CASE             WHEN (((um.umuser <> (0)::oid) AND ((um.authorization_identifier)::name = CURRENT_USER)) OR ((um.umuser = (0)::oid) AND pg_has_role((um.srvowner)::name, 'USAGE'::text)) OR ( SELECT pg_authid.rolsuper                FROM pg_authid               WHERE (pg_authid.rolname = CURRENT_USER))) THEN opts.option_value             ELSE NULL::text         END)::information_schema.character_data AS option_value    FROM information_schema._pg_user_mappings um,     LATERAL pg_options_to_table(um.umoptions) opts(option_name, option_value)]]></view_script>
		</view>
		<view name="user_mappings" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT _pg_user_mappings.authorization_identifier,     _pg_user_mappings.foreign_server_catalog,     _pg_user_mappings.foreign_server_name    FROM information_schema._pg_user_mappings]]></view_script>
		</view>
		<view name="view_column_usage" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS view_catalog,     (nv.nspname)::information_schema.sql_identifier AS view_schema,     (v.relname)::information_schema.sql_identifier AS view_name,     (current_database())::information_schema.sql_identifier AS table_catalog,     (nt.nspname)::information_schema.sql_identifier AS table_schema,     (t.relname)::information_schema.sql_identifier AS table_name,     (a.attname)::information_schema.sql_identifier AS column_name    FROM pg_namespace nv,     pg_class v,     pg_depend dv,     pg_depend dt,     pg_class t,     pg_namespace nt,     pg_attribute a   WHERE ((nv.oid = v.relnamespace) AND (v.relkind = 'v'::"char") AND (v.oid = dv.refobjid) AND (dv.refclassid = ('pg_class'::regclass)::oid) AND (dv.classid = ('pg_rewrite'::regclass)::oid) AND (dv.deptype = 'i'::"char") AND (dv.objid = dt.objid) AND (dv.refobjid <> dt.refobjid) AND (dt.classid = ('pg_rewrite'::regclass)::oid) AND (dt.refclassid = ('pg_class'::regclass)::oid) AND (dt.refobjid = t.oid) AND (t.relnamespace = nt.oid) AND (t.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'f'::"char", 'p'::"char"])) AND (t.oid = a.attrelid) AND (dt.refobjsubid = a.attnum) AND pg_has_role(t.relowner, 'USAGE'::text))]]></view_script>
		</view>
		<view name="view_routine_usage" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS table_catalog,     (nv.nspname)::information_schema.sql_identifier AS table_schema,     (v.relname)::information_schema.sql_identifier AS table_name,     (current_database())::information_schema.sql_identifier AS specific_catalog,     (np.nspname)::information_schema.sql_identifier AS specific_schema,     (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name    FROM pg_namespace nv,     pg_class v,     pg_depend dv,     pg_depend dp,     pg_proc p,     pg_namespace np   WHERE ((nv.oid = v.relnamespace) AND (v.relkind = 'v'::"char") AND (v.oid = dv.refobjid) AND (dv.refclassid = ('pg_class'::regclass)::oid) AND (dv.classid = ('pg_rewrite'::regclass)::oid) AND (dv.deptype = 'i'::"char") AND (dv.objid = dp.objid) AND (dp.classid = ('pg_rewrite'::regclass)::oid) AND (dp.refclassid = ('pg_proc'::regclass)::oid) AND (dp.refobjid = p.oid) AND (p.pronamespace = np.oid) AND pg_has_role(p.proowner, 'USAGE'::text))]]></view_script>
		</view>
		<view name="view_table_usage" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS view_catalog,     (nv.nspname)::information_schema.sql_identifier AS view_schema,     (v.relname)::information_schema.sql_identifier AS view_name,     (current_database())::information_schema.sql_identifier AS table_catalog,     (nt.nspname)::information_schema.sql_identifier AS table_schema,     (t.relname)::information_schema.sql_identifier AS table_name    FROM pg_namespace nv,     pg_class v,     pg_depend dv,     pg_depend dt,     pg_class t,     pg_namespace nt   WHERE ((nv.oid = v.relnamespace) AND (v.relkind = 'v'::"char") AND (v.oid = dv.refobjid) AND (dv.refclassid = ('pg_class'::regclass)::oid) AND (dv.classid = ('pg_rewrite'::regclass)::oid) AND (dv.deptype = 'i'::"char") AND (dv.objid = dt.objid) AND (dv.refobjid <> dt.refobjid) AND (dt.classid = ('pg_rewrite'::regclass)::oid) AND (dt.refclassid = ('pg_class'::regclass)::oid) AND (dt.refobjid = t.oid) AND (t.relnamespace = nt.oid) AND (t.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'f'::"char", 'p'::"char"])) AND pg_has_role(t.relowner, 'USAGE'::text))]]></view_script>
		</view>
		<view name="views" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (current_database())::information_schema.sql_identifier AS table_catalog,     (nc.nspname)::information_schema.sql_identifier AS table_schema,     (c.relname)::information_schema.sql_identifier AS table_name,     (         CASE             WHEN pg_has_role(c.relowner, 'USAGE'::text) THEN pg_get_viewdef(c.oid)             ELSE NULL::text         END)::information_schema.character_data AS view_definition,     (         CASE             WHEN ('check_option=cascaded'::text = ANY (c.reloptions)) THEN 'CASCADED'::text             WHEN ('check_option=local'::text = ANY (c.reloptions)) THEN 'LOCAL'::text             ELSE 'NONE'::text         END)::information_schema.character_data AS check_option,     (         CASE             WHEN ((pg_relation_is_updatable((c.oid)::regclass, false) & 20) = 20) THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS is_updatable,     (         CASE             WHEN ((pg_relation_is_updatable((c.oid)::regclass, false) & 8) = 8) THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS is_insertable_into,     (         CASE             WHEN (EXISTS ( SELECT 1                FROM pg_trigger               WHERE ((pg_trigger.tgrelid = c.oid) AND (((pg_trigger.tgtype)::integer & 81) = 81)))) THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS is_trigger_updatable,     (         CASE             WHEN (EXISTS ( SELECT 1                FROM pg_trigger               WHERE ((pg_trigger.tgrelid = c.oid) AND (((pg_trigger.tgtype)::integer & 73) = 73)))) THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS is_trigger_deletable,     (         CASE             WHEN (EXISTS ( SELECT 1                FROM pg_trigger               WHERE ((pg_trigger.tgrelid = c.oid) AND (((pg_trigger.tgtype)::integer & 69) = 69)))) THEN 'YES'::text             ELSE 'NO'::text         END)::information_schema.yes_or_no AS is_trigger_insertable_into    FROM pg_namespace nc,     pg_class c   WHERE ((c.relnamespace = nc.oid) AND (c.relkind = 'v'::"char") AND (NOT pg_is_other_temp_schema(nc.oid)) AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_table_privilege(c.oid, 'SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'::text) OR has_any_column_privilege(c.oid, 'SELECT, INSERT, UPDATE, REFERENCES'::text)))]]></view_script>
		</view>
		<function name="_pg_char_max_length" id="Function-194c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION information_schema._pg_char_max_length(typid oid, typmod integer)
 RETURNS integer
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$SELECT
  CASE WHEN $2 = -1 /* default typmod */
       THEN null
       WHEN $1 IN (1042, 1043) /* char, varchar */
       THEN $2 - 4
       WHEN $1 IN (1560, 1562) /* bit, varbit */
       THEN $2
       ELSE null
  END$function$
 ]]></string>
		</function>
		<function name="_pg_char_octet_length" id="Function-1080" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION information_schema._pg_char_octet_length(typid oid, typmod integer)
 RETURNS integer
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$SELECT
  CASE WHEN $1 IN (25, 1042, 1043) /* text, char, varchar */
       THEN CASE WHEN $2 = -1 /* default typmod */
                 THEN CAST(2^30 AS integer)
                 ELSE information_schema._pg_char_max_length($1, $2) *
                      pg_catalog.pg_encoding_max_length((SELECT encoding FROM pg_catalog.pg_database WHERE datname = pg_catalog.current_database()))
            END
       ELSE null
  END$function$
 ]]></string>
		</function>
		<function name="_pg_datetime_precision" id="Function-f38" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION information_schema._pg_datetime_precision(typid oid, typmod integer)
 RETURNS integer
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$SELECT
  CASE WHEN $1 IN (1082) /* date */
           THEN 0
       WHEN $1 IN (1083, 1114, 1184, 1266) /* time, timestamp, same + tz */
           THEN CASE WHEN $2 < 0 THEN 6 ELSE $2 END
       WHEN $1 IN (1186) /* interval */
           THEN CASE WHEN $2 < 0 OR $2 & 65535 = 65535 THEN 6 ELSE $2 & 65535 END
       ELSE null
  END$function$
 ]]></string>
		</function>
		<function name="_pg_expandarray" id="Function-1afa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION information_schema._pg_expandarray(anyarray, OUT x anyelement, OUT n integer)
 RETURNS SETOF record
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$select $1[s], s - pg_catalog.array_lower($1,1) + 1
        from pg_catalog.generate_series(pg_catalog.array_lower($1,1),
                                        pg_catalog.array_upper($1,1),
                                        1) as g(s)$function$
 ]]></string>
		</function>
		<function name="_pg_index_position" id="Function-4c1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION information_schema._pg_index_position(oid, smallint)
 RETURNS integer
 LANGUAGE sql
 STABLE STRICT
AS $function$
SELECT (ss.a).n FROM
  (SELECT information_schema._pg_expandarray(indkey) AS a
   FROM pg_catalog.pg_index WHERE indexrelid = $1) ss
  WHERE (ss.a).x = $2;
$function$
 ]]></string>
		</function>
		<function name="_pg_interval_type" id="Function-1af6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION information_schema._pg_interval_type(typid oid, mod integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$SELECT
  CASE WHEN $1 IN (1186) /* interval */
           THEN pg_catalog.upper(substring(pg_catalog.format_type($1, $2) from 'interval[()0-9]* #"%#"' for '#'))
       ELSE null
  END$function$
 ]]></string>
		</function>
		<function name="_pg_keysequal" id="Function-cd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION information_schema._pg_keysequal(smallint[], smallint[])
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE
AS $function$select $1 operator(pg_catalog.<@) $2 and $2 operator(pg_catalog.<@) $1$function$
 ]]></string>
		</function>
		<function name="_pg_numeric_precision" id="Function-2014" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION information_schema._pg_numeric_precision(typid oid, typmod integer)
 RETURNS integer
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$SELECT
  CASE $1
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN $2 = -1
                   THEN null
                   ELSE (($2 - 4) >> 16) & 65535
                   END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
  END$function$
 ]]></string>
		</function>
		<function name="_pg_numeric_precision_radix" id="Function-1bdc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION information_schema._pg_numeric_precision_radix(typid oid, typmod integer)
 RETURNS integer
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$SELECT
  CASE WHEN $1 IN (21, 23, 20, 700, 701) THEN 2
       WHEN $1 IN (1700) THEN 10
       ELSE null
  END$function$
 ]]></string>
		</function>
		<function name="_pg_numeric_scale" id="Function-cd4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION information_schema._pg_numeric_scale(typid oid, typmod integer)
 RETURNS integer
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$SELECT
  CASE WHEN $1 IN (21, 23, 20) THEN 0
       WHEN $1 IN (1700) THEN
            CASE WHEN $2 = -1
                 THEN null
                 ELSE ($2 - 4) & 65535
                 END
       ELSE null
  END$function$
 ]]></string>
		</function>
		<function name="_pg_truetypid" id="Function-158" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION information_schema._pg_truetypid(pg_attribute, pg_type)
 RETURNS oid
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$SELECT CASE WHEN $2.typtype = 'd' THEN $2.typbasetype ELSE $1.atttypid END$function$
 ]]></string>
		</function>
		<function name="_pg_truetypmod" id="Function-48f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION information_schema._pg_truetypmod(pg_attribute, pg_type)
 RETURNS integer
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$SELECT CASE WHEN $2.typtype = 'd' THEN $2.typtypmod ELSE $1.atttypmod END$function$
 ]]></string>
		</function>
	</schema>
	<schema name="pg_catalog" >
		<comment><![CDATA[system catalog schema]]></comment>
		<table name="pg_aggregate" type="GLOBAL_TEMPORARY" spec="" >
			<column name="aggfnoid" type="varchar" jt="12" mandatory="y" />
			<column name="aggkind" type="char" jt="1" mandatory="y" />
			<column name="aggnumdirectargs" type="smallint" length="16" jt="5" mandatory="y" />
			<column name="aggtransfn" type="varchar" jt="12" mandatory="y" />
			<column name="aggfinalfn" type="varchar" jt="12" mandatory="y" />
			<column name="aggcombinefn" type="varchar" jt="12" mandatory="y" />
			<column name="aggserialfn" type="varchar" jt="12" mandatory="y" />
			<column name="aggdeserialfn" type="varchar" jt="12" mandatory="y" />
			<column name="aggmtransfn" type="varchar" jt="12" mandatory="y" />
			<column name="aggminvtransfn" type="varchar" jt="12" mandatory="y" />
			<column name="aggmfinalfn" type="varchar" jt="12" mandatory="y" />
			<column name="aggfinalextra" type="boolean" jt="16" mandatory="y" />
			<column name="aggmfinalextra" type="boolean" jt="16" mandatory="y" />
			<column name="aggfinalmodify" type="char" jt="1" mandatory="y" />
			<column name="aggmfinalmodify" type="char" jt="1" mandatory="y" />
			<column name="aggsortop" type="oid" jt="4" mandatory="y" />
			<column name="aggtranstype" type="oid" jt="4" mandatory="y" />
			<column name="aggtransspace" type="integer" length="32" jt="4" mandatory="y" />
			<column name="aggmtranstype" type="oid" jt="4" mandatory="y" />
			<column name="aggmtransspace" type="integer" length="32" jt="4" mandatory="y" />
			<column name="agginitval" type="text" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="aggminitval" type="text" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_aggregate_fnoid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="aggfnoid" />
			</index>
		</table>
		<table name="pg_am" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="amname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="amhandler" type="varchar" jt="12" mandatory="y" />
			<column name="amtype" type="char" jt="1" mandatory="y" />
			<index name="pg_am_name_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="amname" />
			</index>
			<index name="pg_am_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_amop" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="amopfamily" type="oid" jt="4" mandatory="y" />
			<column name="amoplefttype" type="oid" jt="4" mandatory="y" />
			<column name="amoprighttype" type="oid" jt="4" mandatory="y" />
			<column name="amopstrategy" type="smallint" length="16" jt="5" mandatory="y" />
			<column name="amoppurpose" type="char" jt="1" mandatory="y" />
			<column name="amopopr" type="oid" jt="4" mandatory="y" />
			<column name="amopmethod" type="oid" jt="4" mandatory="y" />
			<column name="amopsortfamily" type="oid" jt="4" mandatory="y" />
			<index name="pg_amop_fam_strat_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="amopfamily" />
				<column name="amoplefttype" />
				<column name="amoprighttype" />
				<column name="amopstrategy" />
			</index>
			<index name="pg_amop_opr_fam_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="amopopr" />
				<column name="amoppurpose" />
				<column name="amopfamily" />
			</index>
			<index name="pg_amop_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_amproc" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="amprocfamily" type="oid" jt="4" mandatory="y" />
			<column name="amproclefttype" type="oid" jt="4" mandatory="y" />
			<column name="amprocrighttype" type="oid" jt="4" mandatory="y" />
			<column name="amprocnum" type="smallint" length="16" jt="5" mandatory="y" />
			<column name="amproc" type="varchar" jt="12" mandatory="y" />
			<index name="pg_amproc_fam_proc_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="amprocfamily" />
				<column name="amproclefttype" />
				<column name="amprocrighttype" />
				<column name="amprocnum" />
			</index>
			<index name="pg_amproc_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_attrdef" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="adrelid" type="oid" jt="4" mandatory="y" />
			<column name="adnum" type="smallint" length="16" jt="5" mandatory="y" />
			<column name="adbin" type="varchar" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_attrdef_adrelid_adnum_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="adrelid" />
				<column name="adnum" />
			</index>
			<index name="pg_attrdef_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_attribute" type="GLOBAL_TEMPORARY" spec="" >
			<column name="attrelid" type="oid" jt="4" mandatory="y" />
			<column name="attname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="atttypid" type="oid" jt="4" mandatory="y" />
			<column name="attstattarget" type="integer" length="32" jt="4" mandatory="y" />
			<column name="attlen" type="smallint" length="16" jt="5" mandatory="y" />
			<column name="attnum" type="smallint" length="16" jt="5" mandatory="y" />
			<column name="attndims" type="integer" length="32" jt="4" mandatory="y" />
			<column name="attcacheoff" type="integer" length="32" jt="4" mandatory="y" />
			<column name="atttypmod" type="integer" length="32" jt="4" mandatory="y" />
			<column name="attbyval" type="boolean" jt="16" mandatory="y" />
			<column name="attstorage" type="char" jt="1" mandatory="y" />
			<column name="attalign" type="char" jt="1" mandatory="y" />
			<column name="attnotnull" type="boolean" jt="16" mandatory="y" />
			<column name="atthasdef" type="boolean" jt="16" mandatory="y" />
			<column name="atthasmissing" type="boolean" jt="16" mandatory="y" />
			<column name="attidentity" type="char" jt="1" mandatory="y" />
			<column name="attgenerated" type="char" jt="1" mandatory="y" />
			<column name="attisdropped" type="boolean" jt="16" mandatory="y" />
			<column name="attislocal" type="boolean" jt="16" mandatory="y" />
			<column name="attinhcount" type="integer" length="32" jt="4" mandatory="y" />
			<column name="attcollation" type="oid" jt="4" mandatory="y" />
			<column name="attacl" type="varchar" jt="12" />
			<column name="attoptions" type="text[]" jt="2003" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="attfdwoptions" type="text[]" jt="2003" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="attmissingval" type="anyarray" jt="1111" />
			<index name="pg_attribute_relid_attnam_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="attrelid" />
				<column name="attname" />
			</index>
			<index name="pg_attribute_relid_attnum_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="attrelid" />
				<column name="attnum" />
			</index>
		</table>
		<table name="pg_auth_members" type="GLOBAL_TEMPORARY" spec="" >
			<column name="roleid" type="oid" jt="4" mandatory="y" />
			<column name="member" type="oid" jt="4" mandatory="y" />
			<column name="grantor" type="oid" jt="4" mandatory="y" />
			<column name="admin_option" type="boolean" jt="16" mandatory="y" />
			<index name="pg_auth_members_role_member_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="roleid" />
				<column name="member" />
			</index>
			<index name="pg_auth_members_member_role_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="member" />
				<column name="roleid" />
			</index>
		</table>
		<table name="pg_authid" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="rolname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="rolsuper" type="boolean" jt="16" mandatory="y" />
			<column name="rolinherit" type="boolean" jt="16" mandatory="y" />
			<column name="rolcreaterole" type="boolean" jt="16" mandatory="y" />
			<column name="rolcreatedb" type="boolean" jt="16" mandatory="y" />
			<column name="rolcanlogin" type="boolean" jt="16" mandatory="y" />
			<column name="rolreplication" type="boolean" jt="16" mandatory="y" />
			<column name="rolbypassrls" type="boolean" jt="16" mandatory="y" />
			<column name="rolconnlimit" type="integer" length="32" jt="4" mandatory="y" />
			<column name="rolpassword" type="text" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="rolvaliduntil" type="timestamptz" length="6" jt="93" />
			<index name="pg_authid_rolname_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="rolname" />
			</index>
			<index name="pg_authid_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_cast" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="castsource" type="oid" jt="4" mandatory="y" />
			<column name="casttarget" type="oid" jt="4" mandatory="y" />
			<column name="castfunc" type="oid" jt="4" mandatory="y" />
			<column name="castcontext" type="char" jt="1" mandatory="y" />
			<column name="castmethod" type="char" jt="1" mandatory="y" />
			<index name="pg_cast_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
			<index name="pg_cast_source_target_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="castsource" />
				<column name="casttarget" />
			</index>
		</table>
		<table name="pg_class" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="relname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="relnamespace" type="oid" jt="4" mandatory="y" />
			<column name="reltype" type="oid" jt="4" mandatory="y" />
			<column name="reloftype" type="oid" jt="4" mandatory="y" />
			<column name="relowner" type="oid" jt="4" mandatory="y" />
			<column name="relam" type="oid" jt="4" mandatory="y" />
			<column name="relfilenode" type="oid" jt="4" mandatory="y" />
			<column name="reltablespace" type="oid" jt="4" mandatory="y" />
			<column name="relpages" type="integer" length="32" jt="4" mandatory="y" />
			<column name="reltuples" type="real" jt="7" mandatory="y" />
			<column name="relallvisible" type="integer" length="32" jt="4" mandatory="y" />
			<column name="reltoastrelid" type="oid" jt="4" mandatory="y" />
			<column name="relhasindex" type="boolean" jt="16" mandatory="y" />
			<column name="relisshared" type="boolean" jt="16" mandatory="y" />
			<column name="relpersistence" type="char" jt="1" mandatory="y" />
			<column name="relkind" type="char" jt="1" mandatory="y" />
			<column name="relnatts" type="smallint" length="16" jt="5" mandatory="y" />
			<column name="relchecks" type="smallint" length="16" jt="5" mandatory="y" />
			<column name="relhasrules" type="boolean" jt="16" mandatory="y" />
			<column name="relhastriggers" type="boolean" jt="16" mandatory="y" />
			<column name="relhassubclass" type="boolean" jt="16" mandatory="y" />
			<column name="relrowsecurity" type="boolean" jt="16" mandatory="y" />
			<column name="relforcerowsecurity" type="boolean" jt="16" mandatory="y" />
			<column name="relispopulated" type="boolean" jt="16" mandatory="y" />
			<column name="relreplident" type="char" jt="1" mandatory="y" />
			<column name="relispartition" type="boolean" jt="16" mandatory="y" />
			<column name="relrewrite" type="oid" jt="4" mandatory="y" />
			<column name="relfrozenxid" type="xid" jt="1111" mandatory="y" />
			<column name="relminmxid" type="xid" jt="1111" mandatory="y" />
			<column name="relacl" type="varchar" jt="12" />
			<column name="reloptions" type="text[]" jt="2003" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="relpartbound" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_class_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
			<index name="pg_class_relname_nsp_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="relname" />
				<column name="relnamespace" />
			</index>
			<index name="pg_class_tblspc_relfilenode_index" unique="NORMAL" spec="USING  btree" >
				<column name="reltablespace" />
				<column name="relfilenode" />
			</index>
		</table>
		<table name="pg_collation" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="collname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="collnamespace" type="oid" jt="4" mandatory="y" />
			<column name="collowner" type="oid" jt="4" mandatory="y" />
			<column name="collprovider" type="char" jt="1" mandatory="y" />
			<column name="collisdeterministic" type="boolean" jt="16" mandatory="y" />
			<column name="collencoding" type="integer" length="32" jt="4" mandatory="y" />
			<column name="collcollate" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="collctype" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="collversion" type="text" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_collation_name_enc_nsp_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="collname" />
				<column name="collencoding" />
				<column name="collnamespace" />
			</index>
			<index name="pg_collation_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_constraint" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="conname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="connamespace" type="oid" jt="4" mandatory="y" />
			<column name="contype" type="char" jt="1" mandatory="y" />
			<column name="condeferrable" type="boolean" jt="16" mandatory="y" />
			<column name="condeferred" type="boolean" jt="16" mandatory="y" />
			<column name="convalidated" type="boolean" jt="16" mandatory="y" />
			<column name="conrelid" type="oid" jt="4" mandatory="y" />
			<column name="contypid" type="oid" jt="4" mandatory="y" />
			<column name="conindid" type="oid" jt="4" mandatory="y" />
			<column name="conparentid" type="oid" jt="4" mandatory="y" />
			<column name="confrelid" type="oid" jt="4" mandatory="y" />
			<column name="confupdtype" type="char" jt="1" mandatory="y" />
			<column name="confdeltype" type="char" jt="1" mandatory="y" />
			<column name="confmatchtype" type="char" jt="1" mandatory="y" />
			<column name="conislocal" type="boolean" jt="16" mandatory="y" />
			<column name="coninhcount" type="integer" length="32" jt="4" mandatory="y" />
			<column name="connoinherit" type="boolean" jt="16" mandatory="y" />
			<column name="conkey" type="smallint[]" jt="2003" />
			<column name="confkey" type="smallint[]" jt="2003" />
			<column name="conpfeqop" type="varchar" jt="12" />
			<column name="conppeqop" type="varchar" jt="12" />
			<column name="conffeqop" type="varchar" jt="12" />
			<column name="conexclop" type="varchar" jt="12" />
			<column name="conbin" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_constraint_conname_nsp_index" unique="NORMAL" spec="USING  btree" >
				<column name="conname" />
				<column name="connamespace" />
			</index>
			<index name="pg_constraint_conrelid_contypid_conname_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="conrelid" />
				<column name="contypid" />
				<column name="conname" />
			</index>
			<index name="pg_constraint_contypid_index" unique="NORMAL" spec="USING  btree" >
				<column name="contypid" />
			</index>
			<index name="pg_constraint_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
			<index name="pg_constraint_conparentid_index" unique="NORMAL" spec="USING  btree" >
				<column name="conparentid" />
			</index>
		</table>
		<table name="pg_conversion" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="conname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="connamespace" type="oid" jt="4" mandatory="y" />
			<column name="conowner" type="oid" jt="4" mandatory="y" />
			<column name="conforencoding" type="integer" length="32" jt="4" mandatory="y" />
			<column name="contoencoding" type="integer" length="32" jt="4" mandatory="y" />
			<column name="conproc" type="varchar" jt="12" mandatory="y" />
			<column name="condefault" type="boolean" jt="16" mandatory="y" />
			<index name="pg_conversion_default_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="connamespace" />
				<column name="conforencoding" />
				<column name="contoencoding" />
				<column name="oid" />
			</index>
			<index name="pg_conversion_name_nsp_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="conname" />
				<column name="connamespace" />
			</index>
			<index name="pg_conversion_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_database" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="datname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="datdba" type="oid" jt="4" mandatory="y" />
			<column name="encoding" type="integer" length="32" jt="4" mandatory="y" />
			<column name="datcollate" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="datctype" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="datistemplate" type="boolean" jt="16" mandatory="y" />
			<column name="datallowconn" type="boolean" jt="16" mandatory="y" />
			<column name="datconnlimit" type="integer" length="32" jt="4" mandatory="y" />
			<column name="datlastsysoid" type="oid" jt="4" mandatory="y" />
			<column name="datfrozenxid" type="xid" jt="1111" mandatory="y" />
			<column name="datminmxid" type="xid" jt="1111" mandatory="y" />
			<column name="dattablespace" type="oid" jt="4" mandatory="y" />
			<column name="datacl" type="varchar" jt="12" />
			<index name="pg_database_datname_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="datname" />
			</index>
			<index name="pg_database_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_db_role_setting" type="GLOBAL_TEMPORARY" spec="" >
			<column name="setdatabase" type="oid" jt="4" mandatory="y" />
			<column name="setrole" type="oid" jt="4" mandatory="y" />
			<column name="setconfig" type="text[]" jt="2003" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_db_role_setting_databaseid_rol_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="setdatabase" />
				<column name="setrole" />
			</index>
		</table>
		<table name="pg_default_acl" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="defaclrole" type="oid" jt="4" mandatory="y" />
			<column name="defaclnamespace" type="oid" jt="4" mandatory="y" />
			<column name="defaclobjtype" type="char" jt="1" mandatory="y" />
			<column name="defaclacl" type="varchar" jt="12" mandatory="y" />
			<index name="pg_default_acl_role_nsp_obj_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="defaclrole" />
				<column name="defaclnamespace" />
				<column name="defaclobjtype" />
			</index>
			<index name="pg_default_acl_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_depend" type="GLOBAL_TEMPORARY" spec="" >
			<column name="classid" type="oid" jt="4" mandatory="y" />
			<column name="objid" type="oid" jt="4" mandatory="y" />
			<column name="objsubid" type="integer" length="32" jt="4" mandatory="y" />
			<column name="refclassid" type="oid" jt="4" mandatory="y" />
			<column name="refobjid" type="oid" jt="4" mandatory="y" />
			<column name="refobjsubid" type="integer" length="32" jt="4" mandatory="y" />
			<column name="deptype" type="char" jt="1" mandatory="y" />
			<index name="pg_depend_depender_index" unique="NORMAL" spec="USING  btree" >
				<column name="classid" />
				<column name="objid" />
				<column name="objsubid" />
			</index>
			<index name="pg_depend_reference_index" unique="NORMAL" spec="USING  btree" >
				<column name="refclassid" />
				<column name="refobjid" />
				<column name="refobjsubid" />
			</index>
		</table>
		<table name="pg_description" type="GLOBAL_TEMPORARY" spec="" >
			<column name="objoid" type="oid" jt="4" mandatory="y" />
			<column name="classoid" type="oid" jt="4" mandatory="y" />
			<column name="objsubid" type="integer" length="32" jt="4" mandatory="y" />
			<column name="description" type="text" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_description_o_c_o_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="objoid" />
				<column name="classoid" />
				<column name="objsubid" />
			</index>
		</table>
		<table name="pg_enum" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="enumtypid" type="oid" jt="4" mandatory="y" />
			<column name="enumsortorder" type="real" jt="7" mandatory="y" />
			<column name="enumlabel" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_enum_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
			<index name="pg_enum_typid_label_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="enumtypid" />
				<column name="enumlabel" />
			</index>
			<index name="pg_enum_typid_sortorder_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="enumtypid" />
				<column name="enumsortorder" />
			</index>
		</table>
		<table name="pg_event_trigger" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="evtname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="evtevent" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="evtowner" type="oid" jt="4" mandatory="y" />
			<column name="evtfoid" type="oid" jt="4" mandatory="y" />
			<column name="evtenabled" type="char" jt="1" mandatory="y" />
			<column name="evttags" type="text[]" jt="2003" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_event_trigger_evtname_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="evtname" />
			</index>
			<index name="pg_event_trigger_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_extension" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="extname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="extowner" type="oid" jt="4" mandatory="y" />
			<column name="extnamespace" type="oid" jt="4" mandatory="y" />
			<column name="extrelocatable" type="boolean" jt="16" mandatory="y" />
			<column name="extversion" type="text" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="extconfig" type="varchar" jt="12" />
			<column name="extcondition" type="text[]" jt="2003" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_extension_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
			<index name="pg_extension_name_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="extname" />
			</index>
		</table>
		<table name="pg_foreign_data_wrapper" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="fdwname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="fdwowner" type="oid" jt="4" mandatory="y" />
			<column name="fdwhandler" type="oid" jt="4" mandatory="y" />
			<column name="fdwvalidator" type="oid" jt="4" mandatory="y" />
			<column name="fdwacl" type="varchar" jt="12" />
			<column name="fdwoptions" type="text[]" jt="2003" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_foreign_data_wrapper_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
			<index name="pg_foreign_data_wrapper_name_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="fdwname" />
			</index>
		</table>
		<table name="pg_foreign_server" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="srvname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="srvowner" type="oid" jt="4" mandatory="y" />
			<column name="srvfdw" type="oid" jt="4" mandatory="y" />
			<column name="srvtype" type="text" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="srvversion" type="text" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="srvacl" type="varchar" jt="12" />
			<column name="srvoptions" type="text[]" jt="2003" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_foreign_server_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
			<index name="pg_foreign_server_name_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="srvname" />
			</index>
		</table>
		<table name="pg_foreign_table" type="GLOBAL_TEMPORARY" spec="" >
			<column name="ftrelid" type="oid" jt="4" mandatory="y" />
			<column name="ftserver" type="oid" jt="4" mandatory="y" />
			<column name="ftoptions" type="text[]" jt="2003" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_foreign_table_relid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="ftrelid" />
			</index>
		</table>
		<table name="pg_index" type="GLOBAL_TEMPORARY" spec="" >
			<column name="indexrelid" type="oid" jt="4" mandatory="y" />
			<column name="indrelid" type="oid" jt="4" mandatory="y" />
			<column name="indnatts" type="smallint" length="16" jt="5" mandatory="y" />
			<column name="indnkeyatts" type="smallint" length="16" jt="5" mandatory="y" />
			<column name="indisunique" type="boolean" jt="16" mandatory="y" />
			<column name="indisprimary" type="boolean" jt="16" mandatory="y" />
			<column name="indisexclusion" type="boolean" jt="16" mandatory="y" />
			<column name="indimmediate" type="boolean" jt="16" mandatory="y" />
			<column name="indisclustered" type="boolean" jt="16" mandatory="y" />
			<column name="indisvalid" type="boolean" jt="16" mandatory="y" />
			<column name="indcheckxmin" type="boolean" jt="16" mandatory="y" />
			<column name="indisready" type="boolean" jt="16" mandatory="y" />
			<column name="indislive" type="boolean" jt="16" mandatory="y" />
			<column name="indisreplident" type="boolean" jt="16" mandatory="y" />
			<column name="indkey" type="varchar" jt="12" mandatory="y" />
			<column name="indcollation" type="varchar" jt="12" mandatory="y" />
			<column name="indclass" type="varchar" jt="12" mandatory="y" />
			<column name="indoption" type="varchar" jt="12" mandatory="y" />
			<column name="indexprs" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="indpred" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_index_indrelid_index" unique="NORMAL" spec="USING  btree" >
				<column name="indrelid" />
			</index>
			<index name="pg_index_indexrelid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="indexrelid" />
			</index>
		</table>
		<table name="pg_inherits" type="GLOBAL_TEMPORARY" spec="" >
			<column name="inhrelid" type="oid" jt="4" mandatory="y" />
			<column name="inhparent" type="oid" jt="4" mandatory="y" />
			<column name="inhseqno" type="integer" length="32" jt="4" mandatory="y" />
			<index name="pg_inherits_relid_seqno_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="inhrelid" />
				<column name="inhseqno" />
			</index>
			<index name="pg_inherits_parent_index" unique="NORMAL" spec="USING  btree" >
				<column name="inhparent" />
			</index>
		</table>
		<table name="pg_init_privs" type="GLOBAL_TEMPORARY" spec="" >
			<column name="objoid" type="oid" jt="4" mandatory="y" />
			<column name="classoid" type="oid" jt="4" mandatory="y" />
			<column name="objsubid" type="integer" length="32" jt="4" mandatory="y" />
			<column name="privtype" type="char" jt="1" mandatory="y" />
			<column name="initprivs" type="varchar" jt="12" mandatory="y" />
			<index name="pg_init_privs_o_c_o_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="objoid" />
				<column name="classoid" />
				<column name="objsubid" />
			</index>
		</table>
		<table name="pg_language" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="lanname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="lanowner" type="oid" jt="4" mandatory="y" />
			<column name="lanispl" type="boolean" jt="16" mandatory="y" />
			<column name="lanpltrusted" type="boolean" jt="16" mandatory="y" />
			<column name="lanplcallfoid" type="oid" jt="4" mandatory="y" />
			<column name="laninline" type="oid" jt="4" mandatory="y" />
			<column name="lanvalidator" type="oid" jt="4" mandatory="y" />
			<column name="lanacl" type="varchar" jt="12" />
			<index name="pg_language_name_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="lanname" />
			</index>
			<index name="pg_language_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_largeobject" type="GLOBAL_TEMPORARY" spec="" >
			<column name="loid" type="oid" jt="4" mandatory="y" />
			<column name="pageno" type="integer" length="32" jt="4" mandatory="y" />
			<column name="data" type="bytea" jt="-2" mandatory="y" />
			<index name="pg_largeobject_loid_pn_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="loid" />
				<column name="pageno" />
			</index>
		</table>
		<table name="pg_largeobject_metadata" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="lomowner" type="oid" jt="4" mandatory="y" />
			<column name="lomacl" type="varchar" jt="12" />
			<index name="pg_largeobject_metadata_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_namespace" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="nspname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="nspowner" type="oid" jt="4" mandatory="y" />
			<column name="nspacl" type="varchar" jt="12" />
			<index name="pg_namespace_nspname_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="nspname" />
			</index>
			<index name="pg_namespace_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_opclass" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="opcmethod" type="oid" jt="4" mandatory="y" />
			<column name="opcname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="opcnamespace" type="oid" jt="4" mandatory="y" />
			<column name="opcowner" type="oid" jt="4" mandatory="y" />
			<column name="opcfamily" type="oid" jt="4" mandatory="y" />
			<column name="opcintype" type="oid" jt="4" mandatory="y" />
			<column name="opcdefault" type="boolean" jt="16" mandatory="y" />
			<column name="opckeytype" type="oid" jt="4" mandatory="y" />
			<index name="pg_opclass_am_name_nsp_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="opcmethod" />
				<column name="opcname" />
				<column name="opcnamespace" />
			</index>
			<index name="pg_opclass_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_operator" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="oprname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="oprnamespace" type="oid" jt="4" mandatory="y" />
			<column name="oprowner" type="oid" jt="4" mandatory="y" />
			<column name="oprkind" type="char" jt="1" mandatory="y" />
			<column name="oprcanmerge" type="boolean" jt="16" mandatory="y" />
			<column name="oprcanhash" type="boolean" jt="16" mandatory="y" />
			<column name="oprleft" type="oid" jt="4" mandatory="y" />
			<column name="oprright" type="oid" jt="4" mandatory="y" />
			<column name="oprresult" type="oid" jt="4" mandatory="y" />
			<column name="oprcom" type="oid" jt="4" mandatory="y" />
			<column name="oprnegate" type="oid" jt="4" mandatory="y" />
			<column name="oprcode" type="varchar" jt="12" mandatory="y" />
			<column name="oprrest" type="varchar" jt="12" mandatory="y" />
			<column name="oprjoin" type="varchar" jt="12" mandatory="y" />
			<index name="pg_operator_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
			<index name="pg_operator_oprname_l_r_n_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oprname" />
				<column name="oprleft" />
				<column name="oprright" />
				<column name="oprnamespace" />
			</index>
		</table>
		<table name="pg_opfamily" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="opfmethod" type="oid" jt="4" mandatory="y" />
			<column name="opfname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="opfnamespace" type="oid" jt="4" mandatory="y" />
			<column name="opfowner" type="oid" jt="4" mandatory="y" />
			<index name="pg_opfamily_am_name_nsp_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="opfmethod" />
				<column name="opfname" />
				<column name="opfnamespace" />
			</index>
			<index name="pg_opfamily_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_partitioned_table" type="GLOBAL_TEMPORARY" spec="" >
			<column name="partrelid" type="oid" jt="4" mandatory="y" />
			<column name="partstrat" type="char" jt="1" mandatory="y" />
			<column name="partnatts" type="smallint" length="16" jt="5" mandatory="y" />
			<column name="partdefid" type="oid" jt="4" mandatory="y" />
			<column name="partattrs" type="varchar" jt="12" mandatory="y" />
			<column name="partclass" type="varchar" jt="12" mandatory="y" />
			<column name="partcollation" type="varchar" jt="12" mandatory="y" />
			<column name="partexprs" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_partitioned_table_partrelid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="partrelid" />
			</index>
		</table>
		<table name="pg_pltemplate" type="GLOBAL_TEMPORARY" spec="" >
			<column name="tmplname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="tmpltrusted" type="boolean" jt="16" mandatory="y" />
			<column name="tmpldbacreate" type="boolean" jt="16" mandatory="y" />
			<column name="tmplhandler" type="text" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="tmplinline" type="text" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="tmplvalidator" type="text" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="tmpllibrary" type="text" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="tmplacl" type="varchar" jt="12" />
			<index name="pg_pltemplate_name_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="tmplname" />
			</index>
		</table>
		<table name="pg_policy" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="polname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="polrelid" type="oid" jt="4" mandatory="y" />
			<column name="polcmd" type="char" jt="1" mandatory="y" />
			<column name="polpermissive" type="boolean" jt="16" mandatory="y" />
			<column name="polroles" type="varchar" jt="12" mandatory="y" />
			<column name="polqual" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="polwithcheck" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_policy_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
			<index name="pg_policy_polrelid_polname_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="polrelid" />
				<column name="polname" />
			</index>
		</table>
		<table name="pg_proc" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="proname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="pronamespace" type="oid" jt="4" mandatory="y" />
			<column name="proowner" type="oid" jt="4" mandatory="y" />
			<column name="prolang" type="oid" jt="4" mandatory="y" />
			<column name="procost" type="real" jt="7" mandatory="y" />
			<column name="prorows" type="real" jt="7" mandatory="y" />
			<column name="provariadic" type="oid" jt="4" mandatory="y" />
			<column name="prosupport" type="varchar" jt="12" mandatory="y" />
			<column name="prokind" type="char" jt="1" mandatory="y" />
			<column name="prosecdef" type="boolean" jt="16" mandatory="y" />
			<column name="proleakproof" type="boolean" jt="16" mandatory="y" />
			<column name="proisstrict" type="boolean" jt="16" mandatory="y" />
			<column name="proretset" type="boolean" jt="16" mandatory="y" />
			<column name="provolatile" type="char" jt="1" mandatory="y" />
			<column name="proparallel" type="char" jt="1" mandatory="y" />
			<column name="pronargs" type="smallint" length="16" jt="5" mandatory="y" />
			<column name="pronargdefaults" type="smallint" length="16" jt="5" mandatory="y" />
			<column name="prorettype" type="oid" jt="4" mandatory="y" />
			<column name="proargtypes" type="varchar" jt="12" mandatory="y" />
			<column name="proallargtypes" type="varchar" jt="12" />
			<column name="proargmodes" type="varchar" jt="12" />
			<column name="proargnames" type="text[]" jt="2003" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="proargdefaults" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="protrftypes" type="varchar" jt="12" />
			<column name="prosrc" type="text" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="probin" type="text" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="proconfig" type="text[]" jt="2003" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="proacl" type="varchar" jt="12" />
			<index name="pg_proc_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
			<index name="pg_proc_proname_args_nsp_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="proname" />
				<column name="proargtypes" />
				<column name="pronamespace" />
			</index>
		</table>
		<table name="pg_publication" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="pubname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="pubowner" type="oid" jt="4" mandatory="y" />
			<column name="puballtables" type="boolean" jt="16" mandatory="y" />
			<column name="pubinsert" type="boolean" jt="16" mandatory="y" />
			<column name="pubupdate" type="boolean" jt="16" mandatory="y" />
			<column name="pubdelete" type="boolean" jt="16" mandatory="y" />
			<column name="pubtruncate" type="boolean" jt="16" mandatory="y" />
			<index name="pg_publication_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
			<index name="pg_publication_pubname_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="pubname" />
			</index>
		</table>
		<table name="pg_publication_rel" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="prpubid" type="oid" jt="4" mandatory="y" />
			<column name="prrelid" type="oid" jt="4" mandatory="y" />
			<index name="pg_publication_rel_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
			<index name="pg_publication_rel_prrelid_prpubid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="prrelid" />
				<column name="prpubid" />
			</index>
		</table>
		<table name="pg_range" type="GLOBAL_TEMPORARY" spec="" >
			<column name="rngtypid" type="oid" jt="4" mandatory="y" />
			<column name="rngsubtype" type="oid" jt="4" mandatory="y" />
			<column name="rngcollation" type="oid" jt="4" mandatory="y" />
			<column name="rngsubopc" type="oid" jt="4" mandatory="y" />
			<column name="rngcanonical" type="varchar" jt="12" mandatory="y" />
			<column name="rngsubdiff" type="varchar" jt="12" mandatory="y" />
			<index name="pg_range_rngtypid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="rngtypid" />
			</index>
		</table>
		<table name="pg_replication_origin" type="GLOBAL_TEMPORARY" spec="" >
			<column name="roident" type="oid" jt="4" mandatory="y" />
			<column name="roname" type="text" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_replication_origin_roiident_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="roident" />
			</index>
			<index name="pg_replication_origin_roname_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="roname" />
			</index>
		</table>
		<table name="pg_rewrite" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="rulename" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="ev_class" type="oid" jt="4" mandatory="y" />
			<column name="ev_type" type="char" jt="1" mandatory="y" />
			<column name="ev_enabled" type="char" jt="1" mandatory="y" />
			<column name="is_instead" type="boolean" jt="16" mandatory="y" />
			<column name="ev_qual" type="varchar" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="ev_action" type="varchar" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_rewrite_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
			<index name="pg_rewrite_rel_rulename_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="ev_class" />
				<column name="rulename" />
			</index>
		</table>
		<table name="pg_seclabel" type="GLOBAL_TEMPORARY" spec="" >
			<column name="objoid" type="oid" jt="4" mandatory="y" />
			<column name="classoid" type="oid" jt="4" mandatory="y" />
			<column name="objsubid" type="integer" length="32" jt="4" mandatory="y" />
			<column name="provider" type="text" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="label" type="text" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_seclabel_object_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="objoid" />
				<column name="classoid" />
				<column name="objsubid" />
				<column name="provider" />
			</index>
		</table>
		<table name="pg_sequence" type="GLOBAL_TEMPORARY" spec="" >
			<column name="seqrelid" type="oid" jt="4" mandatory="y" />
			<column name="seqtypid" type="oid" jt="4" mandatory="y" />
			<column name="seqstart" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="seqincrement" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="seqmax" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="seqmin" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="seqcache" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="seqcycle" type="boolean" jt="16" mandatory="y" />
			<index name="pg_sequence_seqrelid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="seqrelid" />
			</index>
		</table>
		<table name="pg_shdepend" type="GLOBAL_TEMPORARY" spec="" >
			<column name="dbid" type="oid" jt="4" mandatory="y" />
			<column name="classid" type="oid" jt="4" mandatory="y" />
			<column name="objid" type="oid" jt="4" mandatory="y" />
			<column name="objsubid" type="integer" length="32" jt="4" mandatory="y" />
			<column name="refclassid" type="oid" jt="4" mandatory="y" />
			<column name="refobjid" type="oid" jt="4" mandatory="y" />
			<column name="deptype" type="char" jt="1" mandatory="y" />
			<index name="pg_shdepend_depender_index" unique="NORMAL" spec="USING  btree" >
				<column name="dbid" />
				<column name="classid" />
				<column name="objid" />
				<column name="objsubid" />
			</index>
			<index name="pg_shdepend_reference_index" unique="NORMAL" spec="USING  btree" >
				<column name="refclassid" />
				<column name="refobjid" />
			</index>
		</table>
		<table name="pg_shdescription" type="GLOBAL_TEMPORARY" spec="" >
			<column name="objoid" type="oid" jt="4" mandatory="y" />
			<column name="classoid" type="oid" jt="4" mandatory="y" />
			<column name="description" type="text" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_shdescription_o_c_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="objoid" />
				<column name="classoid" />
			</index>
		</table>
		<table name="pg_shseclabel" type="GLOBAL_TEMPORARY" spec="" >
			<column name="objoid" type="oid" jt="4" mandatory="y" />
			<column name="classoid" type="oid" jt="4" mandatory="y" />
			<column name="provider" type="text" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="label" type="text" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_shseclabel_object_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="objoid" />
				<column name="classoid" />
				<column name="provider" />
			</index>
		</table>
		<table name="pg_statistic" type="GLOBAL_TEMPORARY" spec="" >
			<column name="starelid" type="oid" jt="4" mandatory="y" />
			<column name="staattnum" type="smallint" length="16" jt="5" mandatory="y" />
			<column name="stainherit" type="boolean" jt="16" mandatory="y" />
			<column name="stanullfrac" type="real" jt="7" mandatory="y" />
			<column name="stawidth" type="integer" length="32" jt="4" mandatory="y" />
			<column name="stadistinct" type="real" jt="7" mandatory="y" />
			<column name="stakind1" type="smallint" length="16" jt="5" mandatory="y" />
			<column name="stakind2" type="smallint" length="16" jt="5" mandatory="y" />
			<column name="stakind3" type="smallint" length="16" jt="5" mandatory="y" />
			<column name="stakind4" type="smallint" length="16" jt="5" mandatory="y" />
			<column name="stakind5" type="smallint" length="16" jt="5" mandatory="y" />
			<column name="staop1" type="oid" jt="4" mandatory="y" />
			<column name="staop2" type="oid" jt="4" mandatory="y" />
			<column name="staop3" type="oid" jt="4" mandatory="y" />
			<column name="staop4" type="oid" jt="4" mandatory="y" />
			<column name="staop5" type="oid" jt="4" mandatory="y" />
			<column name="stacoll1" type="oid" jt="4" mandatory="y" />
			<column name="stacoll2" type="oid" jt="4" mandatory="y" />
			<column name="stacoll3" type="oid" jt="4" mandatory="y" />
			<column name="stacoll4" type="oid" jt="4" mandatory="y" />
			<column name="stacoll5" type="oid" jt="4" mandatory="y" />
			<column name="stanumbers1" type="varchar" jt="12" />
			<column name="stanumbers2" type="varchar" jt="12" />
			<column name="stanumbers3" type="varchar" jt="12" />
			<column name="stanumbers4" type="varchar" jt="12" />
			<column name="stanumbers5" type="varchar" jt="12" />
			<column name="stavalues1" type="anyarray" jt="1111" />
			<column name="stavalues2" type="anyarray" jt="1111" />
			<column name="stavalues3" type="anyarray" jt="1111" />
			<column name="stavalues4" type="anyarray" jt="1111" />
			<column name="stavalues5" type="anyarray" jt="1111" />
			<index name="pg_statistic_relid_att_inh_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="starelid" />
				<column name="staattnum" />
				<column name="stainherit" />
			</index>
		</table>
		<table name="pg_statistic_ext" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="stxrelid" type="oid" jt="4" mandatory="y" />
			<column name="stxname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="stxnamespace" type="oid" jt="4" mandatory="y" />
			<column name="stxowner" type="oid" jt="4" mandatory="y" />
			<column name="stxkeys" type="varchar" jt="12" mandatory="y" />
			<column name="stxkind" type="varchar" jt="12" mandatory="y" />
			<index name="pg_statistic_ext_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
			<index name="pg_statistic_ext_name_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="stxname" />
				<column name="stxnamespace" />
			</index>
			<index name="pg_statistic_ext_relid_index" unique="NORMAL" spec="USING  btree" >
				<column name="stxrelid" />
			</index>
		</table>
		<table name="pg_statistic_ext_data" type="GLOBAL_TEMPORARY" spec="" >
			<column name="stxoid" type="oid" jt="4" mandatory="y" />
			<column name="stxdndistinct" type="pg_ndistinct" jt="1111" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="stxddependencies" type="pg_dependencies" jt="1111" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="stxdmcv" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_statistic_ext_data_stxoid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="stxoid" />
			</index>
		</table>
		<table name="pg_subscription" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="subdbid" type="oid" jt="4" mandatory="y" />
			<column name="subname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="subowner" type="oid" jt="4" mandatory="y" />
			<column name="subenabled" type="boolean" jt="16" mandatory="y" />
			<column name="subconninfo" type="text" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="subslotname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="subsynccommit" type="text" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="subpublications" type="text[]" jt="2003" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_subscription_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
			<index name="pg_subscription_subname_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="subdbid" />
				<column name="subname" />
			</index>
		</table>
		<table name="pg_subscription_rel" type="GLOBAL_TEMPORARY" spec="" >
			<column name="srsubid" type="oid" jt="4" mandatory="y" />
			<column name="srrelid" type="oid" jt="4" mandatory="y" />
			<column name="srsubstate" type="char" jt="1" mandatory="y" />
			<column name="srsublsn" type="pg_lsn" jt="1111" mandatory="y" />
			<index name="pg_subscription_rel_srrelid_srsubid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="srrelid" />
				<column name="srsubid" />
			</index>
		</table>
		<table name="pg_tablespace" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="spcname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="spcowner" type="oid" jt="4" mandatory="y" />
			<column name="spcacl" type="varchar" jt="12" />
			<column name="spcoptions" type="text[]" jt="2003" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_tablespace_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
			<index name="pg_tablespace_spcname_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="spcname" />
			</index>
		</table>
		<table name="pg_transform" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="trftype" type="oid" jt="4" mandatory="y" />
			<column name="trflang" type="oid" jt="4" mandatory="y" />
			<column name="trffromsql" type="varchar" jt="12" mandatory="y" />
			<column name="trftosql" type="varchar" jt="12" mandatory="y" />
			<index name="pg_transform_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
			<index name="pg_transform_type_lang_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="trftype" />
				<column name="trflang" />
			</index>
		</table>
		<table name="pg_trigger" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="tgrelid" type="oid" jt="4" mandatory="y" />
			<column name="tgname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="tgfoid" type="oid" jt="4" mandatory="y" />
			<column name="tgtype" type="smallint" length="16" jt="5" mandatory="y" />
			<column name="tgenabled" type="char" jt="1" mandatory="y" />
			<column name="tgisinternal" type="boolean" jt="16" mandatory="y" />
			<column name="tgconstrrelid" type="oid" jt="4" mandatory="y" />
			<column name="tgconstrindid" type="oid" jt="4" mandatory="y" />
			<column name="tgconstraint" type="oid" jt="4" mandatory="y" />
			<column name="tgdeferrable" type="boolean" jt="16" mandatory="y" />
			<column name="tginitdeferred" type="boolean" jt="16" mandatory="y" />
			<column name="tgnargs" type="smallint" length="16" jt="5" mandatory="y" />
			<column name="tgattr" type="varchar" jt="12" mandatory="y" />
			<column name="tgargs" type="bytea" jt="-2" mandatory="y" />
			<column name="tgqual" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="tgoldtable" type="name" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="tgnewtable" type="name" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_trigger_tgconstraint_index" unique="NORMAL" spec="USING  btree" >
				<column name="tgconstraint" />
			</index>
			<index name="pg_trigger_tgrelid_tgname_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="tgrelid" />
				<column name="tgname" />
			</index>
			<index name="pg_trigger_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_ts_config" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="cfgname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="cfgnamespace" type="oid" jt="4" mandatory="y" />
			<column name="cfgowner" type="oid" jt="4" mandatory="y" />
			<column name="cfgparser" type="oid" jt="4" mandatory="y" />
			<index name="pg_ts_config_cfgname_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="cfgname" />
				<column name="cfgnamespace" />
			</index>
			<index name="pg_ts_config_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_ts_config_map" type="GLOBAL_TEMPORARY" spec="" >
			<column name="mapcfg" type="oid" jt="4" mandatory="y" />
			<column name="maptokentype" type="integer" length="32" jt="4" mandatory="y" />
			<column name="mapseqno" type="integer" length="32" jt="4" mandatory="y" />
			<column name="mapdict" type="oid" jt="4" mandatory="y" />
			<index name="pg_ts_config_map_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="mapcfg" />
				<column name="maptokentype" />
				<column name="mapseqno" />
			</index>
		</table>
		<table name="pg_ts_dict" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="dictname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="dictnamespace" type="oid" jt="4" mandatory="y" />
			<column name="dictowner" type="oid" jt="4" mandatory="y" />
			<column name="dicttemplate" type="oid" jt="4" mandatory="y" />
			<column name="dictinitoption" type="text" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_ts_dict_dictname_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="dictname" />
				<column name="dictnamespace" />
			</index>
			<index name="pg_ts_dict_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_ts_parser" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="prsname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="prsnamespace" type="oid" jt="4" mandatory="y" />
			<column name="prsstart" type="varchar" jt="12" mandatory="y" />
			<column name="prstoken" type="varchar" jt="12" mandatory="y" />
			<column name="prsend" type="varchar" jt="12" mandatory="y" />
			<column name="prsheadline" type="varchar" jt="12" mandatory="y" />
			<column name="prslextype" type="varchar" jt="12" mandatory="y" />
			<index name="pg_ts_parser_prsname_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="prsname" />
				<column name="prsnamespace" />
			</index>
			<index name="pg_ts_parser_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_ts_template" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="tmplname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="tmplnamespace" type="oid" jt="4" mandatory="y" />
			<column name="tmplinit" type="varchar" jt="12" mandatory="y" />
			<column name="tmpllexize" type="varchar" jt="12" mandatory="y" />
			<index name="pg_ts_template_tmplname_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="tmplname" />
				<column name="tmplnamespace" />
			</index>
			<index name="pg_ts_template_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_type" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="typname" type="name" jt="12" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="typnamespace" type="oid" jt="4" mandatory="y" />
			<column name="typowner" type="oid" jt="4" mandatory="y" />
			<column name="typlen" type="smallint" length="16" jt="5" mandatory="y" />
			<column name="typbyval" type="boolean" jt="16" mandatory="y" />
			<column name="typtype" type="char" jt="1" mandatory="y" />
			<column name="typcategory" type="char" jt="1" mandatory="y" />
			<column name="typispreferred" type="boolean" jt="16" mandatory="y" />
			<column name="typisdefined" type="boolean" jt="16" mandatory="y" />
			<column name="typdelim" type="char" jt="1" mandatory="y" />
			<column name="typrelid" type="oid" jt="4" mandatory="y" />
			<column name="typelem" type="oid" jt="4" mandatory="y" />
			<column name="typarray" type="oid" jt="4" mandatory="y" />
			<column name="typinput" type="varchar" jt="12" mandatory="y" />
			<column name="typoutput" type="varchar" jt="12" mandatory="y" />
			<column name="typreceive" type="varchar" jt="12" mandatory="y" />
			<column name="typsend" type="varchar" jt="12" mandatory="y" />
			<column name="typmodin" type="varchar" jt="12" mandatory="y" />
			<column name="typmodout" type="varchar" jt="12" mandatory="y" />
			<column name="typanalyze" type="varchar" jt="12" mandatory="y" />
			<column name="typalign" type="char" jt="1" mandatory="y" />
			<column name="typstorage" type="char" jt="1" mandatory="y" />
			<column name="typnotnull" type="boolean" jt="16" mandatory="y" />
			<column name="typbasetype" type="oid" jt="4" mandatory="y" />
			<column name="typtypmod" type="integer" length="32" jt="4" mandatory="y" />
			<column name="typndims" type="integer" length="32" jt="4" mandatory="y" />
			<column name="typcollation" type="oid" jt="4" mandatory="y" />
			<column name="typdefaultbin" type="varchar" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="typdefault" type="text" jt="12" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="typacl" type="varchar" jt="12" />
			<index name="pg_type_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
			<index name="pg_type_typname_nsp_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="typname" />
				<column name="typnamespace" />
			</index>
		</table>
		<table name="pg_user_mapping" type="GLOBAL_TEMPORARY" spec="" >
			<column name="oid" type="oid" jt="4" mandatory="y" />
			<column name="umuser" type="oid" jt="4" mandatory="y" />
			<column name="umserver" type="oid" jt="4" mandatory="y" />
			<column name="umoptions" type="text[]" jt="2003" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_user_mapping_oid_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="oid" />
			</index>
			<index name="pg_user_mapping_user_server_index" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="umuser" />
				<column name="umserver" />
			</index>
		</table>
		<view name="pg_available_extension_versions" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}     (x.extname IS NOT NULL) AS installed,     e.superuser,     e.relocatable,     e.schema,     e.requires,     e.comment    FROM (pg_available_extension_versions() e(name, version, superuser, relocatable, schema, requires, comment)      LEFT JOIN pg_extension x ON (((e.name = x.extname) AND (e.version = x.extversion))))]]></view_script>
		</view>
		<view name="pg_available_extensions" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (pg_available_extensions() e(name, default_version, comment)      LEFT JOIN pg_extension x ON ((e.name = x.extname)))]]></view_script>
		</view>
		<view name="pg_config" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}() pg_config(name, setting)]]></view_script>
		</view>
		<view name="pg_cursors" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}() c(name, statement, is_holdable, is_binary, is_scrollable, creation_time)]]></view_script>
		</view>
		<view name="pg_file_settings" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}() a(sourcefile, sourceline, seqno, name, setting, applied, error)]]></view_script>
		</view>
		<view name="pg_group" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}( SELECT pg_auth_members.member            FROM pg_auth_members           WHERE (pg_auth_members.roleid = pg_authid.oid)) AS grolist    FROM pg_authid   WHERE (NOT pg_authid.rolcanlogin)]]></view_script>
		</view>
		<view name="pg_hba_file_rules" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}() a(line_number, type, database, user_name, address, netmask, auth_method, options, error)]]></view_script>
		</view>
		<view name="pg_indexes" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}(i.oid) AS indexdef    FROM ((((pg_index x      JOIN pg_class c ON ((c.oid = x.indrelid)))      JOIN pg_class i ON ((i.oid = x.indexrelid)))      LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))      LEFT JOIN pg_tablespace t ON ((t.oid = i.reltablespace)))   WHERE ((c.relkind = ANY (ARRAY['r'::"char", 'm'::"char", 'p'::"char"])) AND (i.relkind = ANY (ARRAY['i'::"char", 'I'::"char"])))]]></view_script>
		</view>
		<view name="pg_locks" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}() l(locktype, database, relation, page, tuple, virtualxid, transactionid, classid, objid, objsubid, virtualtransaction, pid, mode, granted, fastpath)]]></view_script>
		</view>
		<view name="pg_matviews" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}(c.relowner) AS matviewowner,     t.spcname AS tablespace,     c.relhasindex AS hasindexes,     c.relispopulated AS ispopulated,     pg_get_viewdef(c.oid) AS definition    FROM ((pg_class c      LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))      LEFT JOIN pg_tablespace t ON ((t.oid = c.reltablespace)))   WHERE (c.relkind = 'm'::"char")]]></view_script>
		</view>
		<view name="pg_policies" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (pol.polroles = '{0}'::oid[]) THEN (string_to_array('public'::text, ''::text))::name[]             ELSE ARRAY( SELECT pg_authid.rolname                FROM pg_authid               WHERE (pg_authid.oid = ANY (pol.polroles))               ORDER BY pg_authid.rolname)         END AS roles,         CASE pol.polcmd             WHEN 'r'::"char" THEN 'SELECT'::text             WHEN 'a'::"char" THEN 'INSERT'::text             WHEN 'w'::"char" THEN 'UPDATE'::text             WHEN 'd'::"char" THEN 'DELETE'::text             WHEN '*'::"char" THEN 'ALL'::text             ELSE NULL::text         END AS cmd,     pg_get_expr(pol.polqual, pol.polrelid) AS qual,     pg_get_expr(pol.polwithcheck, pol.polrelid) AS with_check    FROM ((pg_policy pol      JOIN pg_class c ON ((c.oid = pol.polrelid)))      LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))]]></view_script>
		</view>
		<view name="pg_prepared_statements" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}() p(name, statement, prepare_time, parameter_types, from_sql)]]></view_script>
		</view>
		<view name="pg_prepared_xacts" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} ((pg_prepared_xact() p(transaction, gid, prepared, ownerid, dbid)      LEFT JOIN pg_authid u ON ((p.ownerid = u.oid)))      LEFT JOIN pg_database d ON ((p.dbid = d.oid)))]]></view_script>
		</view>
		<view name="pg_publication_tables" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}((p.pubname)::text) gpt(relid),     (pg_class c      JOIN pg_namespace n ON ((n.oid = c.relnamespace)))   WHERE (c.oid = gpt.relid)]]></view_script>
		</view>
		<view name="pg_replication_origin_status" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}() pg_show_replication_origin_status(local_id, external_id, remote_lsn, local_lsn)]]></view_script>
		</view>
		<view name="pg_replication_slots" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (pg_get_replication_slots() l(slot_name, plugin, slot_type, datoid, temporary, active, active_pid, xmin, catalog_xmin, restart_lsn, confirmed_flush_lsn)      LEFT JOIN pg_database d ON ((l.datoid = d.oid)))]]></view_script>
		</view>
		<view name="pg_roles" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (pg_authid      LEFT JOIN pg_db_role_setting s ON (((pg_authid.oid = s.setrole) AND (s.setdatabase = (0)::oid))))]]></view_script>
		</view>
		<view name="pg_rules" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}(r.oid) AS definition    FROM ((pg_rewrite r      JOIN pg_class c ON ((c.oid = r.ev_class)))      LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))   WHERE (r.rulename <> '_RETURN'::name)]]></view_script>
		</view>
		<view name="pg_seclabels" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (rel.relkind = ANY (ARRAY['r'::"char", 'p'::"char"])) THEN 'table'::text             WHEN (rel.relkind = 'v'::"char") THEN 'view'::text             WHEN (rel.relkind = 'm'::"char") THEN 'materialized view'::text             WHEN (rel.relkind = 'S'::"char") THEN 'sequence'::text             WHEN (rel.relkind = 'f'::"char") THEN 'foreign table'::text             ELSE NULL::text         END AS objtype,     rel.relnamespace AS objnamespace,         CASE             WHEN pg_table_is_visible(rel.oid) THEN quote_ident((rel.relname)::text)             ELSE ((quote_ident((nsp.nspname)::text) || '.'::text) || quote_ident((rel.relname)::text))         END AS objname,     l.provider,     l.label    FROM ((pg_seclabel l      JOIN pg_class rel ON (((l.classoid = rel.tableoid) AND (l.objoid = rel.oid))))      JOIN pg_namespace nsp ON ((rel.relnamespace = nsp.oid)))   WHERE (l.objsubid = 0) UNION ALL  SELECT l.objoid,     l.classoid,     l.objsubid,     'column'::text AS objtype,     rel.relnamespace AS objnamespace,     ((         CASE             WHEN pg_table_is_visible(rel.oid) THEN quote_ident((rel.relname)::text)             ELSE ((quote_ident((nsp.nspname)::text) || '.'::text) || quote_ident((rel.relname)::text))         END || '.'::text) || (att.attname)::text) AS objname,     l.provider,     l.label    FROM (((pg_seclabel l      JOIN pg_class rel ON (((l.classoid = rel.tableoid) AND (l.objoid = rel.oid))))      JOIN pg_attribute att ON (((rel.oid = att.attrelid) AND (l.objsubid = att.attnum))))      JOIN pg_namespace nsp ON ((rel.relnamespace = nsp.oid)))   WHERE (l.objsubid <> 0) UNION ALL  SELECT l.objoid,     l.classoid,     l.objsubid,         CASE pro.prokind             WHEN 'a'::"char" THEN 'aggregate'::text             WHEN 'f'::"char" THEN 'function'::text             WHEN 'p'::"char" THEN 'procedure'::text             WHEN 'w'::"char" THEN 'window'::text             ELSE NULL::text         END AS objtype,     pro.pronamespace AS objnamespace,     (((         CASE             WHEN pg_function_is_visible(pro.oid) THEN quote_ident((pro.proname)::text)             ELSE ((quote_ident((nsp.nspname)::text) || '.'::text) || quote_ident((pro.proname)::text))         END || '('::text) || pg_get_function_arguments(pro.oid)) || ')'::text) AS objname,     l.provider,     l.label    FROM ((pg_seclabel l      JOIN pg_proc pro ON (((l.classoid = pro.tableoid) AND (l.objoid = pro.oid))))      JOIN pg_namespace nsp ON ((pro.pronamespace = nsp.oid)))   WHERE (l.objsubid = 0) UNION ALL  SELECT l.objoid,     l.classoid,     l.objsubid,         CASE             WHEN (typ.typtype = 'd'::"char") THEN 'domain'::text             ELSE 'type'::text         END AS objtype,     typ.typnamespace AS objnamespace,         CASE             WHEN pg_type_is_visible(typ.oid) THEN quote_ident((typ.typname)::text)             ELSE ((quote_ident((nsp.nspname)::text) || '.'::text) || quote_ident((typ.typname)::text))         END AS objname,     l.provider,     l.label    FROM ((pg_seclabel l      JOIN pg_type typ ON (((l.classoid = typ.tableoid) AND (l.objoid = typ.oid))))      JOIN pg_namespace nsp ON ((typ.typnamespace = nsp.oid)))   WHERE (l.objsubid = 0) UNION ALL  SELECT l.objoid,     l.classoid,     l.objsubid,     'large object'::text AS objtype,     NULL::oid AS objnamespace,     (l.objoid)::text AS objname,     l.provider,     l.label    FROM (pg_seclabel l      JOIN pg_largeobject_metadata lom ON ((l.objoid = lom.oid)))   WHERE ((l.classoid = ('pg_largeobject'::regclass)::oid) AND (l.objsubid = 0)) UNION ALL  SELECT l.objoid,     l.classoid,     l.objsubid,     'language'::text AS objtype,     NULL::oid AS objnamespace,     quote_ident((lan.lanname)::text) AS objname,     l.provider,     l.label    FROM (pg_seclabel l      JOIN pg_language lan ON (((l.classoid = lan.tableoid) AND (l.objoid = lan.oid))))   WHERE (l.objsubid = 0) UNION ALL  SELECT l.objoid,     l.classoid,     l.objsubid,     'schema'::text AS objtype,     nsp.oid AS objnamespace,     quote_ident((nsp.nspname)::text) AS objname,     l.provider,     l.label    FROM (pg_seclabel l      JOIN pg_namespace nsp ON (((l.classoid = nsp.tableoid) AND (l.objoid = nsp.oid))))   WHERE (l.objsubid = 0) UNION ALL  SELECT l.objoid,     l.classoid,     l.objsubid,     'event trigger'::text AS objtype,     NULL::oid AS objnamespace,     quote_ident((evt.evtname)::text) AS objname,     l.provider,     l.label    FROM (pg_seclabel l      JOIN pg_event_trigger evt ON (((l.classoid = evt.tableoid) AND (l.objoid = evt.oid))))   WHERE (l.objsubid = 0) UNION ALL  SELECT l.objoid,     l.classoid,     l.objsubid,     'publication'::text AS objtype,     NULL::oid AS objnamespace,     quote_ident((p.pubname)::text) AS objname,     l.provider,     l.label    FROM (pg_seclabel l      JOIN pg_publication p ON (((l.classoid = p.tableoid) AND (l.objoid = p.oid))))   WHERE (l.objsubid = 0) UNION ALL  SELECT l.objoid,     l.classoid,     0 AS objsubid,     'subscription'::text AS objtype,     NULL::oid AS objnamespace,     quote_ident((s.subname)::text) AS objname,     l.provider,     l.label    FROM (pg_shseclabel l      JOIN pg_subscription s ON (((l.classoid = s.tableoid) AND (l.objoid = s.oid)))) UNION ALL  SELECT l.objoid,     l.classoid,     0 AS objsubid,     'database'::text AS objtype,     NULL::oid AS objnamespace,     quote_ident((dat.datname)::text) AS objname,     l.provider,     l.label    FROM (pg_shseclabel l      JOIN pg_database dat ON (((l.classoid = dat.tableoid) AND (l.objoid = dat.oid)))) UNION ALL  SELECT l.objoid,     l.classoid,     0 AS objsubid,     'tablespace'::text AS objtype,     NULL::oid AS objnamespace,     quote_ident((spc.spcname)::text) AS objname,     l.provider,     l.label    FROM (pg_shseclabel l      JOIN pg_tablespace spc ON (((l.classoid = spc.tableoid) AND (l.objoid = spc.oid)))) UNION ALL  SELECT l.objoid,     l.classoid,     0 AS objsubid,     'role'::text AS objtype,     NULL::oid AS objnamespace,     quote_ident((rol.rolname)::text) AS objname,     l.provider,     l.label    FROM (pg_shseclabel l      JOIN pg_authid rol ON (((l.classoid = rol.tableoid) AND (l.objoid = rol.oid))))]]></view_script>
		</view>
		<view name="pg_sequences" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}(c.relowner) AS sequenceowner,     (s.seqtypid)::regtype AS data_type,     s.seqstart AS start_value,     s.seqmin AS min_value,     s.seqmax AS max_value,     s.seqincrement AS increment_by,     s.seqcycle AS cycle,     s.seqcache AS cache_size,         CASE             WHEN has_sequence_privilege(c.oid, 'SELECT,USAGE'::text) THEN pg_sequence_last_value((c.oid)::regclass)             ELSE NULL::bigint         END AS last_value    FROM ((pg_sequence s      JOIN pg_class c ON ((c.oid = s.seqrelid)))      LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))   WHERE ((NOT pg_is_other_temp_schema(n.oid)) AND (c.relkind = 'S'::"char"))]]></view_script>
		</view>
		<view name="pg_settings" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}() a(name, setting, unit, category, short_desc, extra_desc, context, vartype, source, min_val, max_val, enumvals, boot_val, reset_val, sourcefile, sourceline, pending_restart)]]></view_script>
		</view>
		<view name="pg_shadow" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (pg_authid      LEFT JOIN pg_db_role_setting s ON (((pg_authid.oid = s.setrole) AND (s.setdatabase = (0)::oid))))   WHERE pg_authid.rolcanlogin]]></view_script>
		</view>
		<view name="pg_stat_activity" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} ((pg_stat_get_activity(NULL::integer) s(datid, pid, usesysid, application_name, state, query, wait_event_type, wait_event, xact_start, query_start, backend_start, state_change, client_addr, client_hostname, client_port, backend_xid, backend_xmin, backend_type, ssl, sslversion, sslcipher, sslbits, sslcompression, ssl_client_dn, ssl_client_serial, ssl_issuer_dn, gss_auth, gss_princ, gss_enc)      LEFT JOIN pg_database d ON ((s.datid = d.oid)))      LEFT JOIN pg_authid u ON ((s.usesysid = u.oid)))]]></view_script>
		</view>
		<view name="pg_stat_all_indexes" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}(i.oid) AS idx_scan,     pg_stat_get_tuples_returned(i.oid) AS idx_tup_read,     pg_stat_get_tuples_fetched(i.oid) AS idx_tup_fetch    FROM (((pg_class c      JOIN pg_index x ON ((c.oid = x.indrelid)))      JOIN pg_class i ON ((i.oid = x.indexrelid)))      LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))   WHERE (c.relkind = ANY (ARRAY['r'::"char", 't'::"char", 'm'::"char"]))]]></view_script>
		</view>
		<view name="pg_stat_all_tables" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}(c.oid) AS seq_scan,     pg_stat_get_tuples_returned(c.oid) AS seq_tup_read,     (sum(pg_stat_get_numscans(i.indexrelid)))::bigint AS idx_scan,     ((sum(pg_stat_get_tuples_fetched(i.indexrelid)))::bigint + pg_stat_get_tuples_fetched(c.oid)) AS idx_tup_fetch,     pg_stat_get_tuples_inserted(c.oid) AS n_tup_ins,     pg_stat_get_tuples_updated(c.oid) AS n_tup_upd,     pg_stat_get_tuples_deleted(c.oid) AS n_tup_del,     pg_stat_get_tuples_hot_updated(c.oid) AS n_tup_hot_upd,     pg_stat_get_live_tuples(c.oid) AS n_live_tup,     pg_stat_get_dead_tuples(c.oid) AS n_dead_tup,     pg_stat_get_mod_since_analyze(c.oid) AS n_mod_since_analyze,     pg_stat_get_last_vacuum_time(c.oid) AS last_vacuum,     pg_stat_get_last_autovacuum_time(c.oid) AS last_autovacuum,     pg_stat_get_last_analyze_time(c.oid) AS last_analyze,     pg_stat_get_last_autoanalyze_time(c.oid) AS last_autoanalyze,     pg_stat_get_vacuum_count(c.oid) AS vacuum_count,     pg_stat_get_autovacuum_count(c.oid) AS autovacuum_count,     pg_stat_get_analyze_count(c.oid) AS analyze_count,     pg_stat_get_autoanalyze_count(c.oid) AS autoanalyze_count    FROM ((pg_class c      LEFT JOIN pg_index i ON ((c.oid = i.indrelid)))      LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))   WHERE (c.relkind = ANY (ARRAY['r'::"char", 't'::"char", 'm'::"char"]))   GROUP BY c.oid, n.nspname, c.relname]]></view_script>
		</view>
		<view name="pg_stat_archiver" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}() s(archived_count, last_archived_wal, last_archived_time, failed_count, last_failed_wal, last_failed_time, stats_reset)]]></view_script>
		</view>
		<view name="pg_stat_bgwriter" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}() AS checkpoints_timed,     pg_stat_get_bgwriter_requested_checkpoints() AS checkpoints_req,     pg_stat_get_checkpoint_write_time() AS checkpoint_write_time,     pg_stat_get_checkpoint_sync_time() AS checkpoint_sync_time,     pg_stat_get_bgwriter_buf_written_checkpoints() AS buffers_checkpoint,     pg_stat_get_bgwriter_buf_written_clean() AS buffers_clean,     pg_stat_get_bgwriter_maxwritten_clean() AS maxwritten_clean,     pg_stat_get_buf_written_backend() AS buffers_backend,     pg_stat_get_buf_fsync_backend() AS buffers_backend_fsync,     pg_stat_get_buf_alloc() AS buffers_alloc,     pg_stat_get_bgwriter_stat_reset_time() AS stats_reset]]></view_script>
		</view>
		<view name="pg_stat_database" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (d.oid = (0)::oid) THEN 0             ELSE pg_stat_get_db_numbackends(d.oid)         END AS numbackends,     pg_stat_get_db_xact_commit(d.oid) AS xact_commit,     pg_stat_get_db_xact_rollback(d.oid) AS xact_rollback,     (pg_stat_get_db_blocks_fetched(d.oid) - pg_stat_get_db_blocks_hit(d.oid)) AS blks_read,     pg_stat_get_db_blocks_hit(d.oid) AS blks_hit,     pg_stat_get_db_tuples_returned(d.oid) AS tup_returned,     pg_stat_get_db_tuples_fetched(d.oid) AS tup_fetched,     pg_stat_get_db_tuples_inserted(d.oid) AS tup_inserted,     pg_stat_get_db_tuples_updated(d.oid) AS tup_updated,     pg_stat_get_db_tuples_deleted(d.oid) AS tup_deleted,     pg_stat_get_db_conflict_all(d.oid) AS conflicts,     pg_stat_get_db_temp_files(d.oid) AS temp_files,     pg_stat_get_db_temp_bytes(d.oid) AS temp_bytes,     pg_stat_get_db_deadlocks(d.oid) AS deadlocks,     pg_stat_get_db_checksum_failures(d.oid) AS checksum_failures,     pg_stat_get_db_checksum_last_failure(d.oid) AS checksum_last_failure,     pg_stat_get_db_blk_read_time(d.oid) AS blk_read_time,     pg_stat_get_db_blk_write_time(d.oid) AS blk_write_time,     pg_stat_get_db_stat_reset_time(d.oid) AS stats_reset    FROM ( SELECT 0 AS oid,             NULL::name AS datname         UNION ALL          SELECT pg_database.oid,             pg_database.datname            FROM pg_database) d]]></view_script>
		</view>
		<view name="pg_stat_database_conflicts" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}(d.oid) AS confl_tablespace,     pg_stat_get_db_conflict_lock(d.oid) AS confl_lock,     pg_stat_get_db_conflict_snapshot(d.oid) AS confl_snapshot,     pg_stat_get_db_conflict_bufferpin(d.oid) AS confl_bufferpin,     pg_stat_get_db_conflict_startup_deadlock(d.oid) AS confl_deadlock    FROM pg_database d]]></view_script>
		</view>
		<view name="pg_stat_gssapi" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}(NULL::integer) s(datid, pid, usesysid, application_name, state, query, wait_event_type, wait_event, xact_start, query_start, backend_start, state_change, client_addr, client_hostname, client_port, backend_xid, backend_xmin, backend_type, ssl, sslversion, sslcipher, sslbits, sslcompression, ssl_client_dn, ssl_client_serial, ssl_issuer_dn, gss_auth, gss_princ, gss_enc)]]></view_script>
		</view>
		<view name="pg_stat_progress_cluster" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}     (s.param3)::oid AS cluster_index_relid,     s.param4 AS heap_tuples_scanned,     s.param5 AS heap_tuples_written,     s.param6 AS heap_blks_total,     s.param7 AS heap_blks_scanned,     s.param8 AS index_rebuild_count    FROM (pg_stat_get_progress_info('CLUSTER'::text) s(pid, datid, relid, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20)      LEFT JOIN pg_database d ON ((s.datid = d.oid)))]]></view_script>
		</view>
		<view name="pg_stat_progress_create_index" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}     (s.param7)::oid AS index_relid,         CASE s.param1             WHEN 1 THEN 'CREATE INDEX'::text             WHEN 2 THEN 'CREATE INDEX CONCURRENTLY'::text             WHEN 3 THEN 'REINDEX'::text             WHEN 4 THEN 'REINDEX CONCURRENTLY'::text             ELSE NULL::text         END AS command,         CASE s.param10             WHEN 0 THEN 'initializing'::text             WHEN 1 THEN 'waiting for writers before build'::text             WHEN 2 THEN ('building index'::text || COALESCE((': '::text || pg_indexam_progress_phasename((s.param9)::oid, s.param11)), ''::text))             WHEN 3 THEN 'waiting for writers before validation'::text             WHEN 4 THEN 'index validation: scanning index'::text             WHEN 5 THEN 'index validation: sorting tuples'::text             WHEN 6 THEN 'index validation: scanning table'::text             WHEN 7 THEN 'waiting for old snapshots'::text             WHEN 8 THEN 'waiting for readers before marking dead'::text             WHEN 9 THEN 'waiting for readers before dropping'::text             ELSE NULL::text         END AS phase,     s.param4 AS lockers_total,     s.param5 AS lockers_done,     s.param6 AS current_locker_pid,     s.param16 AS blocks_total,     s.param17 AS blocks_done,     s.param12 AS tuples_total,     s.param13 AS tuples_done,     s.param14 AS partitions_total,     s.param15 AS partitions_done    FROM (pg_stat_get_progress_info('CREATE INDEX'::text) s(pid, datid, relid, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20)      LEFT JOIN pg_database d ON ((s.datid = d.oid)))]]></view_script>
		</view>
		<view name="pg_stat_progress_vacuum" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (pg_stat_get_progress_info('VACUUM'::text) s(pid, datid, relid, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20)      LEFT JOIN pg_database d ON ((s.datid = d.oid)))]]></view_script>
		</view>
		<view name="pg_stat_replication" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} ((pg_stat_get_activity(NULL::integer) s(datid, pid, usesysid, application_name, state, query, wait_event_type, wait_event, xact_start, query_start, backend_start, state_change, client_addr, client_hostname, client_port, backend_xid, backend_xmin, backend_type, ssl, sslversion, sslcipher, sslbits, sslcompression, ssl_client_dn, ssl_client_serial, ssl_issuer_dn, gss_auth, gss_princ, gss_enc)      JOIN pg_stat_get_wal_senders() w(pid, state, sent_lsn, write_lsn, flush_lsn, replay_lsn, write_lag, flush_lag, replay_lag, sync_priority, sync_state, reply_time) ON ((s.pid = w.pid)))      LEFT JOIN pg_authid u ON ((s.usesysid = u.oid)))]]></view_script>
		</view>
		<view name="pg_stat_ssl" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}(NULL::integer) s(datid, pid, usesysid, application_name, state, query, wait_event_type, wait_event, xact_start, query_start, backend_start, state_change, client_addr, client_hostname, client_port, backend_xid, backend_xmin, backend_type, ssl, sslversion, sslcipher, sslbits, sslcompression, ssl_client_dn, ssl_client_serial, ssl_issuer_dn, gss_auth, gss_princ, gss_enc)]]></view_script>
		</view>
		<view name="pg_stat_subscription" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (pg_subscription su      LEFT JOIN pg_stat_get_subscription(NULL::oid) st(subid, relid, pid, received_lsn, last_msg_send_time, last_msg_receipt_time, latest_end_lsn, latest_end_time) ON ((st.subid = su.oid)))]]></view_script>
		</view>
		<view name="pg_stat_sys_indexes" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} ((pg_stat_all_indexes.schemaname = ANY (ARRAY['pg_catalog'::name, 'information_schema'::name])) OR (pg_stat_all_indexes.schemaname ~ '^pg_toast'::text))]]></view_script>
		</view>
		<view name="pg_stat_sys_tables" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} ((pg_stat_all_tables.schemaname = ANY (ARRAY['pg_catalog'::name, 'information_schema'::name])) OR (pg_stat_all_tables.schemaname ~ '^pg_toast'::text))]]></view_script>
		</view>
		<view name="pg_stat_user_functions" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}(p.oid) AS calls,     pg_stat_get_function_total_time(p.oid) AS total_time,     pg_stat_get_function_self_time(p.oid) AS self_time    FROM (pg_proc p      LEFT JOIN pg_namespace n ON ((n.oid = p.pronamespace)))   WHERE ((p.prolang <> (12)::oid) AND (pg_stat_get_function_calls(p.oid) IS NOT NULL))]]></view_script>
		</view>
		<view name="pg_stat_user_indexes" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} ((pg_stat_all_indexes.schemaname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])) AND (pg_stat_all_indexes.schemaname !~ '^pg_toast'::text))]]></view_script>
		</view>
		<view name="pg_stat_user_tables" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} ((pg_stat_all_tables.schemaname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])) AND (pg_stat_all_tables.schemaname !~ '^pg_toast'::text))]]></view_script>
		</view>
		<view name="pg_stat_wal_receiver" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}() s(pid, status, receive_start_lsn, receive_start_tli, received_lsn, received_tli, last_msg_send_time, last_msg_receipt_time, latest_end_lsn, latest_end_time, slot_name, sender_host, sender_port, conninfo)   WHERE (s.pid IS NOT NULL)]]></view_script>
		</view>
		<view name="pg_stat_xact_all_tables" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}(c.oid) AS seq_scan,     pg_stat_get_xact_tuples_returned(c.oid) AS seq_tup_read,     (sum(pg_stat_get_xact_numscans(i.indexrelid)))::bigint AS idx_scan,     ((sum(pg_stat_get_xact_tuples_fetched(i.indexrelid)))::bigint + pg_stat_get_xact_tuples_fetched(c.oid)) AS idx_tup_fetch,     pg_stat_get_xact_tuples_inserted(c.oid) AS n_tup_ins,     pg_stat_get_xact_tuples_updated(c.oid) AS n_tup_upd,     pg_stat_get_xact_tuples_deleted(c.oid) AS n_tup_del,     pg_stat_get_xact_tuples_hot_updated(c.oid) AS n_tup_hot_upd    FROM ((pg_class c      LEFT JOIN pg_index i ON ((c.oid = i.indrelid)))      LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))   WHERE (c.relkind = ANY (ARRAY['r'::"char", 't'::"char", 'm'::"char"]))   GROUP BY c.oid, n.nspname, c.relname]]></view_script>
		</view>
		<view name="pg_stat_xact_sys_tables" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} ((pg_stat_xact_all_tables.schemaname = ANY (ARRAY['pg_catalog'::name, 'information_schema'::name])) OR (pg_stat_xact_all_tables.schemaname ~ '^pg_toast'::text))]]></view_script>
		</view>
		<view name="pg_stat_xact_user_functions" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}(p.oid) AS calls,     pg_stat_get_xact_function_total_time(p.oid) AS total_time,     pg_stat_get_xact_function_self_time(p.oid) AS self_time    FROM (pg_proc p      LEFT JOIN pg_namespace n ON ((n.oid = p.pronamespace)))   WHERE ((p.prolang <> (12)::oid) AND (pg_stat_get_xact_function_calls(p.oid) IS NOT NULL))]]></view_script>
		</view>
		<view name="pg_stat_xact_user_tables" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} ((pg_stat_xact_all_tables.schemaname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])) AND (pg_stat_xact_all_tables.schemaname !~ '^pg_toast'::text))]]></view_script>
		</view>
		<view name="pg_statio_all_indexes" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}     (pg_stat_get_blocks_fetched(i.oid) - pg_stat_get_blocks_hit(i.oid)) AS idx_blks_read,     pg_stat_get_blocks_hit(i.oid) AS idx_blks_hit    FROM (((pg_class c      JOIN pg_index x ON ((c.oid = x.indrelid)))      JOIN pg_class i ON ((i.oid = x.indexrelid)))      LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))   WHERE (c.relkind = ANY (ARRAY['r'::"char", 't'::"char", 'm'::"char"]))]]></view_script>
		</view>
		<view name="pg_statio_all_sequences" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}     (pg_stat_get_blocks_fetched(c.oid) - pg_stat_get_blocks_hit(c.oid)) AS blks_read,     pg_stat_get_blocks_hit(c.oid) AS blks_hit    FROM (pg_class c      LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))   WHERE (c.relkind = 'S'::"char")]]></view_script>
		</view>
		<view name="pg_statio_all_tables" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}     (pg_stat_get_blocks_fetched(c.oid) - pg_stat_get_blocks_hit(c.oid)) AS heap_blks_read,     pg_stat_get_blocks_hit(c.oid) AS heap_blks_hit,     (sum((pg_stat_get_blocks_fetched(i.indexrelid) - pg_stat_get_blocks_hit(i.indexrelid))))::bigint AS idx_blks_read,     (sum(pg_stat_get_blocks_hit(i.indexrelid)))::bigint AS idx_blks_hit,     (pg_stat_get_blocks_fetched(t.oid) - pg_stat_get_blocks_hit(t.oid)) AS toast_blks_read,     pg_stat_get_blocks_hit(t.oid) AS toast_blks_hit,     (sum((pg_stat_get_blocks_fetched(x.indexrelid) - pg_stat_get_blocks_hit(x.indexrelid))))::bigint AS tidx_blks_read,     (sum(pg_stat_get_blocks_hit(x.indexrelid)))::bigint AS tidx_blks_hit    FROM ((((pg_class c      LEFT JOIN pg_index i ON ((c.oid = i.indrelid)))      LEFT JOIN pg_class t ON ((c.reltoastrelid = t.oid)))      LEFT JOIN pg_index x ON ((t.oid = x.indrelid)))      LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))   WHERE (c.relkind = ANY (ARRAY['r'::"char", 't'::"char", 'm'::"char"]))   GROUP BY c.oid, n.nspname, c.relname, t.oid, x.indrelid]]></view_script>
		</view>
		<view name="pg_statio_sys_indexes" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} ((pg_statio_all_indexes.schemaname = ANY (ARRAY['pg_catalog'::name, 'information_schema'::name])) OR (pg_statio_all_indexes.schemaname ~ '^pg_toast'::text))]]></view_script>
		</view>
		<view name="pg_statio_sys_sequences" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} ((pg_statio_all_sequences.schemaname = ANY (ARRAY['pg_catalog'::name, 'information_schema'::name])) OR (pg_statio_all_sequences.schemaname ~ '^pg_toast'::text))]]></view_script>
		</view>
		<view name="pg_statio_sys_tables" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} ((pg_statio_all_tables.schemaname = ANY (ARRAY['pg_catalog'::name, 'information_schema'::name])) OR (pg_statio_all_tables.schemaname ~ '^pg_toast'::text))]]></view_script>
		</view>
		<view name="pg_statio_user_indexes" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} ((pg_statio_all_indexes.schemaname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])) AND (pg_statio_all_indexes.schemaname !~ '^pg_toast'::text))]]></view_script>
		</view>
		<view name="pg_statio_user_sequences" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} ((pg_statio_all_sequences.schemaname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])) AND (pg_statio_all_sequences.schemaname !~ '^pg_toast'::text))]]></view_script>
		</view>
		<view name="pg_statio_user_tables" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} ((pg_statio_all_tables.schemaname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])) AND (pg_statio_all_tables.schemaname !~ '^pg_toast'::text))]]></view_script>
		</view>
		<view name="pg_stats" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (s.stakind1 = 1) THEN s.stavalues1             WHEN (s.stakind2 = 1) THEN s.stavalues2             WHEN (s.stakind3 = 1) THEN s.stavalues3             WHEN (s.stakind4 = 1) THEN s.stavalues4             WHEN (s.stakind5 = 1) THEN s.stavalues5             ELSE NULL::anyarray         END AS most_common_vals,         CASE             WHEN (s.stakind1 = 1) THEN s.stanumbers1             WHEN (s.stakind2 = 1) THEN s.stanumbers2             WHEN (s.stakind3 = 1) THEN s.stanumbers3             WHEN (s.stakind4 = 1) THEN s.stanumbers4             WHEN (s.stakind5 = 1) THEN s.stanumbers5             ELSE NULL::real[]         END AS most_common_freqs,         CASE             WHEN (s.stakind1 = 2) THEN s.stavalues1             WHEN (s.stakind2 = 2) THEN s.stavalues2             WHEN (s.stakind3 = 2) THEN s.stavalues3             WHEN (s.stakind4 = 2) THEN s.stavalues4             WHEN (s.stakind5 = 2) THEN s.stavalues5             ELSE NULL::anyarray         END AS histogram_bounds,         CASE             WHEN (s.stakind1 = 3) THEN s.stanumbers1[1]             WHEN (s.stakind2 = 3) THEN s.stanumbers2[1]             WHEN (s.stakind3 = 3) THEN s.stanumbers3[1]             WHEN (s.stakind4 = 3) THEN s.stanumbers4[1]             WHEN (s.stakind5 = 3) THEN s.stanumbers5[1]             ELSE NULL::real         END AS correlation,         CASE             WHEN (s.stakind1 = 4) THEN s.stavalues1             WHEN (s.stakind2 = 4) THEN s.stavalues2             WHEN (s.stakind3 = 4) THEN s.stavalues3             WHEN (s.stakind4 = 4) THEN s.stavalues4             WHEN (s.stakind5 = 4) THEN s.stavalues5             ELSE NULL::anyarray         END AS most_common_elems,         CASE             WHEN (s.stakind1 = 4) THEN s.stanumbers1             WHEN (s.stakind2 = 4) THEN s.stanumbers2             WHEN (s.stakind3 = 4) THEN s.stanumbers3             WHEN (s.stakind4 = 4) THEN s.stanumbers4             WHEN (s.stakind5 = 4) THEN s.stanumbers5             ELSE NULL::real[]         END AS most_common_elem_freqs,         CASE             WHEN (s.stakind1 = 5) THEN s.stanumbers1             WHEN (s.stakind2 = 5) THEN s.stanumbers2             WHEN (s.stakind3 = 5) THEN s.stanumbers3             WHEN (s.stakind4 = 5) THEN s.stanumbers4             WHEN (s.stakind5 = 5) THEN s.stanumbers5             ELSE NULL::real[]         END AS elem_count_histogram    FROM (((pg_statistic s      JOIN pg_class c ON ((c.oid = s.starelid)))      JOIN pg_attribute a ON (((c.oid = a.attrelid) AND (a.attnum = s.staattnum))))      LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))   WHERE ((NOT a.attisdropped) AND has_column_privilege(c.oid, a.attnum, 'select'::text) AND ((c.relrowsecurity = false) OR (NOT row_security_active(c.oid))))]]></view_script>
		</view>
		<view name="pg_stats_ext" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}(s.stxowner) AS statistics_owner,     ( SELECT array_agg(a.attname ORDER BY a.attnum) AS array_agg            FROM (unnest(s.stxkeys) k(k)              JOIN pg_attribute a ON (((a.attrelid = s.stxrelid) AND (a.attnum = k.k))))) AS attnames,     s.stxkind AS kinds,     sd.stxdndistinct AS n_distinct,     sd.stxddependencies AS dependencies,     m.most_common_vals,     m.most_common_val_nulls,     m.most_common_freqs,     m.most_common_base_freqs    FROM (((((pg_statistic_ext s      JOIN pg_class c ON ((c.oid = s.stxrelid)))      JOIN pg_statistic_ext_data sd ON ((s.oid = sd.stxoid)))      LEFT JOIN pg_namespace cn ON ((cn.oid = c.relnamespace)))      LEFT JOIN pg_namespace sn ON ((sn.oid = s.stxnamespace)))      LEFT JOIN LATERAL ( SELECT array_agg(pg_mcv_list_items."values") AS most_common_vals,             array_agg(pg_mcv_list_items.nulls) AS most_common_val_nulls,             array_agg(pg_mcv_list_items.frequency) AS most_common_freqs,             array_agg(pg_mcv_list_items.base_frequency) AS most_common_base_freqs            FROM pg_mcv_list_items(sd.stxdmcv) pg_mcv_list_items(index, "values", nulls, frequency, base_frequency)) m ON ((sd.stxdmcv IS NOT NULL)))   WHERE ((NOT (EXISTS ( SELECT 1            FROM (unnest(s.stxkeys) k(k)              JOIN pg_attribute a ON (((a.attrelid = s.stxrelid) AND (a.attnum = k.k))))           WHERE (NOT has_column_privilege(c.oid, a.attnum, 'select'::text))))) AND ((c.relrowsecurity = false) OR (NOT row_security_active(c.oid))))]]></view_script>
		</view>
		<view name="pg_tables" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}(c.relowner) AS tableowner,     t.spcname AS tablespace,     c.relhasindex AS hasindexes,     c.relhasrules AS hasrules,     c.relhastriggers AS hastriggers,     c.relrowsecurity AS rowsecurity    FROM ((pg_class c      LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))      LEFT JOIN pg_tablespace t ON ((t.oid = c.reltablespace)))   WHERE (c.relkind = ANY (ARRAY['r'::"char", 'p'::"char"]))]]></view_script>
		</view>
		<view name="pg_timezone_abbrevs" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}() pg_timezone_abbrevs(abbrev, utc_offset, is_dst)]]></view_script>
		</view>
		<view name="pg_timezone_names" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}() pg_timezone_names(name, abbrev, utc_offset, is_dst)]]></view_script>
		</view>
		<view name="pg_user" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT pg_shadow.usename,     pg_shadow.usesysid,     pg_shadow.usecreatedb,     pg_shadow.usesuper,     pg_shadow.userepl,     pg_shadow.usebypassrls,     '********'::text AS passwd,     pg_shadow.valuntil,     pg_shadow.useconfig    FROM pg_shadow]]></view_script>
		</view>
		<view name="pg_user_mappings" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} (u.umuser = (0)::oid) THEN 'public'::name             ELSE a.rolname         END AS usename,         CASE             WHEN (((u.umuser <> (0)::oid) AND (a.rolname = CURRENT_USER) AND (pg_has_role(s.srvowner, 'USAGE'::text) OR has_server_privilege(s.oid, 'USAGE'::text))) OR ((u.umuser = (0)::oid) AND pg_has_role(s.srvowner, 'USAGE'::text)) OR ( SELECT pg_authid.rolsuper                FROM pg_authid               WHERE (pg_authid.rolname = CURRENT_USER))) THEN u.umoptions             ELSE NULL::text[]         END AS umoptions    FROM ((pg_user_mapping u      JOIN pg_foreign_server s ON ((u.umserver = s.oid)))      LEFT JOIN pg_authid a ON ((a.oid = u.umuser)))]]></view_script>
		</view>
		<view name="pg_views" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view}(c.relowner) AS viewowner,     pg_get_viewdef(c.oid) AS definition    FROM (pg_class c      LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))   WHERE (c.relkind = 'v'::"char")]]></view_script>
		</view>
		<function name="RI_FKey_cascade_del" id="Function-d65" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_cascade_del"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_cascade_del$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="RI_FKey_cascade_upd" id="Function-18b4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_cascade_upd"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_cascade_upd$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="RI_FKey_check_ins" id="Function-4ee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_check_ins"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_check_ins$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="RI_FKey_check_upd" id="Function-2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_check_upd"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_check_upd$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="RI_FKey_noaction_del" id="Function-19ea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_noaction_del"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_noaction_del$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="RI_FKey_noaction_upd" id="Function-131d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_noaction_upd"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_noaction_upd$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="RI_FKey_restrict_del" id="Function-1a77" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_restrict_del"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_restrict_del$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="RI_FKey_restrict_upd" id="Function-1f1e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_restrict_upd"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_restrict_upd$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="RI_FKey_setdefault_del" id="Function-1d05" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_setdefault_del"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_setdefault_del$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="RI_FKey_setdefault_upd" id="Function-c6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_setdefault_upd"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_setdefault_upd$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="RI_FKey_setnull_del" id="Function-12a9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_setnull_del"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_setnull_del$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="RI_FKey_setnull_upd" id="Function-1b32" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_setnull_upd"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_setnull_upd$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="abbrev" id="Function-b15" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abbrev(inet)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_abbrev$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="abbrev" id="Function-1a55" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abbrev(cidr)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidr_abbrev$function$
;]]></string>
			<input_param jt="-1" type="cidr" inOut="1" />
		</function>
		<function name="abs" id="Function-c7d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abs(real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4abs$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="abs" id="Function-1b34" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abs(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8abs$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="abs" id="Function-994" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abs(bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8abs$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="abs" id="Function-8fe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abs(integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4abs$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="abs" id="Function-6ec" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abs(smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2abs$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="abs" id="Function-2175" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abs(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_abs$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="aclcontains" id="Function-9dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.aclcontains(aclitem[], aclitem)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$aclcontains$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="aclitem" inOut="1" />
		</function>
		<function name="acldefault" id="Function-14a2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.acldefault("char", oid)
 RETURNS aclitem[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$acldefault_sql$function$
;]]></string>
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="aclexplode" id="Function-f8d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.aclexplode(acl aclitem[], OUT grantor oid, OUT grantee oid, OUT privilege_type text, OUT is_grantable boolean)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT ROWS 10
AS $function$aclexplode$function$
;]]></string>
			<input_param name="acl" jt="-1" type="ARRAY" inOut="1" />
			<input_param name="grantor" jt="-1" type="oid" inOut="3" />
			<input_param name="grantee" jt="-1" type="oid" inOut="3" />
			<input_param name="privilege_type" jt="-1" type="text" inOut="3" />
			<input_param name="is_grantable" jt="-1" type="boolean" inOut="3" />
		</function>
		<function name="aclinsert" id="Function-2216" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.aclinsert(aclitem[], aclitem)
 RETURNS aclitem[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$aclinsert$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="aclitem" inOut="1" />
		</function>
		<function name="aclitemeq" id="Function-468" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.aclitemeq(aclitem, aclitem)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$aclitem_eq$function$
;]]></string>
			<input_param jt="-1" type="aclitem" inOut="1" />
			<input_param jt="-1" type="aclitem" inOut="1" />
		</function>
		<function name="aclitemin" id="Function-96" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.aclitemin(cstring)
 RETURNS aclitem
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$aclitemin$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="aclitemout" id="Function-233" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.aclitemout(aclitem)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$aclitemout$function$
;]]></string>
			<input_param jt="-1" type="aclitem" inOut="1" />
		</function>
		<function name="aclremove" id="Function-2386" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.aclremove(aclitem[], aclitem)
 RETURNS aclitem[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$aclremove$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="aclitem" inOut="1" />
		</function>
		<function name="acos" id="Function-562" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.acos(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dacos$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="acosd" id="Function-931" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.acosd(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dacosd$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="acosh" id="Function-1ebc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.acosh(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dacosh$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="age" id="Function-1222" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.age(xid)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$xid_age$function$
;]]></string>
			<input_param jt="-1" type="xid" inOut="1" />
		</function>
		<function name="age" id="Function-1200" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.age(timestamp with time zone, timestamp with time zone)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptz_age$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="age" id="Function-1de5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.age(timestamp with time zone)
 RETURNS interval
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.age(cast(current_date as timestamp with time zone), $1)$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="age" id="Function-1ad8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.age(timestamp without time zone, timestamp without time zone)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_age$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="age" id="Function-1983" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.age(timestamp without time zone)
 RETURNS interval
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.age(cast(current_date as timestamp without time zone), $1)$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="amvalidate" id="Function-1970" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.amvalidate(oid)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$amvalidate$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="any_in" id="Function-19fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.any_in(cstring)
 RETURNS "any"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$any_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="any_out" id="Function-7a2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.any_out("any")
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$any_out$function$
;]]></string>
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="anyarray_in" id="Function-10ec" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyarray_in(cstring)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$anyarray_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="anyarray_out" id="Function-1349" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyarray_out(anyarray)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anyarray_out$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="anyarray_recv" id="Function-c45" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyarray_recv(internal)
 RETURNS anyarray
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anyarray_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="anyarray_send" id="Function-204f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyarray_send(anyarray)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anyarray_send$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="anyelement_in" id="Function-135d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyelement_in(cstring)
 RETURNS anyelement
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$anyelement_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="anyelement_out" id="Function-17fe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyelement_out(anyelement)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$anyelement_out$function$
;]]></string>
			<input_param jt="-1" type="anyelement" inOut="1" />
		</function>
		<function name="anyenum_in" id="Function-226c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyenum_in(cstring)
 RETURNS anyenum
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$anyenum_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="anyenum_out" id="Function-9cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyenum_out(anyenum)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anyenum_out$function$
;]]></string>
			<input_param jt="-1" type="anyenum" inOut="1" />
		</function>
		<function name="anynonarray_in" id="Function-1376" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anynonarray_in(cstring)
 RETURNS anynonarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$anynonarray_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="anynonarray_out" id="Function-1c02" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anynonarray_out(anynonarray)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$anynonarray_out$function$
;]]></string>
			<input_param jt="-1" type="anynonarray" inOut="1" />
		</function>
		<function name="anyrange_in" id="Function-22b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyrange_in(cstring, oid, integer)
 RETURNS anyrange
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anyrange_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="anyrange_out" id="Function-24f2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyrange_out(anyrange)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anyrange_out$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="anytextcat" id="Function-70c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anytextcat(anynonarray, text)
 RETURNS text
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT COST 1
AS $function$select $1::pg_catalog.text || $2$function$
;]]></string>
			<input_param jt="-1" type="anynonarray" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="area" id="Function-903" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.area(circle)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_area$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="area" id="Function-1784" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.area(box)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_area$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="area" id="Function-35d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.area(path)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_area$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="areajoinsel" id="Function-17fc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.areajoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$areajoinsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="areasel" id="Function-5b2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.areasel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$areasel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="array_agg_array_finalfn" id="Function-1de5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_agg_array_finalfn(internal, anyarray)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_agg_array_finalfn$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="array_agg_array_transfn" id="Function-1ed0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_agg_array_transfn(internal, anyarray)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_agg_array_transfn$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="array_agg_finalfn" id="Function-957" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_agg_finalfn(internal, anynonarray)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_agg_finalfn$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="anynonarray" inOut="1" />
		</function>
		<function name="array_agg_transfn" id="Function-11df" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_agg_transfn(internal, anynonarray)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_agg_transfn$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="anynonarray" inOut="1" />
		</function>
		<function name="array_append" id="Function-1502" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_append(anyarray, anyelement)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_append$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="anyelement" inOut="1" />
		</function>
		<function name="array_cat" id="Function-1ecf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_cat(anyarray, anyarray)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_cat$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="array_dims" id="Function-a9f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_dims(anyarray)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_dims$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="array_eq" id="Function-d89" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_eq(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_eq$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="array_fill" id="Function-1315" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_fill(anyelement, integer[])
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_fill$function$
;]]></string>
			<input_param jt="-1" type="anyelement" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="array_fill" id="Function-cfc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_fill(anyelement, integer[], integer[])
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_fill_with_lower_bounds$function$
;]]></string>
			<input_param jt="-1" type="anyelement" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="array_ge" id="Function-241e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_ge(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_ge$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="array_gt" id="Function-1ac1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_gt(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_gt$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="array_in" id="Function-19b6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_in(cstring, oid, integer)
 RETURNS anyarray
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$array_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="array_larger" id="Function-15b1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_larger(anyarray, anyarray)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_larger$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="array_le" id="Function-1671" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_le(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_le$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="array_length" id="Function-25c1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_length(anyarray, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_length$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="array_lower" id="Function-265d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_lower(anyarray, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_lower$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="array_lt" id="Function-11f9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_lt(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_lt$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="array_ndims" id="Function-1d0f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_ndims(anyarray)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_ndims$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="array_ne" id="Function-1b5e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_ne(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_ne$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="array_out" id="Function-306" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_out(anyarray)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$array_out$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="array_position" id="Function-1425" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_position(anyarray, anyelement)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_position$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="anyelement" inOut="1" />
		</function>
		<function name="array_position" id="Function-84e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_position(anyarray, anyelement, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_position_start$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="anyelement" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="array_positions" id="Function-ca1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_positions(anyarray, anyelement)
 RETURNS integer[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_positions$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="anyelement" inOut="1" />
		</function>
		<function name="array_prepend" id="Function-1faa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_prepend(anyelement, anyarray)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_prepend$function$
;]]></string>
			<input_param jt="-1" type="anyelement" inOut="1" />
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="array_recv" id="Function-f46" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_recv(internal, oid, integer)
 RETURNS anyarray
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$array_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="array_remove" id="Function-1f19" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_remove(anyarray, anyelement)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_remove$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="anyelement" inOut="1" />
		</function>
		<function name="array_replace" id="Function-b16" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_replace(anyarray, anyelement, anyelement)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_replace$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="anyelement" inOut="1" />
			<input_param jt="-1" type="anyelement" inOut="1" />
		</function>
		<function name="array_send" id="Function-1393" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_send(anyarray)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$array_send$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="array_smaller" id="Function-22cb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_smaller(anyarray, anyarray)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_smaller$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="array_to_json" id="Function-1af9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_to_json(anyarray)
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$array_to_json$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="array_to_json" id="Function-19b7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_to_json(anyarray, boolean)
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$array_to_json_pretty$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="array_to_string" id="Function-2a7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_to_string(anyarray, text, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$array_to_text_null$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="array_to_string" id="Function-1b0c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_to_string(anyarray, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$array_to_text$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="array_to_tsvector" id="Function-215d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_to_tsvector(text[])
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_to_tsvector$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="array_typanalyze" id="Function-243c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_typanalyze(internal)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$array_typanalyze$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="array_unnest_support" id="Function-10ac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_unnest_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_unnest_support$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="array_upper" id="Function-2662" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_upper(anyarray, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_upper$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="arraycontained" id="Function-121d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.arraycontained(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$arraycontained$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="arraycontains" id="Function-24d1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.arraycontains(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$arraycontains$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="arraycontjoinsel" id="Function-2271" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.arraycontjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$arraycontjoinsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="arraycontsel" id="Function-a6a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.arraycontsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$arraycontsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="arrayoverlap" id="Function-1630" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.arrayoverlap(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$arrayoverlap$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="ascii" id="Function-1314" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ascii(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ascii$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="ascii_to_mic" id="Function-14f4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ascii_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/ascii_and_mic', $function$ascii_to_mic$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="ascii_to_utf8" id="Function-1c5d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ascii_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_ascii', $function$ascii_to_utf8$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="asin" id="Function-1e5b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.asin(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dasin$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="asind" id="Function-1237" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.asind(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dasind$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="asinh" id="Function-220c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.asinh(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dasinh$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="atan" id="Function-6df" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.atan(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$datan$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="atan2" id="Function-1072" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.atan2(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$datan2$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="atan2d" id="Function-1961" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.atan2d(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$datan2d$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="atand" id="Function-261d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.atand(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$datand$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="atanh" id="Function-5da" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.atanh(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$datanh$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="bernoulli" id="Function-8bb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bernoulli(internal)
 RETURNS tsm_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$tsm_bernoulli_handler$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="big5_to_euc_tw" id="Function-138f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.big5_to_euc_tw(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_tw_and_big5', $function$big5_to_euc_tw$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="big5_to_mic" id="Function-ccc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.big5_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_tw_and_big5', $function$big5_to_mic$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="big5_to_utf8" id="Function-305" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.big5_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_big5', $function$big5_to_utf8$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="binary_upgrade_create_empty_extension" id="Function-c50" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_create_empty_extension(text, text, boolean, text, oid[], text[], text[])
 RETURNS void
 LANGUAGE internal
AS $function$binary_upgrade_create_empty_extension$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="binary_upgrade_set_missing_value" id="Function-1320" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_missing_value(oid, text, text)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$binary_upgrade_set_missing_value$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="binary_upgrade_set_next_array_pg_type_oid" id="Function-11f2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_array_pg_type_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_array_pg_type_oid$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="binary_upgrade_set_next_heap_pg_class_oid" id="Function-908" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_heap_pg_class_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_heap_pg_class_oid$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="binary_upgrade_set_next_index_pg_class_oid" id="Function-1426" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_index_pg_class_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_index_pg_class_oid$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="binary_upgrade_set_next_pg_authid_oid" id="Function-c46" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_pg_authid_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_pg_authid_oid$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="binary_upgrade_set_next_pg_enum_oid" id="Function-65a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_pg_enum_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_pg_enum_oid$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="binary_upgrade_set_next_pg_type_oid" id="Function-9fe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_pg_type_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_pg_type_oid$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="binary_upgrade_set_next_toast_pg_class_oid" id="Function-23d2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_toast_pg_class_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_toast_pg_class_oid$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="binary_upgrade_set_next_toast_pg_type_oid" id="Function-1ab8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_toast_pg_type_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_toast_pg_type_oid$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="binary_upgrade_set_record_init_privs" id="Function-f6d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_record_init_privs(boolean)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_record_init_privs$function$
;]]></string>
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="bit" id="Function-2262" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."bit"(integer, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitfromint4$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="bit" id="Function-2466" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."bit"(bit, integer, boolean)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bit$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="bit" id="Function-e3e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."bit"(bigint, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitfromint8$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="bit_in" id="Function-2ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bit_in(cstring, oid, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bit_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="bit_length" id="Function-529" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bit_length(bytea)
 RETURNS integer
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.octet_length($1) * 8$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="bit_length" id="Function-581" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bit_length(text)
 RETURNS integer
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.octet_length($1) * 8$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="bit_length" id="Function-e24" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bit_length(bit)
 RETURNS integer
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.length($1)$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="bit_out" id="Function-1230" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bit_out(bit)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bit_out$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="bit_recv" id="Function-12fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bit_recv(internal, oid, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bit_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="bit_send" id="Function-120c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bit_send(bit)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bit_send$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="bitand" id="Function-258e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitand(bit, bit)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bit_and$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="bitcat" id="Function-316" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitcat(bit varying, bit varying)
 RETURNS bit varying
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitcat$function$
;]]></string>
			<input_param jt="-1" type="bit varying" inOut="1" />
			<input_param jt="-1" type="bit varying" inOut="1" />
		</function>
		<function name="bitcmp" id="Function-1b4e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitcmp(bit, bit)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitcmp$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="biteq" id="Function-f98" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.biteq(bit, bit)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$biteq$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="bitge" id="Function-17f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitge(bit, bit)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitge$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="bitgt" id="Function-e3f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitgt(bit, bit)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitgt$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="bitle" id="Function-11b5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitle(bit, bit)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitle$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="bitlt" id="Function-eed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitlt(bit, bit)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitlt$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="bitne" id="Function-1dc0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitne(bit, bit)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitne$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="bitnot" id="Function-2540" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitnot(bit)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitnot$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="bitor" id="Function-627" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitor(bit, bit)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bit_or$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="bitshiftleft" id="Function-138a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitshiftleft(bit, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitshiftleft$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="bitshiftright" id="Function-1ccf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitshiftright(bit, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitshiftright$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="bittypmodin" id="Function-184c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bittypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bittypmodin$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="bittypmodout" id="Function-14a0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bittypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bittypmodout$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="bitxor" id="Function-a07" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitxor(bit, bit)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitxor$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="bool" id="Function-1355" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bool(integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4_bool$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="bool" id="Function-15c2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bool(jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_bool$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="bool_accum" id="Function-1e14" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bool_accum(internal, boolean)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$bool_accum$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="bool_accum_inv" id="Function-c72" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bool_accum_inv(internal, boolean)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$bool_accum_inv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="bool_alltrue" id="Function-1f25" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bool_alltrue(internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bool_alltrue$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="bool_anytrue" id="Function-1be1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bool_anytrue(internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bool_anytrue$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="booland_statefunc" id="Function-24e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.booland_statefunc(boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$booland_statefunc$function$
;]]></string>
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="booleq" id="Function-185e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.booleq(boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$booleq$function$
;]]></string>
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="boolge" id="Function-25b5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolge(boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$boolge$function$
;]]></string>
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="boolgt" id="Function-2a7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolgt(boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$boolgt$function$
;]]></string>
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="boolin" id="Function-447" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolin(cstring)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$boolin$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="boolle" id="Function-184a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolle(boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$boolle$function$
;]]></string>
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="boollt" id="Function-71b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boollt(boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$boollt$function$
;]]></string>
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="boolne" id="Function-2317" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolne(boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$boolne$function$
;]]></string>
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="boolor_statefunc" id="Function-1bd9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolor_statefunc(boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$boolor_statefunc$function$
;]]></string>
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="boolout" id="Function-21ed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolout(boolean)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$boolout$function$
;]]></string>
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="boolrecv" id="Function-1de3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolrecv(internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$boolrecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="boolsend" id="Function-23e7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolsend(boolean)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$boolsend$function$
;]]></string>
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="bound_box" id="Function-e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bound_box(box, box)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$boxes_bound_box$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box" id="Function-2137" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box(point, point)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$points_box$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="box" id="Function-1248" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box(polygon)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_box$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="box" id="Function-1420" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box(circle)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_box$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="box" id="Function-1a7d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box(point)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_box$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="box_above" id="Function-169" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_above(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_above$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box_above_eq" id="Function-107f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_above_eq(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_above_eq$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box_add" id="Function-3dc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_add(box, point)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_add$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="box_below" id="Function-ac7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_below(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_below$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box_below_eq" id="Function-1492" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_below_eq(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_below_eq$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box_center" id="Function-1c59" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_center(box)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_center$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box_contain" id="Function-e03" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_contain(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_contain$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box_contain_pt" id="Function-22fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_contain_pt(box, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_contain_pt$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="box_contained" id="Function-1712" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_contained(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_contained$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box_distance" id="Function-1cd0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_distance(box, box)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_distance$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box_div" id="Function-228" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_div(box, point)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_div$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="box_eq" id="Function-14af" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_eq(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_eq$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box_ge" id="Function-17e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_ge(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_ge$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box_gt" id="Function-17d5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_gt(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_gt$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box_in" id="Function-c17" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_in(cstring)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="box_intersect" id="Function-1f1a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_intersect(box, box)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_intersect$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box_le" id="Function-e8e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_le(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_le$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box_left" id="Function-aa8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_left(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_left$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box_lt" id="Function-896" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_lt(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_lt$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box_mul" id="Function-4bb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_mul(box, point)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_mul$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="box_out" id="Function-5aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_out(box)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_out$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box_overabove" id="Function-3e1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_overabove(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_overabove$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box_overbelow" id="Function-7e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_overbelow(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_overbelow$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box_overlap" id="Function-2414" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_overlap(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_overlap$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box_overleft" id="Function-a1f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_overleft(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_overleft$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box_overright" id="Function-1230" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_overright(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_overright$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box_recv" id="Function-5ae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_recv(internal)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="box_right" id="Function-2218" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_right(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_right$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box_same" id="Function-21f8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_same(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_same$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box_send" id="Function-a4c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_send(box)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_send$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="box_sub" id="Function-24f0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_sub(box, point)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_sub$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="bpchar" id="Function-1745" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar(name)
 RETURNS character
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$name_bpchar$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="bpchar" id="Function-af0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar(character, integer, boolean)
 RETURNS character
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpchar$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="bpchar" id="Function-42" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar("char")
 RETURNS character
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$char_bpchar$function$
;]]></string>
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
		</function>
		<function name="bpchar_larger" id="Function-ac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar_larger(character, character)
 RETURNS character
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpchar_larger$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="bpchar_pattern_ge" id="Function-7e2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar_pattern_ge(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpchar_pattern_ge$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="bpchar_pattern_gt" id="Function-132" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar_pattern_gt(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpchar_pattern_gt$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="bpchar_pattern_le" id="Function-d51" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar_pattern_le(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpchar_pattern_le$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="bpchar_pattern_lt" id="Function-2052" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar_pattern_lt(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpchar_pattern_lt$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="bpchar_smaller" id="Function-2525" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar_smaller(character, character)
 RETURNS character
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpchar_smaller$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="bpchar_sortsupport" id="Function-7a5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpchar_sortsupport$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="bpcharcmp" id="Function-5d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharcmp(character, character)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpcharcmp$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="bpchareq" id="Function-177d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchareq(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpchareq$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="bpcharge" id="Function-196a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharge(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpcharge$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="bpchargt" id="Function-1d77" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchargt(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpchargt$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="bpchariclike" id="Function-ca6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchariclike(character, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT texticlike_support
AS $function$texticlike$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="bpcharicnlike" id="Function-22b7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharicnlike(character, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$texticnlike$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="bpcharicregexeq" id="Function-1901" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharicregexeq(character, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT texticregexeq_support
AS $function$texticregexeq$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="bpcharicregexne" id="Function-1ecb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharicregexne(character, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$texticregexne$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="bpcharin" id="Function-a57" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharin(cstring, oid, integer)
 RETURNS character
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpcharin$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="bpcharle" id="Function-2510" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharle(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpcharle$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="bpcharlike" id="Function-1bc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharlike(character, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT textlike_support
AS $function$textlike$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="bpcharlt" id="Function-6bf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharlt(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpcharlt$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="bpcharne" id="Function-22c3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharne(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpcharne$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="bpcharnlike" id="Function-f9e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharnlike(character, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textnlike$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="bpcharout" id="Function-287" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharout(character)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpcharout$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="bpcharrecv" id="Function-e8a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharrecv(internal, oid, integer)
 RETURNS character
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$bpcharrecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="bpcharregexeq" id="Function-431" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharregexeq(character, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT textregexeq_support
AS $function$textregexeq$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="bpcharregexne" id="Function-105c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharregexne(character, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textregexne$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="bpcharsend" id="Function-1d06" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharsend(character)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$bpcharsend$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="bpchartypmodin" id="Function-2479" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchartypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpchartypmodin$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="bpchartypmodout" id="Function-1bd4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchartypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpchartypmodout$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="brin_desummarize_range" id="Function-5ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_desummarize_range(regclass, bigint)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$brin_desummarize_range$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="brin_inclusion_add_value" id="Function-ec9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_inclusion_add_value(internal, internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_inclusion_add_value$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="brin_inclusion_consistent" id="Function-abf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_inclusion_consistent(internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_inclusion_consistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="brin_inclusion_opcinfo" id="Function-10fe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_inclusion_opcinfo(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_inclusion_opcinfo$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="brin_inclusion_union" id="Function-20d3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_inclusion_union(internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_inclusion_union$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="brin_minmax_add_value" id="Function-1bde" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_add_value(internal, internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_add_value$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="brin_minmax_consistent" id="Function-fde" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_consistent(internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_consistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="brin_minmax_opcinfo" id="Function-10ea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_opcinfo(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_opcinfo$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="brin_minmax_union" id="Function-1ec6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_union(internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_union$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="brin_summarize_new_values" id="Function-1c85" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_summarize_new_values(regclass)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$brin_summarize_new_values$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
		</function>
		<function name="brin_summarize_range" id="Function-b9f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_summarize_range(regclass, bigint)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$brin_summarize_range$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="brinhandler" id="Function-19f8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brinhandler(internal)
 RETURNS index_am_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$brinhandler$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="broadcast" id="Function-2248" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.broadcast(inet)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_broadcast$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="btarraycmp" id="Function-f61" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btarraycmp(anyarray, anyarray)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btarraycmp$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="btboolcmp" id="Function-1b89" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btboolcmp(boolean, boolean)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btboolcmp$function$
;]]></string>
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="btbpchar_pattern_cmp" id="Function-20a4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btbpchar_pattern_cmp(character, character)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btbpchar_pattern_cmp$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="btbpchar_pattern_sortsupport" id="Function-c4d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btbpchar_pattern_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btbpchar_pattern_sortsupport$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="btcharcmp" id="Function-25b9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btcharcmp("char", "char")
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btcharcmp$function$
;]]></string>
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
		</function>
		<function name="btfloat48cmp" id="Function-fa3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btfloat48cmp(real, double precision)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btfloat48cmp$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="btfloat4cmp" id="Function-631" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btfloat4cmp(real, real)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btfloat4cmp$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="btfloat4sortsupport" id="Function-23bd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btfloat4sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btfloat4sortsupport$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="btfloat84cmp" id="Function-1656" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btfloat84cmp(double precision, real)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btfloat84cmp$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="btfloat8cmp" id="Function-23de" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btfloat8cmp(double precision, double precision)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btfloat8cmp$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="btfloat8sortsupport" id="Function-29" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btfloat8sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btfloat8sortsupport$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="bthandler" id="Function-24" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bthandler(internal)
 RETURNS index_am_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$bthandler$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="btint24cmp" id="Function-1590" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint24cmp(smallint, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btint24cmp$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="btint28cmp" id="Function-4fc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint28cmp(smallint, bigint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btint28cmp$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="btint2cmp" id="Function-183e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint2cmp(smallint, smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btint2cmp$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="btint2sortsupport" id="Function-118" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint2sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btint2sortsupport$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="btint42cmp" id="Function-1d62" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint42cmp(integer, smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btint42cmp$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="btint48cmp" id="Function-667" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint48cmp(integer, bigint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btint48cmp$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="btint4cmp" id="Function-137c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint4cmp(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btint4cmp$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="btint4sortsupport" id="Function-1784" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint4sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btint4sortsupport$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="btint82cmp" id="Function-c5a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint82cmp(bigint, smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btint82cmp$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="btint84cmp" id="Function-142a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint84cmp(bigint, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btint84cmp$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="btint8cmp" id="Function-187d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint8cmp(bigint, bigint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btint8cmp$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="btint8sortsupport" id="Function-218d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint8sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btint8sortsupport$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="btnamecmp" id="Function-1c97" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btnamecmp(name, name)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btnamecmp$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="btnamesortsupport" id="Function-dd3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btnamesortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btnamesortsupport$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="btnametextcmp" id="Function-20c8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btnametextcmp(name, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btnametextcmp$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="btoidcmp" id="Function-19f8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btoidcmp(oid, oid)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btoidcmp$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="btoidsortsupport" id="Function-2145" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btoidsortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btoidsortsupport$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="btoidvectorcmp" id="Function-1376" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btoidvectorcmp(oidvector, oidvector)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btoidvectorcmp$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="btrecordcmp" id="Function-1b11" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btrecordcmp(record, record)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btrecordcmp$function$
;]]></string>
			<input_param jt="-1" type="record" inOut="1" />
			<input_param jt="-1" type="record" inOut="1" />
		</function>
		<function name="btrecordimagecmp" id="Function-11f6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btrecordimagecmp(record, record)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btrecordimagecmp$function$
;]]></string>
			<input_param jt="-1" type="record" inOut="1" />
			<input_param jt="-1" type="record" inOut="1" />
		</function>
		<function name="btrim" id="Function-203e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btrim(bytea, bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteatrim$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="btrim" id="Function-1f25" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btrim(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btrim$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="btrim" id="Function-e09" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btrim(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btrim1$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="bttext_pattern_cmp" id="Function-923" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bttext_pattern_cmp(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bttext_pattern_cmp$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="bttext_pattern_sortsupport" id="Function-1ad1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bttext_pattern_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bttext_pattern_sortsupport$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="bttextcmp" id="Function-1e1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bttextcmp(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bttextcmp$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="bttextnamecmp" id="Function-154e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bttextnamecmp(text, name)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bttextnamecmp$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="bttextsortsupport" id="Function-107f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bttextsortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bttextsortsupport$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="bttidcmp" id="Function-1b4c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bttidcmp(tid, tid)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bttidcmp$function$
;]]></string>
			<input_param jt="-1" type="tid" inOut="1" />
			<input_param jt="-1" type="tid" inOut="1" />
		</function>
		<function name="bytea_sortsupport" id="Function-bb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bytea_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bytea_sortsupport$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="bytea_string_agg_finalfn" id="Function-12f0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bytea_string_agg_finalfn(internal)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$bytea_string_agg_finalfn$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="bytea_string_agg_transfn" id="Function-c0a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bytea_string_agg_transfn(internal, bytea, bytea)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$bytea_string_agg_transfn$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="byteacat" id="Function-15ec" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteacat(bytea, bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteacat$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="byteacmp" id="Function-16a6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteacmp(bytea, bytea)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$byteacmp$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="byteaeq" id="Function-13ae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteaeq(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$byteaeq$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="byteage" id="Function-2190" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteage(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$byteage$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="byteagt" id="Function-2d8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteagt(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$byteagt$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="byteain" id="Function-1079" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteain(cstring)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteain$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="byteale" id="Function-1a8c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteale(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$byteale$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="bytealike" id="Function-1eec" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bytealike(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT textlike_support
AS $function$bytealike$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="bytealt" id="Function-1040" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bytealt(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bytealt$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="byteane" id="Function-d9a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteane(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$byteane$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="byteanlike" id="Function-53d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteanlike(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteanlike$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="byteaout" id="Function-224" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteaout(bytea)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteaout$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="bytearecv" id="Function-1b85" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bytearecv(internal)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bytearecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="byteasend" id="Function-1a80" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteasend(bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteasend$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="cardinality" id="Function-19bf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cardinality(anyarray)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_cardinality$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="cash_cmp" id="Function-21a8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_cmp(money, money)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$cash_cmp$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
			<input_param jt="-1" type="money" inOut="1" />
		</function>
		<function name="cash_div_cash" id="Function-2472" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_div_cash(money, money)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_div_cash$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
			<input_param jt="-1" type="money" inOut="1" />
		</function>
		<function name="cash_div_flt4" id="Function-216e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_div_flt4(money, real)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_div_flt4$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="cash_div_flt8" id="Function-16cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_div_flt8(money, double precision)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_div_flt8$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="cash_div_int2" id="Function-212d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_div_int2(money, smallint)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_div_int2$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="cash_div_int4" id="Function-2482" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_div_int4(money, integer)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_div_int4$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="cash_div_int8" id="Function-25dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_div_int8(money, bigint)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_div_int8$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="cash_eq" id="Function-39f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_eq(money, money)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$cash_eq$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
			<input_param jt="-1" type="money" inOut="1" />
		</function>
		<function name="cash_ge" id="Function-251d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_ge(money, money)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$cash_ge$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
			<input_param jt="-1" type="money" inOut="1" />
		</function>
		<function name="cash_gt" id="Function-1c98" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_gt(money, money)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$cash_gt$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
			<input_param jt="-1" type="money" inOut="1" />
		</function>
		<function name="cash_in" id="Function-146f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_in(cstring)
 RETURNS money
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$cash_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="cash_le" id="Function-a19" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_le(money, money)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$cash_le$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
			<input_param jt="-1" type="money" inOut="1" />
		</function>
		<function name="cash_lt" id="Function-2fb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_lt(money, money)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$cash_lt$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
			<input_param jt="-1" type="money" inOut="1" />
		</function>
		<function name="cash_mi" id="Function-91d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_mi(money, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_mi$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
			<input_param jt="-1" type="money" inOut="1" />
		</function>
		<function name="cash_mul_flt4" id="Function-11e2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_mul_flt4(money, real)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_mul_flt4$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="cash_mul_flt8" id="Function-e66" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_mul_flt8(money, double precision)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_mul_flt8$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="cash_mul_int2" id="Function-1e5b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_mul_int2(money, smallint)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_mul_int2$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="cash_mul_int4" id="Function-1629" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_mul_int4(money, integer)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_mul_int4$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="cash_mul_int8" id="Function-4ca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_mul_int8(money, bigint)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_mul_int8$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="cash_ne" id="Function-1d66" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_ne(money, money)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$cash_ne$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
			<input_param jt="-1" type="money" inOut="1" />
		</function>
		<function name="cash_out" id="Function-180e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_out(money)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$cash_out$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
		</function>
		<function name="cash_pl" id="Function-12c6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_pl(money, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_pl$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
			<input_param jt="-1" type="money" inOut="1" />
		</function>
		<function name="cash_recv" id="Function-1859" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_recv(internal)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="cash_send" id="Function-790" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_send(money)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_send$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
		</function>
		<function name="cash_words" id="Function-50b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_words(money)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_words$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
		</function>
		<function name="cashlarger" id="Function-4cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cashlarger(money, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cashlarger$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
			<input_param jt="-1" type="money" inOut="1" />
		</function>
		<function name="cashsmaller" id="Function-1c9c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cashsmaller(money, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cashsmaller$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
			<input_param jt="-1" type="money" inOut="1" />
		</function>
		<function name="cbrt" id="Function-764" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cbrt(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dcbrt$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="ceil" id="Function-957" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ceil(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_ceil$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="ceil" id="Function-2282" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ceil(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dceil$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="ceiling" id="Function-1e64" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ceiling(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_ceil$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="ceiling" id="Function-d1f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ceiling(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dceil$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="center" id="Function-9f1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.center(box)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_center$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="center" id="Function-ca6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.center(circle)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_center$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="char" id="Function-efc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."char"(integer)
 RETURNS "char"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$i4tochar$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="char" id="Function-853" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."char"(text)
 RETURNS "char"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_char$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="char_length" id="Function-26a7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.char_length(character)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpcharlen$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="char_length" id="Function-1ff9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.char_length(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textlen$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="character_length" id="Function-599" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.character_length(character)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpcharlen$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="character_length" id="Function-1f35" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.character_length(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textlen$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="chareq" id="Function-1596" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.chareq("char", "char")
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$chareq$function$
;]]></string>
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
		</function>
		<function name="charge" id="Function-1e4c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.charge("char", "char")
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$charge$function$
;]]></string>
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
		</function>
		<function name="chargt" id="Function-1201" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.chargt("char", "char")
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$chargt$function$
;]]></string>
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
		</function>
		<function name="charin" id="Function-1328" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.charin(cstring)
 RETURNS "char"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$charin$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="charle" id="Function-1afa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.charle("char", "char")
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$charle$function$
;]]></string>
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
		</function>
		<function name="charlt" id="Function-15a2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.charlt("char", "char")
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$charlt$function$
;]]></string>
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
		</function>
		<function name="charne" id="Function-1cdf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.charne("char", "char")
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$charne$function$
;]]></string>
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
		</function>
		<function name="charout" id="Function-d0b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.charout("char")
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$charout$function$
;]]></string>
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
		</function>
		<function name="charrecv" id="Function-1523" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.charrecv(internal)
 RETURNS "char"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$charrecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="charsend" id="Function-546" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.charsend("char")
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$charsend$function$
;]]></string>
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
		</function>
		<function name="chr" id="Function-24d0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.chr(integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$chr$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="cideq" id="Function-19e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cideq(cid, cid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$cideq$function$
;]]></string>
			<input_param jt="-1" type="cid" inOut="1" />
			<input_param jt="-1" type="cid" inOut="1" />
		</function>
		<function name="cidin" id="Function-b3e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidin(cstring)
 RETURNS cid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidin$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="cidout" id="Function-6e1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidout(cid)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidout$function$
;]]></string>
			<input_param jt="-1" type="cid" inOut="1" />
		</function>
		<function name="cidr" id="Function-1282" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidr(inet)
 RETURNS cidr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_to_cidr$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="cidr_in" id="Function-1662" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidr_in(cstring)
 RETURNS cidr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidr_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="cidr_out" id="Function-8a2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidr_out(cidr)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidr_out$function$
;]]></string>
			<input_param jt="-1" type="cidr" inOut="1" />
		</function>
		<function name="cidr_recv" id="Function-16c2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidr_recv(internal)
 RETURNS cidr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidr_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="cidr_send" id="Function-a4b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidr_send(cidr)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidr_send$function$
;]]></string>
			<input_param jt="-1" type="cidr" inOut="1" />
		</function>
		<function name="cidrecv" id="Function-14fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidrecv(internal)
 RETURNS cid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidrecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="cidsend" id="Function-bf7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidsend(cid)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidsend$function$
;]]></string>
			<input_param jt="-1" type="cid" inOut="1" />
		</function>
		<function name="circle" id="Function-1918" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle(point, double precision)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cr_circle$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="circle" id="Function-1c9e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle(polygon)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_circle$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="circle" id="Function-2691" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle(box)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_circle$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="circle_above" id="Function-dc3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_above(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_above$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="circle_add_pt" id="Function-1a5d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_add_pt(circle, point)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_add_pt$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="circle_below" id="Function-1e56" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_below(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_below$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="circle_center" id="Function-1a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_center(circle)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_center$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="circle_contain" id="Function-36" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_contain(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_contain$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="circle_contain_pt" id="Function-2025" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_contain_pt(circle, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_contain_pt$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="circle_contained" id="Function-e40" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_contained(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_contained$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="circle_distance" id="Function-109" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_distance(circle, circle)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_distance$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="circle_div_pt" id="Function-b5b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_div_pt(circle, point)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_div_pt$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="circle_eq" id="Function-846" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_eq(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$circle_eq$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="circle_ge" id="Function-12d4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_ge(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$circle_ge$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="circle_gt" id="Function-657" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_gt(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$circle_gt$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="circle_in" id="Function-1160" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_in(cstring)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="circle_le" id="Function-182b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_le(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$circle_le$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="circle_left" id="Function-c0d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_left(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_left$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="circle_lt" id="Function-177a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_lt(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$circle_lt$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="circle_mul_pt" id="Function-d2e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_mul_pt(circle, point)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_mul_pt$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="circle_ne" id="Function-2570" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_ne(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$circle_ne$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="circle_out" id="Function-1c42" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_out(circle)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_out$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="circle_overabove" id="Function-600" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_overabove(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_overabove$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="circle_overbelow" id="Function-220d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_overbelow(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_overbelow$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="circle_overlap" id="Function-216e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_overlap(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_overlap$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="circle_overleft" id="Function-11b3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_overleft(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_overleft$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="circle_overright" id="Function-2362" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_overright(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_overright$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="circle_recv" id="Function-e4e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_recv(internal)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="circle_right" id="Function-1d1d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_right(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_right$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="circle_same" id="Function-1106" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_same(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_same$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="circle_send" id="Function-2452" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_send(circle)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_send$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="circle_sub_pt" id="Function-2d8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_sub_pt(circle, point)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_sub_pt$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="clock_timestamp" id="Function-1e6e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.clock_timestamp()
 RETURNS timestamp with time zone
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$clock_timestamp$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="close_lb" id="Function-aa3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.close_lb(line, box)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$close_lb$function$
;]]></string>
			<input_param jt="-1" type="line" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="close_ls" id="Function-b16" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.close_ls(line, lseg)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$close_ls$function$
;]]></string>
			<input_param jt="-1" type="line" inOut="1" />
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="close_lseg" id="Function-1a11" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.close_lseg(lseg, lseg)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$close_lseg$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="close_pb" id="Function-1f1d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.close_pb(point, box)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$close_pb$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="close_pl" id="Function-24f6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.close_pl(point, line)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$close_pl$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="line" inOut="1" />
		</function>
		<function name="close_ps" id="Function-1e01" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.close_ps(point, lseg)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$close_ps$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="close_sb" id="Function-1d98" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.close_sb(lseg, box)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$close_sb$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="close_sl" id="Function-e08" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.close_sl(lseg, line)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$close_sl$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
			<input_param jt="-1" type="line" inOut="1" />
		</function>
		<function name="col_description" id="Function-df1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.col_description(oid, integer)
 RETURNS text
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT
AS $function$select description from pg_catalog.pg_description where objoid = $1 and classoid = 'pg_catalog.pg_class'::pg_catalog.regclass and objsubid = $2$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="concat" id="Function-107b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.concat(VARIADIC "any")
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$text_concat$function$
;]]></string>
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="concat_ws" id="Function-7d4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.concat_ws(text, VARIADIC "any")
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$text_concat_ws$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="contjoinsel" id="Function-efd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.contjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$contjoinsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="contsel" id="Function-16ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.contsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$contsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="convert" id="Function-1524" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.convert(bytea, name, name)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_convert$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="convert_from" id="Function-b61" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.convert_from(bytea, name)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_convert_from$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="convert_to" id="Function-8cb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.convert_to(text, name)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_convert_to$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="cos" id="Function-8dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cos(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dcos$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="cosd" id="Function-32b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cosd(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dcosd$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="cosh" id="Function-1b3d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cosh(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dcosh$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="cot" id="Function-5ef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cot(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dcot$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="cotd" id="Function-1778" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cotd(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dcotd$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="cstring_in" id="Function-19e3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cstring_in(cstring)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cstring_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="cstring_out" id="Function-d4f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cstring_out(cstring)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cstring_out$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="cstring_recv" id="Function-151" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cstring_recv(internal)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$cstring_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="cstring_send" id="Function-201" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cstring_send(cstring)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$cstring_send$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="cume_dist" id="Function-1dd" isSystem="false" params_known="n" >
			<string><![CDATA[create function cume_dist window_cume_dist;]]></string>
		</function>
		<function name="cume_dist_final" id="Function-bfb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cume_dist_final(internal, VARIADIC "any")
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$hypothetical_cume_dist_final$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="current_database" id="Function-1c00" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.current_database()
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$current_database$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="current_query" id="Function-643" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.current_query()
 RETURNS text
 LANGUAGE internal
 PARALLEL RESTRICTED
AS $function$current_query$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="current_schema" id="Function-21dc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."current_schema"()
 RETURNS name
 LANGUAGE internal
 STABLE STRICT
AS $function$current_schema$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="current_schemas" id="Function-9de" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.current_schemas(boolean)
 RETURNS name[]
 LANGUAGE internal
 STABLE STRICT
AS $function$current_schemas$function$
;]]></string>
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="current_setting" id="Function-605" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.current_setting(text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$show_config_by_name$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="current_setting" id="Function-36" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.current_setting(text, boolean)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$show_config_by_name_missing_ok$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="current_user" id="Function-172a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."current_user"()
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$current_user$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="currtid" id="Function-1c2d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.currtid(oid, tid)
 RETURNS tid
 LANGUAGE internal
 STRICT
AS $function$currtid_byreloid$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="tid" inOut="1" />
		</function>
		<function name="currtid2" id="Function-edb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.currtid2(text, tid)
 RETURNS tid
 LANGUAGE internal
 STRICT
AS $function$currtid_byrelname$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="tid" inOut="1" />
		</function>
		<function name="currval" id="Function-f62" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.currval(regclass)
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$currval_oid$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
		</function>
		<function name="cursor_to_xml" id="Function-911" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cursor_to_xml(cursor refcursor, count integer, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STRICT COST 100
AS $function$cursor_to_xml$function$
;]]></string>
			<input_param name="cursor" jt="-1" type="refcursor" inOut="1" />
			<input_param name="count" jt="-1" type="integer" inOut="1" />
			<input_param name="nulls" jt="-1" type="boolean" inOut="1" />
			<input_param name="tableforest" jt="-1" type="boolean" inOut="1" />
			<input_param name="targetns" jt="-1" type="text" inOut="1" />
		</function>
		<function name="cursor_to_xmlschema" id="Function-8ea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cursor_to_xmlschema(cursor refcursor, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STRICT COST 100
AS $function$cursor_to_xmlschema$function$
;]]></string>
			<input_param name="cursor" jt="-1" type="refcursor" inOut="1" />
			<input_param name="nulls" jt="-1" type="boolean" inOut="1" />
			<input_param name="tableforest" jt="-1" type="boolean" inOut="1" />
			<input_param name="targetns" jt="-1" type="text" inOut="1" />
		</function>
		<function name="database_to_xml" id="Function-1737" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.database_to_xml(nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$database_to_xml$function$
;]]></string>
			<input_param name="nulls" jt="-1" type="boolean" inOut="1" />
			<input_param name="tableforest" jt="-1" type="boolean" inOut="1" />
			<input_param name="targetns" jt="-1" type="text" inOut="1" />
		</function>
		<function name="database_to_xml_and_xmlschema" id="Function-110d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.database_to_xml_and_xmlschema(nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$database_to_xml_and_xmlschema$function$
;]]></string>
			<input_param name="nulls" jt="-1" type="boolean" inOut="1" />
			<input_param name="tableforest" jt="-1" type="boolean" inOut="1" />
			<input_param name="targetns" jt="-1" type="text" inOut="1" />
		</function>
		<function name="database_to_xmlschema" id="Function-2624" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.database_to_xmlschema(nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$database_to_xmlschema$function$
;]]></string>
			<input_param name="nulls" jt="-1" type="boolean" inOut="1" />
			<input_param name="tableforest" jt="-1" type="boolean" inOut="1" />
			<input_param name="targetns" jt="-1" type="text" inOut="1" />
		</function>
		<function name="date" id="Function-261" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date(timestamp with time zone)
 RETURNS date
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_date$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="date" id="Function-2648" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date(timestamp without time zone)
 RETURNS date
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_date$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="date_cmp" id="Function-1e8f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_cmp(date, date)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$date_cmp$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="date_cmp_timestamp" id="Function-441" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_cmp_timestamp(date, timestamp without time zone)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_cmp_timestamp$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="date_cmp_timestamptz" id="Function-17ee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_cmp_timestamptz(date, timestamp with time zone)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_cmp_timestamptz$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="date_eq" id="Function-1431" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_eq(date, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$date_eq$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="date_eq_timestamp" id="Function-3a8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_eq_timestamp(date, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_eq_timestamp$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="date_eq_timestamptz" id="Function-1e51" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_eq_timestamptz(date, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_eq_timestamptz$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="date_ge" id="Function-f10" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_ge(date, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$date_ge$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="date_ge_timestamp" id="Function-1ed0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_ge_timestamp(date, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_ge_timestamp$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="date_ge_timestamptz" id="Function-e44" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_ge_timestamptz(date, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_ge_timestamptz$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="date_gt" id="Function-21b2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_gt(date, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$date_gt$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="date_gt_timestamp" id="Function-21bd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_gt_timestamp(date, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_gt_timestamp$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="date_gt_timestamptz" id="Function-17e4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_gt_timestamptz(date, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_gt_timestamptz$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="date_in" id="Function-9e8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_in(cstring)
 RETURNS date
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="date_larger" id="Function-342" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_larger(date, date)
 RETURNS date
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_larger$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="date_le" id="Function-8f1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_le(date, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$date_le$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="date_le_timestamp" id="Function-e24" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_le_timestamp(date, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_le_timestamp$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="date_le_timestamptz" id="Function-14bb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_le_timestamptz(date, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_le_timestamptz$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="date_lt" id="Function-1716" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_lt(date, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$date_lt$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="date_lt_timestamp" id="Function-b5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_lt_timestamp(date, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_lt_timestamp$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="date_lt_timestamptz" id="Function-9e4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_lt_timestamptz(date, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_lt_timestamptz$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="date_mi" id="Function-106c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_mi(date, date)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_mi$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="date_mi_interval" id="Function-2104" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_mi_interval(date, interval)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_mi_interval$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="date_mii" id="Function-a47" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_mii(date, integer)
 RETURNS date
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_mii$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="date_ne" id="Function-66" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_ne(date, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$date_ne$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="date_ne_timestamp" id="Function-f53" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_ne_timestamp(date, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_ne_timestamp$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="date_ne_timestamptz" id="Function-8d1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_ne_timestamptz(date, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_ne_timestamptz$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="date_out" id="Function-1c1d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_out(date)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_out$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="date_part" id="Function-22" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_part(text, timestamp with time zone)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_part$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="date_part" id="Function-681" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_part(text, interval)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_part$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="date_part" id="Function-48e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_part(text, time with time zone)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_part$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="date_part" id="Function-22ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_part(text, date)
 RETURNS double precision
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.date_part($1, cast($2 as timestamp without time zone))$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="date_part" id="Function-2115" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_part(text, time without time zone)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_part$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="time without time zone" inOut="1" />
		</function>
		<function name="date_part" id="Function-b6a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_part(text, timestamp without time zone)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_part$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="date_pl_interval" id="Function-1a8a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_pl_interval(date, interval)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_pl_interval$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="date_pli" id="Function-508" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_pli(date, integer)
 RETURNS date
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_pli$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="date_recv" id="Function-1d15" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_recv(internal)
 RETURNS date
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="date_send" id="Function-88c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_send(date)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_send$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="date_smaller" id="Function-10b7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_smaller(date, date)
 RETURNS date
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_smaller$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="date_sortsupport" id="Function-371" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_sortsupport$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="date_trunc" id="Function-ac2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_trunc(text, timestamp with time zone)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_trunc$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="date_trunc" id="Function-250d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_trunc(text, interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_trunc$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="date_trunc" id="Function-23d0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_trunc(text, timestamp with time zone, text)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_trunc_zone$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="date_trunc" id="Function-1b10" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_trunc(text, timestamp without time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_trunc$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="daterange" id="Function-ac9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.daterange(date, date)
 RETURNS daterange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor2$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="daterange" id="Function-1b6d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.daterange(date, date, text)
 RETURNS daterange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor3$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="daterange_canonical" id="Function-189" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.daterange_canonical(daterange)
 RETURNS daterange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$daterange_canonical$function$
;]]></string>
			<input_param jt="-1" type="daterange" inOut="1" />
		</function>
		<function name="daterange_subdiff" id="Function-8c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.daterange_subdiff(date, date)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$daterange_subdiff$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="datetime_pl" id="Function-622" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.datetime_pl(date, time without time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$datetime_timestamp$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="time without time zone" inOut="1" />
		</function>
		<function name="datetimetz_pl" id="Function-20d6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.datetimetz_pl(date, time with time zone)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$datetimetz_timestamptz$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="dcbrt" id="Function-ce7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dcbrt(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dcbrt$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="decode" id="Function-1a67" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.decode(text, text)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$binary_decode$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="degrees" id="Function-75d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.degrees(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$degrees$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="dense_rank" id="Function-9f5" isSystem="false" params_known="n" >
			<string><![CDATA[create function dense_rank window_dense_rank;]]></string>
		</function>
		<function name="dense_rank_final" id="Function-1282" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dense_rank_final(internal, VARIADIC "any")
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$hypothetical_dense_rank_final$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="dexp" id="Function-5e1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dexp(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dexp$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="diagonal" id="Function-5a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.diagonal(box)
 RETURNS lseg
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_diagonal$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="diameter" id="Function-f6f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.diameter(circle)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_diameter$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="dispell_init" id="Function-678" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dispell_init(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dispell_init$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="dispell_lexize" id="Function-ae5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dispell_lexize(internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dispell_lexize$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="dist_cpoint" id="Function-245e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_cpoint(circle, point)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_cpoint$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="dist_cpoly" id="Function-ab0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_cpoly(circle, polygon)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_cpoly$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="dist_lb" id="Function-1d9a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_lb(line, box)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_lb$function$
;]]></string>
			<input_param jt="-1" type="line" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="dist_pb" id="Function-a32" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_pb(point, box)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_pb$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="dist_pc" id="Function-1d81" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_pc(point, circle)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_pc$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="dist_pl" id="Function-8c7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_pl(point, line)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_pl$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="line" inOut="1" />
		</function>
		<function name="dist_polyp" id="Function-1dff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_polyp(polygon, point)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_polyp$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="dist_ppath" id="Function-220" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_ppath(point, path)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_ppath$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="dist_ppoly" id="Function-aab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_ppoly(point, polygon)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_ppoly$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="dist_ps" id="Function-1d1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_ps(point, lseg)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_ps$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="dist_sb" id="Function-104e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_sb(lseg, box)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_sb$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="dist_sl" id="Function-db3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_sl(lseg, line)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_sl$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
			<input_param jt="-1" type="line" inOut="1" />
		</function>
		<function name="div" id="Function-12a4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.div(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_div_trunc$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="dlog1" id="Function-25e0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dlog1(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dlog1$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="dlog10" id="Function-117a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dlog10(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dlog10$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="domain_in" id="Function-1f16" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.domain_in(cstring, oid, integer)
 RETURNS "any"
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$domain_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="domain_recv" id="Function-1b47" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.domain_recv(internal, oid, integer)
 RETURNS "any"
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$domain_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="dpow" id="Function-1588" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dpow(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dpow$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="dround" id="Function-20ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dround(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dround$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="dsimple_init" id="Function-1ce2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dsimple_init(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsimple_init$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="dsimple_lexize" id="Function-b66" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dsimple_lexize(internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsimple_lexize$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="dsnowball_init" id="Function-2131" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dsnowball_init(internal)
 RETURNS internal
 LANGUAGE c
 STRICT
AS '$libdir/dict_snowball', $function$dsnowball_init$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="dsnowball_lexize" id="Function-1ee6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dsnowball_lexize(internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE c
 STRICT
AS '$libdir/dict_snowball', $function$dsnowball_lexize$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="dsqrt" id="Function-251f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dsqrt(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsqrt$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="dsynonym_init" id="Function-1af6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dsynonym_init(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsynonym_init$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="dsynonym_lexize" id="Function-14b6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dsynonym_lexize(internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsynonym_lexize$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="dtrunc" id="Function-3b5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dtrunc(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtrunc$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="elem_contained_by_range" id="Function-1031" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.elem_contained_by_range(anyelement, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$elem_contained_by_range$function$
;]]></string>
			<input_param jt="-1" type="anyelement" inOut="1" />
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="encode" id="Function-178f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.encode(bytea, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$binary_encode$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="enum_cmp" id="Function-21ca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_cmp(anyenum, anyenum)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_cmp$function$
;]]></string>
			<input_param jt="-1" type="anyenum" inOut="1" />
			<input_param jt="-1" type="anyenum" inOut="1" />
		</function>
		<function name="enum_eq" id="Function-17cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_eq(anyenum, anyenum)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_eq$function$
;]]></string>
			<input_param jt="-1" type="anyenum" inOut="1" />
			<input_param jt="-1" type="anyenum" inOut="1" />
		</function>
		<function name="enum_first" id="Function-152a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_first(anyenum)
 RETURNS anyenum
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$enum_first$function$
;]]></string>
			<input_param jt="-1" type="anyenum" inOut="1" />
		</function>
		<function name="enum_ge" id="Function-2323" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_ge(anyenum, anyenum)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_ge$function$
;]]></string>
			<input_param jt="-1" type="anyenum" inOut="1" />
			<input_param jt="-1" type="anyenum" inOut="1" />
		</function>
		<function name="enum_gt" id="Function-2545" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_gt(anyenum, anyenum)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_gt$function$
;]]></string>
			<input_param jt="-1" type="anyenum" inOut="1" />
			<input_param jt="-1" type="anyenum" inOut="1" />
		</function>
		<function name="enum_in" id="Function-1944" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_in(cstring, oid)
 RETURNS anyenum
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$enum_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="enum_larger" id="Function-2165" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_larger(anyenum, anyenum)
 RETURNS anyenum
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_larger$function$
;]]></string>
			<input_param jt="-1" type="anyenum" inOut="1" />
			<input_param jt="-1" type="anyenum" inOut="1" />
		</function>
		<function name="enum_last" id="Function-969" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_last(anyenum)
 RETURNS anyenum
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$enum_last$function$
;]]></string>
			<input_param jt="-1" type="anyenum" inOut="1" />
		</function>
		<function name="enum_le" id="Function-21df" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_le(anyenum, anyenum)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_le$function$
;]]></string>
			<input_param jt="-1" type="anyenum" inOut="1" />
			<input_param jt="-1" type="anyenum" inOut="1" />
		</function>
		<function name="enum_lt" id="Function-822" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_lt(anyenum, anyenum)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_lt$function$
;]]></string>
			<input_param jt="-1" type="anyenum" inOut="1" />
			<input_param jt="-1" type="anyenum" inOut="1" />
		</function>
		<function name="enum_ne" id="Function-13c0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_ne(anyenum, anyenum)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_ne$function$
;]]></string>
			<input_param jt="-1" type="anyenum" inOut="1" />
			<input_param jt="-1" type="anyenum" inOut="1" />
		</function>
		<function name="enum_out" id="Function-20de" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_out(anyenum)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$enum_out$function$
;]]></string>
			<input_param jt="-1" type="anyenum" inOut="1" />
		</function>
		<function name="enum_range" id="Function-23ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_range(anyenum, anyenum)
 RETURNS anyarray
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$enum_range_bounds$function$
;]]></string>
			<input_param jt="-1" type="anyenum" inOut="1" />
			<input_param jt="-1" type="anyenum" inOut="1" />
		</function>
		<function name="enum_range" id="Function-2051" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_range(anyenum)
 RETURNS anyarray
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$enum_range_all$function$
;]]></string>
			<input_param jt="-1" type="anyenum" inOut="1" />
		</function>
		<function name="enum_recv" id="Function-1e00" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_recv(internal, oid)
 RETURNS anyenum
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$enum_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="enum_send" id="Function-209e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_send(anyenum)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$enum_send$function$
;]]></string>
			<input_param jt="-1" type="anyenum" inOut="1" />
		</function>
		<function name="enum_smaller" id="Function-34" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_smaller(anyenum, anyenum)
 RETURNS anyenum
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_smaller$function$
;]]></string>
			<input_param jt="-1" type="anyenum" inOut="1" />
			<input_param jt="-1" type="anyenum" inOut="1" />
		</function>
		<function name="eqjoinsel" id="Function-2319" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.eqjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$eqjoinsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="eqsel" id="Function-7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.eqsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$eqsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="euc_cn_to_mic" id="Function-1747" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_cn_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_cn_and_mic', $function$euc_cn_to_mic$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="euc_cn_to_utf8" id="Function-2598" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_cn_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc_cn', $function$euc_cn_to_utf8$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="euc_jis_2004_to_shift_jis_2004" id="Function-1548" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_jis_2004_to_shift_jis_2004(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc2004_sjis2004', $function$euc_jis_2004_to_shift_jis_2004$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="euc_jis_2004_to_utf8" id="Function-10cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_jis_2004_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc2004', $function$euc_jis_2004_to_utf8$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="euc_jp_to_mic" id="Function-e6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_jp_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_jp_and_sjis', $function$euc_jp_to_mic$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="euc_jp_to_sjis" id="Function-bbe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_jp_to_sjis(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_jp_and_sjis', $function$euc_jp_to_sjis$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="euc_jp_to_utf8" id="Function-2338" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_jp_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc_jp', $function$euc_jp_to_utf8$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="euc_kr_to_mic" id="Function-1418" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_kr_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_kr_and_mic', $function$euc_kr_to_mic$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="euc_kr_to_utf8" id="Function-927" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_kr_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc_kr', $function$euc_kr_to_utf8$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="euc_tw_to_big5" id="Function-17aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_tw_to_big5(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_tw_and_big5', $function$euc_tw_to_big5$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="euc_tw_to_mic" id="Function-1e8c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_tw_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_tw_and_big5', $function$euc_tw_to_mic$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="euc_tw_to_utf8" id="Function-1660" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_tw_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc_tw', $function$euc_tw_to_utf8$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="event_trigger_in" id="Function-d2e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.event_trigger_in(cstring)
 RETURNS event_trigger
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$event_trigger_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="event_trigger_out" id="Function-dd0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.event_trigger_out(event_trigger)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$event_trigger_out$function$
;]]></string>
			<input_param jt="-1" type="event_trigger" inOut="1" />
		</function>
		<function name="exp" id="Function-2059" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.exp(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dexp$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="exp" id="Function-261" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.exp(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_exp$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="factorial" id="Function-24d8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.factorial(bigint)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_fac$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="family" id="Function-18d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.family(inet)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_family$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="fdw_handler_in" id="Function-114c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.fdw_handler_in(cstring)
 RETURNS fdw_handler
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$fdw_handler_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="fdw_handler_out" id="Function-41" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.fdw_handler_out(fdw_handler)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$fdw_handler_out$function$
;]]></string>
			<input_param jt="-1" type="fdw_handler" inOut="1" />
		</function>
		<function name="first_value" id="Function-221a" isSystem="false" params_known="n" >
			<string><![CDATA[create function first_value window_first_value;]]></string>
		</function>
		<function name="float4" id="Function-ad9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4(numeric)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_float4$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="float4" id="Function-1527" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4(smallint)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$i2tof$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="float4" id="Function-2c4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4(double precision)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtof$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float4" id="Function-62d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4(integer)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$i4tof$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="float4" id="Function-d4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4(jsonb)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_float4$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="float4" id="Function-110d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4(bigint)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$i8tof$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="float48div" id="Function-1075" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48div(real, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float48div$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float48eq" id="Function-319" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48eq(real, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float48eq$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float48ge" id="Function-12a0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48ge(real, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float48ge$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float48gt" id="Function-1ea8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48gt(real, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float48gt$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float48le" id="Function-190" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48le(real, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float48le$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float48lt" id="Function-160b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48lt(real, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float48lt$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float48mi" id="Function-ce7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48mi(real, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float48mi$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float48mul" id="Function-1dba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48mul(real, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float48mul$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float48ne" id="Function-249" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48ne(real, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float48ne$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float48pl" id="Function-ac5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48pl(real, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float48pl$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float4_accum" id="Function-1ac2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4_accum(double precision[], real)
 RETURNS double precision[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4_accum$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float4abs" id="Function-1f74" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4abs(real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4abs$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float4div" id="Function-1e2e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4div(real, real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4div$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float4eq" id="Function-1494" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4eq(real, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float4eq$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float4ge" id="Function-eaf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4ge(real, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float4ge$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float4gt" id="Function-170e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4gt(real, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float4gt$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float4in" id="Function-785" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4in(cstring)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="float4larger" id="Function-1ceb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4larger(real, real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4larger$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float4le" id="Function-2069" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4le(real, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float4le$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float4lt" id="Function-10c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4lt(real, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float4lt$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float4mi" id="Function-12fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4mi(real, real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4mi$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float4mul" id="Function-219f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4mul(real, real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4mul$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float4ne" id="Function-7f7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4ne(real, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float4ne$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float4out" id="Function-10e5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4out(real)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4out$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float4pl" id="Function-180d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4pl(real, real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4pl$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float4recv" id="Function-1233" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4recv(internal)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="float4send" id="Function-1037" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4send(real)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4send$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float4smaller" id="Function-14d2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4smaller(real, real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4smaller$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float4um" id="Function-5fe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4um(real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4um$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float4up" id="Function-8bb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4up(real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4up$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float8" id="Function-1bd7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8(numeric)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_float8$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="float8" id="Function-a51" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8(smallint)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$i2tod$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="float8" id="Function-2470" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8(jsonb)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_float8$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="float8" id="Function-1629" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8(real)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ftod$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float8" id="Function-1b6d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8(integer)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$i4tod$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="float8" id="Function-2ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8(bigint)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$i8tod$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="float84div" id="Function-441" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84div(double precision, real)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float84div$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float84eq" id="Function-1dff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84eq(double precision, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float84eq$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float84ge" id="Function-5c2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84ge(double precision, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float84ge$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float84gt" id="Function-fcb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84gt(double precision, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float84gt$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float84le" id="Function-1f1d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84le(double precision, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float84le$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float84lt" id="Function-136a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84lt(double precision, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float84lt$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float84mi" id="Function-a34" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84mi(double precision, real)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float84mi$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float84mul" id="Function-408" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84mul(double precision, real)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float84mul$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float84ne" id="Function-22e3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84ne(double precision, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float84ne$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float84pl" id="Function-f31" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84pl(double precision, real)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float84pl$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="float8_accum" id="Function-1627" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_accum(double precision[], double precision)
 RETURNS double precision[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_accum$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float8_avg" id="Function-ce9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_avg(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_avg$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="float8_combine" id="Function-1b84" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_combine(double precision[], double precision[])
 RETURNS double precision[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_combine$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="float8_corr" id="Function-95a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_corr(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_corr$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="float8_covar_pop" id="Function-a20" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_covar_pop(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_covar_pop$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="float8_covar_samp" id="Function-c8c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_covar_samp(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_covar_samp$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="float8_regr_accum" id="Function-130a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_accum(double precision[], double precision, double precision)
 RETURNS double precision[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_accum$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float8_regr_avgx" id="Function-1195" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_avgx(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_avgx$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="float8_regr_avgy" id="Function-13b5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_avgy(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_avgy$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="float8_regr_combine" id="Function-587" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_combine(double precision[], double precision[])
 RETURNS double precision[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_combine$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="float8_regr_intercept" id="Function-1d59" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_intercept(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_intercept$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="float8_regr_r2" id="Function-ea4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_r2(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_r2$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="float8_regr_slope" id="Function-fc1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_slope(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_slope$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="float8_regr_sxx" id="Function-1d09" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_sxx(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_sxx$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="float8_regr_sxy" id="Function-a08" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_sxy(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_sxy$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="float8_regr_syy" id="Function-84b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_syy(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_syy$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="float8_stddev_pop" id="Function-1872" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_stddev_pop(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_stddev_pop$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="float8_stddev_samp" id="Function-4b7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_stddev_samp(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_stddev_samp$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="float8_var_pop" id="Function-1684" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_var_pop(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_var_pop$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="float8_var_samp" id="Function-1635" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_var_samp(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_var_samp$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="float8abs" id="Function-eb2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8abs(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8abs$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float8div" id="Function-20f0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8div(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8div$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float8eq" id="Function-683" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8eq(double precision, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float8eq$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float8ge" id="Function-1117" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8ge(double precision, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float8ge$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float8gt" id="Function-1605" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8gt(double precision, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float8gt$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float8in" id="Function-18db" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8in(cstring)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="float8larger" id="Function-1429" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8larger(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8larger$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float8le" id="Function-1d99" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8le(double precision, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float8le$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float8lt" id="Function-c7b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8lt(double precision, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float8lt$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float8mi" id="Function-d95" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8mi(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8mi$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float8mul" id="Function-385" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8mul(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8mul$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float8ne" id="Function-22bd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8ne(double precision, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float8ne$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float8out" id="Function-b32" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8out(double precision)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8out$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float8pl" id="Function-1739" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8pl(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8pl$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float8recv" id="Function-1234" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8recv(internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="float8send" id="Function-cb6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8send(double precision)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8send$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float8smaller" id="Function-10f0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8smaller(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8smaller$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float8um" id="Function-184e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8um(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8um$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="float8up" id="Function-a9c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8up(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8up$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="floor" id="Function-1342" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.floor(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_floor$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="floor" id="Function-1b89" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.floor(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dfloor$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="flt4_mul_cash" id="Function-106e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.flt4_mul_cash(real, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$flt4_mul_cash$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="money" inOut="1" />
		</function>
		<function name="flt8_mul_cash" id="Function-aca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.flt8_mul_cash(double precision, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$flt8_mul_cash$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="money" inOut="1" />
		</function>
		<function name="fmgr_c_validator" id="Function-1c4a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.fmgr_c_validator(oid)
 RETURNS void
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$fmgr_c_validator$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="fmgr_internal_validator" id="Function-13f6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.fmgr_internal_validator(oid)
 RETURNS void
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$fmgr_internal_validator$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="fmgr_sql_validator" id="Function-24d9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.fmgr_sql_validator(oid)
 RETURNS void
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$fmgr_sql_validator$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="format" id="Function-2188" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.format(text, VARIADIC "any")
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$text_format$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="format" id="Function-a53" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.format(text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$text_format_nv$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="format_type" id="Function-1000" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.format_type(oid, integer)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$format_type$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="gb18030_to_utf8" id="Function-dc4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gb18030_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_gb18030', $function$gb18030_to_utf8$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="gbk_to_utf8" id="Function-4c2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gbk_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_gbk', $function$gbk_to_utf8$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="generate_series" id="Function-1518" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(integer, integer, integer)
 RETURNS SETOF integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT generate_series_int4_support
AS $function$generate_series_step_int4$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="generate_series" id="Function-332" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(integer, integer)
 RETURNS SETOF integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT generate_series_int4_support
AS $function$generate_series_int4$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="generate_series" id="Function-1850" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(bigint, bigint, bigint)
 RETURNS SETOF bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT generate_series_int8_support
AS $function$generate_series_step_int8$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="generate_series" id="Function-779" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(bigint, bigint)
 RETURNS SETOF bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT generate_series_int8_support
AS $function$generate_series_int8$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="generate_series" id="Function-236b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(numeric, numeric, numeric)
 RETURNS SETOF numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$generate_series_step_numeric$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="generate_series" id="Function-165c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(numeric, numeric)
 RETURNS SETOF numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$generate_series_numeric$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="generate_series" id="Function-236c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(timestamp without time zone, timestamp without time zone, interval)
 RETURNS SETOF timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$generate_series_timestamp$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="generate_series" id="Function-2321" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(timestamp with time zone, timestamp with time zone, interval)
 RETURNS SETOF timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$generate_series_timestamptz$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="generate_series_int4_support" id="Function-41e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series_int4_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$generate_series_int4_support$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="generate_series_int8_support" id="Function-1b57" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series_int8_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$generate_series_int8_support$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="generate_subscripts" id="Function-614" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_subscripts(anyarray, integer, boolean)
 RETURNS SETOF integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$generate_subscripts$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="generate_subscripts" id="Function-1eb3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_subscripts(anyarray, integer)
 RETURNS SETOF integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$generate_subscripts_nodir$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="get_bit" id="Function-2006" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.get_bit(bit, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitgetbit$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="get_bit" id="Function-1c7a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.get_bit(bytea, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteaGetBit$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="get_byte" id="Function-120" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.get_byte(bytea, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteaGetByte$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="get_current_ts_config" id="Function-2f1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.get_current_ts_config()
 RETURNS regconfig
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$get_current_ts_config$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="getdatabaseencoding" id="Function-25d0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.getdatabaseencoding()
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$getdatabaseencoding$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="getpgusername" id="Function-1ef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.getpgusername()
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$current_user$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="gin_clean_pending_list" id="Function-ad0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_clean_pending_list(regclass)
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$gin_clean_pending_list$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
		</function>
		<function name="gin_cmp_prefix" id="Function-20d8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_cmp_prefix(text, text, smallint, internal)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_cmp_prefix$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gin_cmp_tslexeme" id="Function-a31" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_cmp_tslexeme(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_cmp_tslexeme$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="gin_compare_jsonb" id="Function-1677" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_compare_jsonb(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_compare_jsonb$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="gin_consistent_jsonb" id="Function-1e9b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_consistent_jsonb(internal, smallint, jsonb, integer, internal, internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_consistent_jsonb$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gin_consistent_jsonb_path" id="Function-1c41" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_consistent_jsonb_path(internal, smallint, jsonb, integer, internal, internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_consistent_jsonb_path$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gin_extract_jsonb" id="Function-2294" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_jsonb(jsonb, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_jsonb$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gin_extract_jsonb_path" id="Function-270c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_jsonb_path(jsonb, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_jsonb_path$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gin_extract_jsonb_query" id="Function-16d0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_jsonb_query(jsonb, internal, smallint, internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_jsonb_query$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gin_extract_jsonb_query_path" id="Function-19c5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_jsonb_query_path(jsonb, internal, smallint, internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_jsonb_query_path$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gin_extract_tsquery" id="Function-139d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_tsquery(tsquery, internal, smallint, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_tsquery_5args$function$
;]]></string>
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gin_extract_tsquery" id="Function-157a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_tsquery(tsvector, internal, smallint, internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_tsquery$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gin_extract_tsquery" id="Function-fa9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_tsquery(tsquery, internal, smallint, internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_tsquery_oldsig$function$
;]]></string>
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gin_extract_tsvector" id="Function-49c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_tsvector(tsvector, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_tsvector_2args$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gin_extract_tsvector" id="Function-181a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_tsvector(tsvector, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_tsvector$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gin_triconsistent_jsonb" id="Function-949" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_triconsistent_jsonb(internal, smallint, jsonb, integer, internal, internal, internal)
 RETURNS "char"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_triconsistent_jsonb$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gin_triconsistent_jsonb_path" id="Function-1211" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_triconsistent_jsonb_path(internal, smallint, jsonb, integer, internal, internal, internal)
 RETURNS "char"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_triconsistent_jsonb_path$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gin_tsquery_consistent" id="Function-1d17" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_tsquery_consistent(internal, smallint, tsquery, integer, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_tsquery_consistent_6args$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gin_tsquery_consistent" id="Function-17af" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_tsquery_consistent(internal, smallint, tsvector, integer, internal, internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_tsquery_consistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gin_tsquery_consistent" id="Function-2623" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_tsquery_consistent(internal, smallint, tsquery, integer, internal, internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_tsquery_consistent_oldsig$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gin_tsquery_triconsistent" id="Function-b53" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_tsquery_triconsistent(internal, smallint, tsvector, integer, internal, internal, internal)
 RETURNS "char"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_tsquery_triconsistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="ginarrayconsistent" id="Function-1920" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ginarrayconsistent(internal, smallint, anyarray, integer, internal, internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ginarrayconsistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="ginarrayextract" id="Function-15cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ginarrayextract(anyarray, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ginarrayextract$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="ginarrayextract" id="Function-682" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ginarrayextract(anyarray, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ginarrayextract_2args$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="ginarraytriconsistent" id="Function-dc3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ginarraytriconsistent(internal, smallint, anyarray, integer, internal, internal, internal)
 RETURNS "char"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ginarraytriconsistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="ginhandler" id="Function-975" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ginhandler(internal)
 RETURNS index_am_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$ginhandler$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="ginqueryarrayextract" id="Function-222b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ginqueryarrayextract(anyarray, internal, smallint, internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ginqueryarrayextract$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gist_box_consistent" id="Function-1a7e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_box_consistent(internal, box, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_box_consistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gist_box_penalty" id="Function-218b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_box_penalty(internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_box_penalty$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gist_box_picksplit" id="Function-247a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_box_picksplit(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_box_picksplit$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gist_box_same" id="Function-afa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_box_same(box, box, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_box_same$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gist_box_union" id="Function-175" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_box_union(internal, internal)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_box_union$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gist_circle_compress" id="Function-df3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_circle_compress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_circle_compress$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gist_circle_consistent" id="Function-419" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_circle_consistent(internal, circle, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_circle_consistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gist_circle_distance" id="Function-399" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_circle_distance(internal, circle, smallint, oid, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_circle_distance$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="circle" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gist_point_compress" id="Function-1845" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_point_compress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_point_compress$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gist_point_consistent" id="Function-26cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_point_consistent(internal, point, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_point_consistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gist_point_distance" id="Function-107e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_point_distance(internal, point, smallint, oid, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_point_distance$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gist_point_fetch" id="Function-7f0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_point_fetch(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_point_fetch$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gist_poly_compress" id="Function-6c5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_poly_compress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_poly_compress$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gist_poly_consistent" id="Function-f64" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_poly_consistent(internal, polygon, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_poly_consistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="polygon" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gist_poly_distance" id="Function-1467" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_poly_distance(internal, polygon, smallint, oid, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_poly_distance$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="polygon" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gisthandler" id="Function-9f5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gisthandler(internal)
 RETURNS index_am_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$gisthandler$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gtsquery_compress" id="Function-a71" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsquery_compress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsquery_compress$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gtsquery_consistent" id="Function-235c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsquery_consistent(internal, tsquery, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsquery_consistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gtsquery_consistent" id="Function-17d5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsquery_consistent(internal, internal, integer, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsquery_consistent_oldsig$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gtsquery_penalty" id="Function-130c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsquery_penalty(internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsquery_penalty$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gtsquery_picksplit" id="Function-1342" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsquery_picksplit(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsquery_picksplit$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gtsquery_same" id="Function-107c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsquery_same(bigint, bigint, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsquery_same$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gtsquery_union" id="Function-1170" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsquery_union(internal, internal)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsquery_union$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gtsvector_compress" id="Function-191" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_compress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvector_compress$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gtsvector_consistent" id="Function-1173" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_consistent(internal, tsvector, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvector_consistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gtsvector_consistent" id="Function-122c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_consistent(internal, gtsvector, integer, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvector_consistent_oldsig$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="gtsvector" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gtsvector_decompress" id="Function-bda" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_decompress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvector_decompress$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gtsvector_penalty" id="Function-2709" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_penalty(internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvector_penalty$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gtsvector_picksplit" id="Function-eec" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_picksplit(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvector_picksplit$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gtsvector_same" id="Function-239e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_same(gtsvector, gtsvector, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvector_same$function$
;]]></string>
			<input_param jt="-1" type="gtsvector" inOut="1" />
			<input_param jt="-1" type="gtsvector" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gtsvector_union" id="Function-22f3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_union(internal, internal)
 RETURNS gtsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvector_union$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gtsvectorin" id="Function-114a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvectorin(cstring)
 RETURNS gtsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvectorin$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="gtsvectorout" id="Function-230c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvectorout(gtsvector)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvectorout$function$
;]]></string>
			<input_param jt="-1" type="gtsvector" inOut="1" />
		</function>
		<function name="has_any_column_privilege" id="Function-1294" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_any_column_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$has_any_column_privilege_name_name$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_any_column_privilege" id="Function-25b9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_any_column_privilege(name, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$has_any_column_privilege_name_id$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_any_column_privilege" id="Function-581" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_any_column_privilege(oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$has_any_column_privilege_id_name$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_any_column_privilege" id="Function-110e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_any_column_privilege(oid, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$has_any_column_privilege_id_id$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_any_column_privilege" id="Function-260" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_any_column_privilege(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$has_any_column_privilege_name$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_any_column_privilege" id="Function-19f1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_any_column_privilege(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$has_any_column_privilege_id$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_column_privilege" id="Function-7b3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(name, text, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_name_name_name$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_column_privilege" id="Function-1586" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(name, text, smallint, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_name_name_attnum$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_column_privilege" id="Function-baf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(name, oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_name_id_name$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_column_privilege" id="Function-d4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(name, oid, smallint, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_name_id_attnum$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_column_privilege" id="Function-1ab3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(oid, text, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_id_name_name$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_column_privilege" id="Function-1d39" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(oid, text, smallint, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_id_name_attnum$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_column_privilege" id="Function-1456" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(oid, oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_id_id_name$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_column_privilege" id="Function-2613" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(oid, oid, smallint, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_id_id_attnum$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_column_privilege" id="Function-2227" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(text, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_name_name$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_column_privilege" id="Function-2320" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(text, smallint, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_name_attnum$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_column_privilege" id="Function-204e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_id_name$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_column_privilege" id="Function-11d8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(oid, smallint, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_id_attnum$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_database_privilege" id="Function-1050" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_database_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_database_privilege_name_name$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_database_privilege" id="Function-1b63" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_database_privilege(name, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_database_privilege_name_id$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_database_privilege" id="Function-14be" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_database_privilege(oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_database_privilege_id_name$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_database_privilege" id="Function-555" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_database_privilege(oid, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_database_privilege_id_id$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_database_privilege" id="Function-981" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_database_privilege(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_database_privilege_name$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_database_privilege" id="Function-ee3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_database_privilege(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_database_privilege_id$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_foreign_data_wrapper_privilege" id="Function-d05" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_foreign_data_wrapper_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_foreign_data_wrapper_privilege_name_name$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_foreign_data_wrapper_privilege" id="Function-1d71" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_foreign_data_wrapper_privilege(name, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_foreign_data_wrapper_privilege_name_id$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_foreign_data_wrapper_privilege" id="Function-a1e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_foreign_data_wrapper_privilege(oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_foreign_data_wrapper_privilege_id_name$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_foreign_data_wrapper_privilege" id="Function-7ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_foreign_data_wrapper_privilege(oid, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_foreign_data_wrapper_privilege_id_id$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_foreign_data_wrapper_privilege" id="Function-7e9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_foreign_data_wrapper_privilege(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_foreign_data_wrapper_privilege_name$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_foreign_data_wrapper_privilege" id="Function-d27" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_foreign_data_wrapper_privilege(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_foreign_data_wrapper_privilege_id$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_function_privilege" id="Function-1d25" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_function_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_function_privilege_name_name$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_function_privilege" id="Function-2076" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_function_privilege(name, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_function_privilege_name_id$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_function_privilege" id="Function-615" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_function_privilege(oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_function_privilege_id_name$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_function_privilege" id="Function-fb7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_function_privilege(oid, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_function_privilege_id_id$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_function_privilege" id="Function-16d1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_function_privilege(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_function_privilege_name$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_function_privilege" id="Function-2082" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_function_privilege(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_function_privilege_id$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_language_privilege" id="Function-ed4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_language_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_language_privilege_name_name$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_language_privilege" id="Function-147a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_language_privilege(name, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_language_privilege_name_id$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_language_privilege" id="Function-2026" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_language_privilege(oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_language_privilege_id_name$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_language_privilege" id="Function-3b1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_language_privilege(oid, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_language_privilege_id_id$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_language_privilege" id="Function-1bcd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_language_privilege(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_language_privilege_name$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_language_privilege" id="Function-1eed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_language_privilege(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_language_privilege_id$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_schema_privilege" id="Function-1658" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_schema_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_schema_privilege_name_name$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_schema_privilege" id="Function-1d0f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_schema_privilege(name, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_schema_privilege_name_id$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_schema_privilege" id="Function-541" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_schema_privilege(oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_schema_privilege_id_name$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_schema_privilege" id="Function-b28" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_schema_privilege(oid, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_schema_privilege_id_id$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_schema_privilege" id="Function-429" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_schema_privilege(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_schema_privilege_name$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_schema_privilege" id="Function-1a68" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_schema_privilege(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_schema_privilege_id$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_sequence_privilege" id="Function-15c5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_sequence_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_sequence_privilege_name_name$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_sequence_privilege" id="Function-1d46" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_sequence_privilege(name, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_sequence_privilege_name_id$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_sequence_privilege" id="Function-11f4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_sequence_privilege(oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_sequence_privilege_id_name$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_sequence_privilege" id="Function-1655" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_sequence_privilege(oid, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_sequence_privilege_id_id$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_sequence_privilege" id="Function-a26" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_sequence_privilege(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_sequence_privilege_name$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_sequence_privilege" id="Function-72f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_sequence_privilege(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_sequence_privilege_id$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_server_privilege" id="Function-f4c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_server_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_server_privilege_name_name$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_server_privilege" id="Function-93b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_server_privilege(name, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_server_privilege_name_id$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_server_privilege" id="Function-262b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_server_privilege(oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_server_privilege_id_name$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_server_privilege" id="Function-15ad" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_server_privilege(oid, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_server_privilege_id_id$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_server_privilege" id="Function-1641" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_server_privilege(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_server_privilege_name$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_server_privilege" id="Function-25ef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_server_privilege(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_server_privilege_id$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_table_privilege" id="Function-23a5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_table_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_table_privilege_name_name$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_table_privilege" id="Function-1ab2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_table_privilege(name, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_table_privilege_name_id$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_table_privilege" id="Function-1bf7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_table_privilege(oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_table_privilege_id_name$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_table_privilege" id="Function-44e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_table_privilege(oid, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_table_privilege_id_id$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_table_privilege" id="Function-2674" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_table_privilege(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_table_privilege_name$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_table_privilege" id="Function-d0c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_table_privilege(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_table_privilege_id$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_tablespace_privilege" id="Function-165" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_tablespace_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_tablespace_privilege_name_name$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_tablespace_privilege" id="Function-1a3b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_tablespace_privilege(name, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_tablespace_privilege_name_id$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_tablespace_privilege" id="Function-8b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_tablespace_privilege(oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_tablespace_privilege_id_name$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_tablespace_privilege" id="Function-23c5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_tablespace_privilege(oid, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_tablespace_privilege_id_id$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_tablespace_privilege" id="Function-2584" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_tablespace_privilege(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_tablespace_privilege_name$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_tablespace_privilege" id="Function-1383" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_tablespace_privilege(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_tablespace_privilege_id$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_type_privilege" id="Function-1ab0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_type_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_type_privilege_name_name$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_type_privilege" id="Function-1e62" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_type_privilege(name, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_type_privilege_name_id$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_type_privilege" id="Function-854" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_type_privilege(oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_type_privilege_id_name$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_type_privilege" id="Function-1130" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_type_privilege(oid, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_type_privilege_id_id$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_type_privilege" id="Function-239d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_type_privilege(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_type_privilege_name$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_type_privilege" id="Function-fa9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_type_privilege(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_type_privilege_id$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="hash_aclitem" id="Function-106f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hash_aclitem(aclitem)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hash_aclitem$function$
;]]></string>
			<input_param jt="-1" type="aclitem" inOut="1" />
		</function>
		<function name="hash_aclitem_extended" id="Function-4e5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hash_aclitem_extended(aclitem, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hash_aclitem_extended$function$
;]]></string>
			<input_param jt="-1" type="aclitem" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="hash_array" id="Function-1d56" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hash_array(anyarray)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hash_array$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="hash_array_extended" id="Function-2165" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hash_array_extended(anyarray, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hash_array_extended$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="hash_numeric" id="Function-1e32" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hash_numeric(numeric)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hash_numeric$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="hash_numeric_extended" id="Function-1c0a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hash_numeric_extended(numeric, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hash_numeric_extended$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="hash_range" id="Function-1efa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hash_range(anyrange)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hash_range$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="hash_range_extended" id="Function-73b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hash_range_extended(anyrange, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hash_range_extended$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="hashbpchar" id="Function-261a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashbpchar(character)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashbpchar$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="hashbpcharextended" id="Function-1bb5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashbpcharextended(character, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashbpcharextended$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="hashchar" id="Function-25d8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashchar("char")
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashchar$function$
;]]></string>
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
		</function>
		<function name="hashcharextended" id="Function-899" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashcharextended("char", bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashcharextended$function$
;]]></string>
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="hashenum" id="Function-370" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashenum(anyenum)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashenum$function$
;]]></string>
			<input_param jt="-1" type="anyenum" inOut="1" />
		</function>
		<function name="hashenumextended" id="Function-21c9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashenumextended(anyenum, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashenumextended$function$
;]]></string>
			<input_param jt="-1" type="anyenum" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="hashfloat4" id="Function-a84" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashfloat4(real)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashfloat4$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="hashfloat4extended" id="Function-a55" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashfloat4extended(real, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashfloat4extended$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="hashfloat8" id="Function-1928" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashfloat8(double precision)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashfloat8$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="hashfloat8extended" id="Function-74d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashfloat8extended(double precision, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashfloat8extended$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="hashhandler" id="Function-b81" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashhandler(internal)
 RETURNS index_am_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$hashhandler$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="hashinet" id="Function-16c8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashinet(inet)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashinet$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="hashinetextended" id="Function-1e85" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashinetextended(inet, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashinetextended$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="hashint2" id="Function-24c7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashint2(smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashint2$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="hashint2extended" id="Function-21d6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashint2extended(smallint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashint2extended$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="hashint4" id="Function-e65" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashint4(integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashint4$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="hashint4extended" id="Function-12a9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashint4extended(integer, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashint4extended$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="hashint8" id="Function-b9e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashint8(bigint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashint8$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="hashint8extended" id="Function-63a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashint8extended(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashint8extended$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="hashmacaddr" id="Function-992" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashmacaddr(macaddr)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashmacaddr$function$
;]]></string>
			<input_param jt="-1" type="macaddr" inOut="1" />
		</function>
		<function name="hashmacaddr8" id="Function-1e9b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashmacaddr8(macaddr8)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashmacaddr8$function$
;]]></string>
			<input_param jt="-1" type="macaddr8" inOut="1" />
		</function>
		<function name="hashmacaddr8extended" id="Function-915" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashmacaddr8extended(macaddr8, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashmacaddr8extended$function$
;]]></string>
			<input_param jt="-1" type="macaddr8" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="hashmacaddrextended" id="Function-9a5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashmacaddrextended(macaddr, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashmacaddrextended$function$
;]]></string>
			<input_param jt="-1" type="macaddr" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="hashname" id="Function-21ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashname(name)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashname$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="hashnameextended" id="Function-1db1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashnameextended(name, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashnameextended$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="hashoid" id="Function-b0e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashoid(oid)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashoid$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="hashoidextended" id="Function-149d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashoidextended(oid, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashoidextended$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="hashoidvector" id="Function-10b4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashoidvector(oidvector)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashoidvector$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="hashoidvectorextended" id="Function-10bd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashoidvectorextended(oidvector, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashoidvectorextended$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="hashtext" id="Function-197d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashtext(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashtext$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="hashtextextended" id="Function-e64" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashtextextended(text, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashtextextended$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="hashtid" id="Function-223e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashtid(tid)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashtid$function$
;]]></string>
			<input_param jt="-1" type="tid" inOut="1" />
		</function>
		<function name="hashtidextended" id="Function-fd1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashtidextended(tid, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashtidextended$function$
;]]></string>
			<input_param jt="-1" type="tid" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="hashvarlena" id="Function-6fb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashvarlena(internal)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashvarlena$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="hashvarlenaextended" id="Function-10ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashvarlenaextended(internal, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashvarlenaextended$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="heap_tableam_handler" id="Function-1c8c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.heap_tableam_handler(internal)
 RETURNS table_am_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$heap_tableam_handler$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="height" id="Function-267" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.height(box)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_height$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="host" id="Function-19e4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.host(inet)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_host$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="hostmask" id="Function-169c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hostmask(inet)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_hostmask$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="iclikejoinsel" id="Function-17dc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.iclikejoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$iclikejoinsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="iclikesel" id="Function-2683" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.iclikesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$iclikesel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="icnlikejoinsel" id="Function-42e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.icnlikejoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$icnlikejoinsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="icnlikesel" id="Function-260a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.icnlikesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$icnlikesel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="icregexeqjoinsel" id="Function-1ee0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.icregexeqjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$icregexeqjoinsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="icregexeqsel" id="Function-928" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.icregexeqsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$icregexeqsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="icregexnejoinsel" id="Function-129f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.icregexnejoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$icregexnejoinsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="icregexnesel" id="Function-2420" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.icregexnesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$icregexnesel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="in_range" id="Function-1685" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(bigint, bigint, bigint, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_int8_int8$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="Function-19d1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(integer, integer, bigint, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_int4_int8$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="Function-1d60" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(integer, integer, integer, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_int4_int4$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="Function-1bd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(integer, integer, smallint, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_int4_int2$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="Function-1c2f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(smallint, smallint, bigint, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_int2_int8$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="Function-307" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(smallint, smallint, integer, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_int2_int4$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="Function-77b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(smallint, smallint, smallint, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_int2_int2$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="Function-349" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(date, date, interval, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_date_interval$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="Function-d06" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(timestamp without time zone, timestamp without time zone, interval, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_timestamp_interval$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="Function-1f85" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(timestamp with time zone, timestamp with time zone, interval, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$in_range_timestamptz_interval$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="Function-16e0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(interval, interval, interval, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_interval_interval$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="Function-cdf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(time without time zone, time without time zone, interval, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_time_interval$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="Function-e35" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(time with time zone, time with time zone, interval, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_timetz_interval$function$
;]]></string>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="Function-1b9e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(double precision, double precision, double precision, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_float8_float8$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="Function-e90" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(real, real, double precision, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_float4_float8$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="Function-59d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(numeric, numeric, numeric, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_numeric_numeric$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="index_am_handler_in" id="Function-1816" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.index_am_handler_in(cstring)
 RETURNS index_am_handler
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$index_am_handler_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="index_am_handler_out" id="Function-16ec" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.index_am_handler_out(index_am_handler)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$index_am_handler_out$function$
;]]></string>
			<input_param jt="-1" type="index_am_handler" inOut="1" />
		</function>
		<function name="inet_client_addr" id="Function-219f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_client_addr()
 RETURNS inet
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED
AS $function$inet_client_addr$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="inet_client_port" id="Function-1ccb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_client_port()
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED
AS $function$inet_client_port$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="inet_gist_compress" id="Function-a7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_gist_compress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_gist_compress$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="inet_gist_consistent" id="Function-2398" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_gist_consistent(internal, inet, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_gist_consistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="inet_gist_fetch" id="Function-2481" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_gist_fetch(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_gist_fetch$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="inet_gist_penalty" id="Function-701" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_gist_penalty(internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_gist_penalty$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="inet_gist_picksplit" id="Function-1ddd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_gist_picksplit(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_gist_picksplit$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="inet_gist_same" id="Function-46" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_gist_same(inet, inet, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_gist_same$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="inet_gist_union" id="Function-da4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_gist_union(internal, internal)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_gist_union$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="inet_in" id="Function-1105" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_in(cstring)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="inet_merge" id="Function-171d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_merge(inet, inet)
 RETURNS cidr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_merge$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="inet_out" id="Function-1f4a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_out(inet)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_out$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="inet_recv" id="Function-1fb6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_recv(internal)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="inet_same_family" id="Function-1aa4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_same_family(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_same_family$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="inet_send" id="Function-2470" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_send(inet)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_send$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="inet_server_addr" id="Function-265e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_server_addr()
 RETURNS inet
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$inet_server_addr$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="inet_server_port" id="Function-1cec" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_server_port()
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$inet_server_port$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="inet_spg_choose" id="Function-1763" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_spg_choose(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_spg_choose$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="inet_spg_config" id="Function-23d7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_spg_config(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_spg_config$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="inet_spg_inner_consistent" id="Function-c4a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_spg_inner_consistent(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_spg_inner_consistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="inet_spg_leaf_consistent" id="Function-8aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_spg_leaf_consistent(internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_spg_leaf_consistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="inet_spg_picksplit" id="Function-23be" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_spg_picksplit(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_spg_picksplit$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="inetand" id="Function-203" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inetand(inet, inet)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inetand$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="inetmi" id="Function-4cd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inetmi(inet, inet)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inetmi$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="inetmi_int8" id="Function-2404" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inetmi_int8(inet, bigint)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inetmi_int8$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="inetnot" id="Function-184a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inetnot(inet)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inetnot$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="inetor" id="Function-16be" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inetor(inet, inet)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inetor$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="inetpl" id="Function-b4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inetpl(inet, bigint)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inetpl$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="initcap" id="Function-217e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.initcap(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$initcap$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="int2" id="Function-1b7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2(numeric)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_int2$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="int2" id="Function-2108" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2(double precision)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtoi2$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="int2" id="Function-102c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2(real)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ftoi2$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="int2" id="Function-1f82" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2(integer)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$i4toi2$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int2" id="Function-226e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2(jsonb)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_int2$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="int2" id="Function-7c4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2(bigint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int82$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int24div" id="Function-75f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24div(smallint, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int24div$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int24eq" id="Function-13fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24eq(smallint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int24eq$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int24ge" id="Function-187a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24ge(smallint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int24ge$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int24gt" id="Function-bd5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24gt(smallint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int24gt$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int24le" id="Function-aef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24le(smallint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int24le$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int24lt" id="Function-d94" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24lt(smallint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int24lt$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int24mi" id="Function-192b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24mi(smallint, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int24mi$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int24mul" id="Function-1ef8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24mul(smallint, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int24mul$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int24ne" id="Function-8b1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24ne(smallint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int24ne$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int24pl" id="Function-1c8c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24pl(smallint, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int24pl$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int28div" id="Function-20ec" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28div(smallint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int28div$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int28eq" id="Function-1967" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28eq(smallint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int28eq$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int28ge" id="Function-59f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28ge(smallint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int28ge$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int28gt" id="Function-17d4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28gt(smallint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int28gt$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int28le" id="Function-1f89" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28le(smallint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int28le$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int28lt" id="Function-112c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28lt(smallint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int28lt$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int28mi" id="Function-13c0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28mi(smallint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int28mi$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int28mul" id="Function-1cd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28mul(smallint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int28mul$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int28ne" id="Function-2611" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28ne(smallint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int28ne$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int28pl" id="Function-1019" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28pl(smallint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int28pl$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int2_accum" id="Function-119b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2_accum(internal, smallint)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int2_accum$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2_accum_inv" id="Function-14d7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2_accum_inv(internal, smallint)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int2_accum_inv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2_avg_accum" id="Function-2705" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2_avg_accum(bigint[], smallint)
 RETURNS bigint[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2_avg_accum$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2_avg_accum_inv" id="Function-681" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2_avg_accum_inv(bigint[], smallint)
 RETURNS bigint[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2_avg_accum_inv$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2_mul_cash" id="Function-3f0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2_mul_cash(smallint, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2_mul_cash$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="money" inOut="1" />
		</function>
		<function name="int2_sum" id="Function-ad7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2_sum(bigint, smallint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int2_sum$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2abs" id="Function-1887" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2abs(smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2abs$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2and" id="Function-218e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2and(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2and$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2div" id="Function-2254" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2div(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2div$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2eq" id="Function-1d9b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2eq(smallint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int2eq$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2ge" id="Function-cf7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2ge(smallint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int2ge$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2gt" id="Function-950" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2gt(smallint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int2gt$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2in" id="Function-20fe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2in(cstring)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="int2int4_sum" id="Function-1a4e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2int4_sum(bigint[])
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2int4_sum$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="int2larger" id="Function-449" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2larger(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2larger$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2le" id="Function-1072" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2le(smallint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int2le$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2lt" id="Function-1be1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2lt(smallint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int2lt$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2mi" id="Function-5ad" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2mi(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2mi$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2mod" id="Function-d3b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2mod(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2mod$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2mul" id="Function-13f7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2mul(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2mul$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2ne" id="Function-1b81" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2ne(smallint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int2ne$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2not" id="Function-2289" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2not(smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2not$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2or" id="Function-b0c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2or(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2or$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2out" id="Function-2233" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2out(smallint)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2out$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2pl" id="Function-179a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2pl(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2pl$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2recv" id="Function-2239" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2recv(internal)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="int2send" id="Function-2242" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2send(smallint)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2send$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2shl" id="Function-513" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2shl(smallint, integer)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2shl$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int2shr" id="Function-1311" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2shr(smallint, integer)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2shr$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int2smaller" id="Function-f8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2smaller(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2smaller$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2um" id="Function-1c09" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2um(smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2um$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2up" id="Function-1a0a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2up(smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2up$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int2vectorin" id="Function-c69" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2vectorin(cstring)
 RETURNS int2vector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2vectorin$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="int2vectorout" id="Function-420" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2vectorout(int2vector)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2vectorout$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="int2vectorrecv" id="Function-1d74" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2vectorrecv(internal)
 RETURNS int2vector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2vectorrecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="int2vectorsend" id="Function-2193" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2vectorsend(int2vector)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2vectorsend$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="int2xor" id="Function-a5d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2xor(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2xor$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int4" id="Function-67a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4(bit)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bittoint4$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="int4" id="Function-334" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4(numeric)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_int4$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="int4" id="Function-1ccb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4(boolean)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bool_int4$function$
;]]></string>
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="int4" id="Function-413" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4(smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$i2toi4$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int4" id="Function-1f93" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4(double precision)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtoi4$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="int4" id="Function-25d2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4(real)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ftoi4$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="int4" id="Function-23e5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4(jsonb)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_int4$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="int4" id="Function-1e3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4(bigint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int84$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int4" id="Function-cf3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4("char")
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$chartoi4$function$
;]]></string>
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
		</function>
		<function name="int42div" id="Function-1b14" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42div(integer, smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int42div$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int42eq" id="Function-25ad" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42eq(integer, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int42eq$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int42ge" id="Function-1118" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42ge(integer, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int42ge$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int42gt" id="Function-1b07" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42gt(integer, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int42gt$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int42le" id="Function-1f84" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42le(integer, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int42le$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int42lt" id="Function-26a0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42lt(integer, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int42lt$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int42mi" id="Function-206f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42mi(integer, smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int42mi$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int42mul" id="Function-e64" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42mul(integer, smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int42mul$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int42ne" id="Function-dc9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42ne(integer, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int42ne$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int42pl" id="Function-117d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42pl(integer, smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int42pl$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int48div" id="Function-25ac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48div(integer, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int48div$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int48eq" id="Function-bfa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48eq(integer, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int48eq$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int48ge" id="Function-12a4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48ge(integer, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int48ge$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int48gt" id="Function-fbf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48gt(integer, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int48gt$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int48le" id="Function-e37" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48le(integer, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int48le$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int48lt" id="Function-898" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48lt(integer, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int48lt$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int48mi" id="Function-24c9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48mi(integer, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int48mi$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int48mul" id="Function-cbd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48mul(integer, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int48mul$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int48ne" id="Function-4c9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48ne(integer, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int48ne$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int48pl" id="Function-1c8f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48pl(integer, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int48pl$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int4_accum" id="Function-1ff5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4_accum(internal, integer)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int4_accum$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4_accum_inv" id="Function-176d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4_accum_inv(internal, integer)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int4_accum_inv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4_avg_accum" id="Function-817" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4_avg_accum(bigint[], integer)
 RETURNS bigint[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4_avg_accum$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4_avg_accum_inv" id="Function-13e6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4_avg_accum_inv(bigint[], integer)
 RETURNS bigint[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4_avg_accum_inv$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4_avg_combine" id="Function-21dc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4_avg_combine(bigint[], bigint[])
 RETURNS bigint[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4_avg_combine$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="int4_mul_cash" id="Function-cf6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4_mul_cash(integer, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4_mul_cash$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="money" inOut="1" />
		</function>
		<function name="int4_sum" id="Function-19d8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4_sum(bigint, integer)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int4_sum$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4abs" id="Function-1215" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4abs(integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4abs$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4and" id="Function-e3e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4and(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4and$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4div" id="Function-22b6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4div(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4div$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4eq" id="Function-11e2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4eq(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int4eq$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4ge" id="Function-122e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4ge(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int4ge$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4gt" id="Function-1fb3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4gt(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int4gt$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4in" id="Function-1bcd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4in(cstring)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="int4inc" id="Function-247c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4inc(integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4inc$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4larger" id="Function-f50" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4larger(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4larger$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4le" id="Function-238c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4le(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int4le$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4lt" id="Function-19aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4lt(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int4lt$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4mi" id="Function-1c84" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4mi(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4mi$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4mod" id="Function-15ae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4mod(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4mod$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4mul" id="Function-1108" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4mul(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4mul$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4ne" id="Function-c27" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4ne(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int4ne$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4not" id="Function-2241" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4not(integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4not$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4or" id="Function-2693" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4or(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4or$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4out" id="Function-5b1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4out(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4out$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4pl" id="Function-12bb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4pl(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4pl$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4range" id="Function-fbd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4range(integer, integer)
 RETURNS int4range
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor2$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4range" id="Function-924" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4range(integer, integer, text)
 RETURNS int4range
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor3$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="int4range_canonical" id="Function-1988" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4range_canonical(int4range)
 RETURNS int4range
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4range_canonical$function$
;]]></string>
			<input_param jt="-1" type="int4range" inOut="1" />
		</function>
		<function name="int4range_subdiff" id="Function-c75" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4range_subdiff(integer, integer)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4range_subdiff$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4recv" id="Function-1e5f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4recv(internal)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="int4send" id="Function-2f3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4send(integer)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4send$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4shl" id="Function-bc6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4shl(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4shl$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4shr" id="Function-f34" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4shr(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4shr$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4smaller" id="Function-d5b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4smaller(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4smaller$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4um" id="Function-d0f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4um(integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4um$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4up" id="Function-f61" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4up(integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4up$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4xor" id="Function-954" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4xor(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4xor$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int8" id="Function-235e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8(oid)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidtoi8$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="int8" id="Function-70" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8(numeric)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_int8$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="int8" id="Function-ba3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8(bit)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bittoint8$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="int8" id="Function-93e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8(jsonb)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_int8$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="int8" id="Function-2a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8(integer)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int48$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int8" id="Function-2011" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8(double precision)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtoi8$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="int8" id="Function-20aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8(real)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ftoi8$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="int8" id="Function-b48" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8(smallint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int28$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int82div" id="Function-1085" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82div(bigint, smallint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int82div$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int82eq" id="Function-233f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82eq(bigint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int82eq$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int82ge" id="Function-df7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82ge(bigint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int82ge$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int82gt" id="Function-1187" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82gt(bigint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int82gt$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int82le" id="Function-132f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82le(bigint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int82le$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int82lt" id="Function-6a4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82lt(bigint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int82lt$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int82mi" id="Function-1d61" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82mi(bigint, smallint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int82mi$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int82mul" id="Function-17cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82mul(bigint, smallint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int82mul$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int82ne" id="Function-1336" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82ne(bigint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int82ne$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int82pl" id="Function-1ab4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82pl(bigint, smallint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int82pl$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="int84div" id="Function-1871" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84div(bigint, integer)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int84div$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int84eq" id="Function-a38" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84eq(bigint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int84eq$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int84ge" id="Function-1a6d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84ge(bigint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int84ge$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int84gt" id="Function-1b25" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84gt(bigint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int84gt$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int84le" id="Function-24a0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84le(bigint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int84le$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int84lt" id="Function-1951" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84lt(bigint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int84lt$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int84mi" id="Function-88b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84mi(bigint, integer)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int84mi$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int84mul" id="Function-baf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84mul(bigint, integer)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int84mul$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int84ne" id="Function-22e4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84ne(bigint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int84ne$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int84pl" id="Function-1c9e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84pl(bigint, integer)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int84pl$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int8_accum" id="Function-d84" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_accum(internal, bigint)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int8_accum$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8_accum_inv" id="Function-1623" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_accum_inv(internal, bigint)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int8_accum_inv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8_avg" id="Function-1e2e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_avg(bigint[])
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8_avg$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="int8_avg_accum" id="Function-220f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_avg_accum(internal, bigint)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int8_avg_accum$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8_avg_accum_inv" id="Function-1349" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_avg_accum_inv(internal, bigint)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int8_avg_accum_inv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8_avg_combine" id="Function-1d1f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_avg_combine(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int8_avg_combine$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="int8_avg_deserialize" id="Function-5cf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_avg_deserialize(bytea, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8_avg_deserialize$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="int8_avg_serialize" id="Function-e05" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_avg_serialize(internal)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8_avg_serialize$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="int8_mul_cash" id="Function-26c0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_mul_cash(bigint, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8_mul_cash$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="money" inOut="1" />
		</function>
		<function name="int8_sum" id="Function-fc6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_sum(numeric, bigint)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int8_sum$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8abs" id="Function-24df" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8abs(bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8abs$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8and" id="Function-168" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8and(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8and$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8dec" id="Function-135c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8dec(bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8dec$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8dec_any" id="Function-70c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8dec_any(bigint, "any")
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8dec_any$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="int8div" id="Function-904" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8div(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8div$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8eq" id="Function-e29" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8eq(bigint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int8eq$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8ge" id="Function-2040" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8ge(bigint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int8ge$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8gt" id="Function-184c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8gt(bigint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int8gt$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8in" id="Function-102e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8in(cstring)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="int8inc" id="Function-12b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8inc(bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8inc$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8inc_any" id="Function-5f5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8inc_any(bigint, "any")
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8inc_any$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="int8inc_float8_float8" id="Function-1182" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8inc_float8_float8(bigint, double precision, double precision)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8inc_float8_float8$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="int8larger" id="Function-11b4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8larger(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8larger$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8le" id="Function-11f6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8le(bigint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int8le$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8lt" id="Function-1287" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8lt(bigint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int8lt$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8mi" id="Function-11f6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8mi(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8mi$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8mod" id="Function-2e6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8mod(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8mod$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8mul" id="Function-bae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8mul(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8mul$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8ne" id="Function-664" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8ne(bigint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int8ne$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8not" id="Function-900" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8not(bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8not$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8or" id="Function-13f5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8or(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8or$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8out" id="Function-cb9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8out(bigint)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8out$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8pl" id="Function-24f7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8pl(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8pl$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8pl_inet" id="Function-19be" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8pl_inet(bigint, inet)
 RETURNS inet
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select $2 + $1$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="int8range" id="Function-ea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8range(bigint, bigint)
 RETURNS int8range
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor2$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8range" id="Function-654" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8range(bigint, bigint, text)
 RETURNS int8range
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor3$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="int8range_canonical" id="Function-231" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8range_canonical(int8range)
 RETURNS int8range
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8range_canonical$function$
;]]></string>
			<input_param jt="-1" type="int8range" inOut="1" />
		</function>
		<function name="int8range_subdiff" id="Function-1168" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8range_subdiff(bigint, bigint)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8range_subdiff$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8recv" id="Function-1b78" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8recv(internal)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="int8send" id="Function-1149" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8send(bigint)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8send$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8shl" id="Function-11fb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8shl(bigint, integer)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8shl$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int8shr" id="Function-15b2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8shr(bigint, integer)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8shr$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int8smaller" id="Function-17db" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8smaller(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8smaller$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8um" id="Function-2213" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8um(bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8um$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8up" id="Function-26fe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8up(bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8up$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8xor" id="Function-1e84" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8xor(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8xor$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="integer_pl_date" id="Function-1d9c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.integer_pl_date(integer, date)
 RETURNS date
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select $2 + $1$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="inter_lb" id="Function-ac6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inter_lb(line, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inter_lb$function$
;]]></string>
			<input_param jt="-1" type="line" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="inter_sb" id="Function-267d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inter_sb(lseg, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inter_sb$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="inter_sl" id="Function-16c4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inter_sl(lseg, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inter_sl$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
			<input_param jt="-1" type="line" inOut="1" />
		</function>
		<function name="internal_in" id="Function-1ca8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.internal_in(cstring)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$internal_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="internal_out" id="Function-f9b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.internal_out(internal)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$internal_out$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="interval" id="Function-12e8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."interval"(interval, integer)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT interval_support
AS $function$interval_scale$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="interval" id="Function-d62" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."interval"(time without time zone)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_interval$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
		</function>
		<function name="interval_accum" id="Function-1efb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_accum(interval[], interval)
 RETURNS interval[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_accum$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="interval_accum_inv" id="Function-25d3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_accum_inv(interval[], interval)
 RETURNS interval[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_accum_inv$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="interval_avg" id="Function-1721" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_avg(interval[])
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_avg$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="interval_cmp" id="Function-1162" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_cmp(interval, interval)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$interval_cmp$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="interval_combine" id="Function-2375" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_combine(interval[], interval[])
 RETURNS interval[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_combine$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="interval_div" id="Function-f72" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_div(interval, double precision)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_div$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="interval_eq" id="Function-4b5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_eq(interval, interval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$interval_eq$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="interval_ge" id="Function-1ecf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_ge(interval, interval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$interval_ge$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="interval_gt" id="Function-7cb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_gt(interval, interval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$interval_gt$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="interval_hash" id="Function-26d0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_hash(interval)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_hash$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="interval_hash_extended" id="Function-2583" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_hash_extended(interval, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_hash_extended$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="interval_in" id="Function-11ed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_in(cstring, oid, integer)
 RETURNS interval
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$interval_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="interval_larger" id="Function-675" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_larger(interval, interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_larger$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="interval_le" id="Function-1de5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_le(interval, interval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$interval_le$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="interval_lt" id="Function-2599" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_lt(interval, interval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$interval_lt$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="interval_mi" id="Function-1801" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_mi(interval, interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_mi$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="interval_mul" id="Function-12cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_mul(interval, double precision)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_mul$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="interval_ne" id="Function-11fb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_ne(interval, interval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$interval_ne$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="interval_out" id="Function-1913" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_out(interval)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_out$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="interval_pl" id="Function-2025" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_pl(interval, interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_pl$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="interval_pl_date" id="Function-215c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_pl_date(interval, date)
 RETURNS timestamp without time zone
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select $2 + $1$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="interval_pl_time" id="Function-1d20" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_pl_time(interval, time without time zone)
 RETURNS time without time zone
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select $2 + $1$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="time without time zone" inOut="1" />
		</function>
		<function name="interval_pl_timestamp" id="Function-67c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_pl_timestamp(interval, timestamp without time zone)
 RETURNS timestamp without time zone
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select $2 + $1$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="interval_pl_timestamptz" id="Function-fe1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_pl_timestamptz(interval, timestamp with time zone)
 RETURNS timestamp with time zone
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT COST 1
AS $function$select $2 + $1$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="interval_pl_timetz" id="Function-d39" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_pl_timetz(interval, time with time zone)
 RETURNS time with time zone
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select $2 + $1$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="interval_recv" id="Function-57" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_recv(internal, oid, integer)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="interval_send" id="Function-242b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_send(interval)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_send$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="interval_smaller" id="Function-1fd5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_smaller(interval, interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_smaller$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="interval_support" id="Function-1e50" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_support$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="interval_um" id="Function-14a3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_um(interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_um$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="intervaltypmodin" id="Function-2275" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.intervaltypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$intervaltypmodin$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="intervaltypmodout" id="Function-9e4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.intervaltypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$intervaltypmodout$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="isclosed" id="Function-1496" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isclosed(path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_isclosed$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="isempty" id="Function-1334" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isempty(anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_empty$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="isfinite" id="Function-17c2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isfinite(date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_finite$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="isfinite" id="Function-1228" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isfinite(timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_finite$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="isfinite" id="Function-6c4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isfinite(interval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_finite$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="isfinite" id="Function-fcd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isfinite(timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_finite$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="ishorizontal" id="Function-afa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ishorizontal(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_horiz$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="ishorizontal" id="Function-19ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ishorizontal(lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_horizontal$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="ishorizontal" id="Function-1948" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ishorizontal(line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_horizontal$function$
;]]></string>
			<input_param jt="-1" type="line" inOut="1" />
		</function>
		<function name="iso8859_1_to_utf8" id="Function-225e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.iso8859_1_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_iso8859_1', $function$iso8859_1_to_utf8$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="iso8859_to_utf8" id="Function-16e5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.iso8859_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_iso8859', $function$iso8859_to_utf8$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="iso_to_koi8r" id="Function-669" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.iso_to_koi8r(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$iso_to_koi8r$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="iso_to_mic" id="Function-13fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.iso_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$iso_to_mic$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="iso_to_win1251" id="Function-1066" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.iso_to_win1251(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$iso_to_win1251$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="iso_to_win866" id="Function-1c70" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.iso_to_win866(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$iso_to_win866$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="isopen" id="Function-16ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isopen(path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_isopen$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="isparallel" id="Function-34d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isparallel(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_parallel$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="isparallel" id="Function-d01" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isparallel(line, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_parallel$function$
;]]></string>
			<input_param jt="-1" type="line" inOut="1" />
			<input_param jt="-1" type="line" inOut="1" />
		</function>
		<function name="isperp" id="Function-398" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isperp(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_perp$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="isperp" id="Function-60d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isperp(line, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_perp$function$
;]]></string>
			<input_param jt="-1" type="line" inOut="1" />
			<input_param jt="-1" type="line" inOut="1" />
		</function>
		<function name="isvertical" id="Function-40" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isvertical(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_vert$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="isvertical" id="Function-323" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isvertical(lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_vertical$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="isvertical" id="Function-3f8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isvertical(line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_vertical$function$
;]]></string>
			<input_param jt="-1" type="line" inOut="1" />
		</function>
		<function name="johab_to_utf8" id="Function-1b66" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.johab_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_johab', $function$johab_to_utf8$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="json_agg_finalfn" id="Function-1fe8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_agg_finalfn(internal)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$json_agg_finalfn$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="json_agg_transfn" id="Function-18e4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_agg_transfn(internal, anyelement)
 RETURNS internal
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_agg_transfn$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="anyelement" inOut="1" />
		</function>
		<function name="json_array_element" id="Function-1c3d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_array_element(from_json json, element_index integer)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_array_element$function$
;]]></string>
			<input_param name="from_json" jt="-1" type="json" inOut="1" />
			<input_param name="element_index" jt="-1" type="integer" inOut="1" />
		</function>
		<function name="json_array_element_text" id="Function-9d8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_array_element_text(from_json json, element_index integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_array_element_text$function$
;]]></string>
			<input_param name="from_json" jt="-1" type="json" inOut="1" />
			<input_param name="element_index" jt="-1" type="integer" inOut="1" />
		</function>
		<function name="json_array_elements" id="Function-686" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_array_elements(from_json json, OUT value json)
 RETURNS SETOF json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$json_array_elements$function$
;]]></string>
			<input_param name="from_json" jt="-1" type="json" inOut="1" />
			<input_param name="value" jt="-1" type="json" inOut="3" />
		</function>
		<function name="json_array_elements_text" id="Function-bea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_array_elements_text(from_json json, OUT value text)
 RETURNS SETOF text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$json_array_elements_text$function$
;]]></string>
			<input_param name="from_json" jt="-1" type="json" inOut="1" />
			<input_param name="value" jt="-1" type="text" inOut="3" />
		</function>
		<function name="json_array_length" id="Function-e98" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_array_length(json)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_array_length$function$
;]]></string>
			<input_param jt="-1" type="json" inOut="1" />
		</function>
		<function name="json_build_array" id="Function-1705" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_build_array(VARIADIC "any")
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_build_array$function$
;]]></string>
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="json_build_array" id="Function-20ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_build_array()
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_build_array_noargs$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="json_build_object" id="Function-6c6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_build_object(VARIADIC "any")
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_build_object$function$
;]]></string>
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="json_build_object" id="Function-1064" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_build_object()
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_build_object_noargs$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="json_each" id="Function-16cd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_each(from_json json, OUT key text, OUT value json)
 RETURNS SETOF record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$json_each$function$
;]]></string>
			<input_param name="from_json" jt="-1" type="json" inOut="1" />
			<input_param name="key" jt="-1" type="text" inOut="3" />
			<input_param name="value" jt="-1" type="json" inOut="3" />
		</function>
		<function name="json_each_text" id="Function-201e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_each_text(from_json json, OUT key text, OUT value text)
 RETURNS SETOF record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$json_each_text$function$
;]]></string>
			<input_param name="from_json" jt="-1" type="json" inOut="1" />
			<input_param name="key" jt="-1" type="text" inOut="3" />
			<input_param name="value" jt="-1" type="text" inOut="3" />
		</function>
		<function name="json_extract_path" id="Function-1fb0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_extract_path(from_json json, VARIADIC path_elems text[])
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_extract_path$function$
;]]></string>
			<input_param name="from_json" jt="-1" type="json" inOut="1" />
			<input_param name="path_elems" jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="json_extract_path_text" id="Function-2194" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_extract_path_text(from_json json, VARIADIC path_elems text[])
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_extract_path_text$function$
;]]></string>
			<input_param name="from_json" jt="-1" type="json" inOut="1" />
			<input_param name="path_elems" jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="json_in" id="Function-803" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_in(cstring)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="json_object" id="Function-2285" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_object(text[])
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_object$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="json_object" id="Function-1d74" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_object(text[], text[])
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_object_two_arg$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="json_object_agg_finalfn" id="Function-24ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_object_agg_finalfn(internal)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$json_object_agg_finalfn$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="json_object_agg_transfn" id="Function-148c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_object_agg_transfn(internal, "any", "any")
 RETURNS internal
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_object_agg_transfn$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="json_object_field" id="Function-268d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_object_field(from_json json, field_name text)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_object_field$function$
;]]></string>
			<input_param name="from_json" jt="-1" type="json" inOut="1" />
			<input_param name="field_name" jt="-1" type="text" inOut="1" />
		</function>
		<function name="json_object_field_text" id="Function-1e64" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_object_field_text(from_json json, field_name text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_object_field_text$function$
;]]></string>
			<input_param name="from_json" jt="-1" type="json" inOut="1" />
			<input_param name="field_name" jt="-1" type="text" inOut="1" />
		</function>
		<function name="json_object_keys" id="Function-25c2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_object_keys(json)
 RETURNS SETOF text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$json_object_keys$function$
;]]></string>
			<input_param jt="-1" type="json" inOut="1" />
		</function>
		<function name="json_out" id="Function-2125" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_out(json)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_out$function$
;]]></string>
			<input_param jt="-1" type="json" inOut="1" />
		</function>
		<function name="json_populate_record" id="Function-108f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_populate_record(base anyelement, from_json json, use_json_as_text boolean DEFAULT false)
 RETURNS anyelement
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_populate_record$function$
;]]></string>
			<input_param name="base" jt="-1" type="anyelement" inOut="1" />
			<input_param name="from_json" jt="-1" type="json" inOut="1" />
			<input_param name="use_json_as_text" jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="json_populate_recordset" id="Function-11c3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_populate_recordset(base anyelement, from_json json, use_json_as_text boolean DEFAULT false)
 RETURNS SETOF anyelement
 LANGUAGE internal
 STABLE PARALLEL SAFE ROWS 100
AS $function$json_populate_recordset$function$
;]]></string>
			<input_param name="base" jt="-1" type="anyelement" inOut="1" />
			<input_param name="from_json" jt="-1" type="json" inOut="1" />
			<input_param name="use_json_as_text" jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="json_recv" id="Function-20ae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_recv(internal)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="json_send" id="Function-2062" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_send(json)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_send$function$
;]]></string>
			<input_param jt="-1" type="json" inOut="1" />
		</function>
		<function name="json_strip_nulls" id="Function-e06" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_strip_nulls(json)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_strip_nulls$function$
;]]></string>
			<input_param jt="-1" type="json" inOut="1" />
		</function>
		<function name="json_to_record" id="Function-6e9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_to_record(json)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$json_to_record$function$
;]]></string>
			<input_param jt="-1" type="json" inOut="1" />
		</function>
		<function name="json_to_recordset" id="Function-2474" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_to_recordset(json)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE ROWS 100
AS $function$json_to_recordset$function$
;]]></string>
			<input_param jt="-1" type="json" inOut="1" />
		</function>
		<function name="json_to_tsvector" id="Function-4e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_to_tsvector(json, jsonb)
 RETURNS tsvector
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$json_to_tsvector$function$
;]]></string>
			<input_param jt="-1" type="json" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="json_to_tsvector" id="Function-bd7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_to_tsvector(regconfig, json, jsonb)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$json_to_tsvector_byid$function$
;]]></string>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="json" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="json_typeof" id="Function-237" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_typeof(json)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_typeof$function$
;]]></string>
			<input_param jt="-1" type="json" inOut="1" />
		</function>
		<function name="jsonb_agg_finalfn" id="Function-935" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_agg_finalfn(internal)
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_agg_finalfn$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="jsonb_agg_transfn" id="Function-cc6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_agg_transfn(internal, anyelement)
 RETURNS internal
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_agg_transfn$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="anyelement" inOut="1" />
		</function>
		<function name="jsonb_array_element" id="Function-5c3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_array_element(from_json jsonb, element_index integer)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_array_element$function$
;]]></string>
			<input_param name="from_json" jt="-1" type="jsonb" inOut="1" />
			<input_param name="element_index" jt="-1" type="integer" inOut="1" />
		</function>
		<function name="jsonb_array_element_text" id="Function-19c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_array_element_text(from_json jsonb, element_index integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_array_element_text$function$
;]]></string>
			<input_param name="from_json" jt="-1" type="jsonb" inOut="1" />
			<input_param name="element_index" jt="-1" type="integer" inOut="1" />
		</function>
		<function name="jsonb_array_elements" id="Function-2318" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_array_elements(from_json jsonb, OUT value jsonb)
 RETURNS SETOF jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$jsonb_array_elements$function$
;]]></string>
			<input_param name="from_json" jt="-1" type="jsonb" inOut="1" />
			<input_param name="value" jt="-1" type="jsonb" inOut="3" />
		</function>
		<function name="jsonb_array_elements_text" id="Function-1581" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_array_elements_text(from_json jsonb, OUT value text)
 RETURNS SETOF text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$jsonb_array_elements_text$function$
;]]></string>
			<input_param name="from_json" jt="-1" type="jsonb" inOut="1" />
			<input_param name="value" jt="-1" type="text" inOut="3" />
		</function>
		<function name="jsonb_array_length" id="Function-15ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_array_length(jsonb)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_array_length$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonb_build_array" id="Function-1e46" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_build_array(VARIADIC "any")
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_build_array$function$
;]]></string>
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="jsonb_build_array" id="Function-2546" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_build_array()
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_build_array_noargs$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="jsonb_build_object" id="Function-8d1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_build_object(VARIADIC "any")
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_build_object$function$
;]]></string>
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="jsonb_build_object" id="Function-2421" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_build_object()
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_build_object_noargs$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="jsonb_cmp" id="Function-26a7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_cmp(jsonb, jsonb)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_cmp$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonb_concat" id="Function-773" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_concat(jsonb, jsonb)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_concat$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonb_contained" id="Function-19d9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_contained(jsonb, jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_contained$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonb_contains" id="Function-24d5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_contains(jsonb, jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_contains$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonb_delete" id="Function-be1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_delete(jsonb, text)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_delete$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="jsonb_delete" id="Function-2187" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_delete(jsonb, integer)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_delete_idx$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="jsonb_delete" id="Function-dab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_delete(from_json jsonb, VARIADIC path_elems text[])
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_delete_array$function$
;]]></string>
			<input_param name="from_json" jt="-1" type="jsonb" inOut="1" />
			<input_param name="path_elems" jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="jsonb_delete_path" id="Function-17fc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_delete_path(jsonb, text[])
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_delete_path$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="jsonb_each" id="Function-164a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_each(from_json jsonb, OUT key text, OUT value jsonb)
 RETURNS SETOF record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$jsonb_each$function$
;]]></string>
			<input_param name="from_json" jt="-1" type="jsonb" inOut="1" />
			<input_param name="key" jt="-1" type="text" inOut="3" />
			<input_param name="value" jt="-1" type="jsonb" inOut="3" />
		</function>
		<function name="jsonb_each_text" id="Function-859" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_each_text(from_json jsonb, OUT key text, OUT value text)
 RETURNS SETOF record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$jsonb_each_text$function$
;]]></string>
			<input_param name="from_json" jt="-1" type="jsonb" inOut="1" />
			<input_param name="key" jt="-1" type="text" inOut="3" />
			<input_param name="value" jt="-1" type="text" inOut="3" />
		</function>
		<function name="jsonb_eq" id="Function-1d6f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_eq(jsonb, jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_eq$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonb_exists" id="Function-24fe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_exists(jsonb, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_exists$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="jsonb_exists_all" id="Function-10c3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_exists_all(jsonb, text[])
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_exists_all$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="jsonb_exists_any" id="Function-1752" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_exists_any(jsonb, text[])
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_exists_any$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="jsonb_extract_path" id="Function-3de" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_extract_path(from_json jsonb, VARIADIC path_elems text[])
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_extract_path$function$
;]]></string>
			<input_param name="from_json" jt="-1" type="jsonb" inOut="1" />
			<input_param name="path_elems" jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="jsonb_extract_path_text" id="Function-11b8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_extract_path_text(from_json jsonb, VARIADIC path_elems text[])
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_extract_path_text$function$
;]]></string>
			<input_param name="from_json" jt="-1" type="jsonb" inOut="1" />
			<input_param name="path_elems" jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="jsonb_ge" id="Function-987" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_ge(jsonb, jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_ge$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonb_gt" id="Function-196e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_gt(jsonb, jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_gt$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonb_hash" id="Function-566" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_hash(jsonb)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_hash$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonb_hash_extended" id="Function-125f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_hash_extended(jsonb, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_hash_extended$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="jsonb_in" id="Function-1f13" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_in(cstring)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="jsonb_insert" id="Function-ed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_insert(jsonb_in jsonb, path text[], replacement jsonb, insert_after boolean DEFAULT false)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_insert$function$
;]]></string>
			<input_param name="jsonb_in" jt="-1" type="jsonb" inOut="1" />
			<input_param name="path" jt="-1" type="ARRAY" inOut="1" />
			<input_param name="replacement" jt="-1" type="jsonb" inOut="1" />
			<input_param name="insert_after" jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="jsonb_le" id="Function-158d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_le(jsonb, jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_le$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonb_lt" id="Function-225e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_lt(jsonb, jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_lt$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonb_ne" id="Function-296" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_ne(jsonb, jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_ne$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonb_object" id="Function-1f03" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_object(text[])
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_object$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="jsonb_object" id="Function-259f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_object(text[], text[])
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_object_two_arg$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="jsonb_object_agg_finalfn" id="Function-128b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_object_agg_finalfn(internal)
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_object_agg_finalfn$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="jsonb_object_agg_transfn" id="Function-12f8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_object_agg_transfn(internal, "any", "any")
 RETURNS internal
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_object_agg_transfn$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="jsonb_object_field" id="Function-1a81" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_object_field(from_json jsonb, field_name text)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_object_field$function$
;]]></string>
			<input_param name="from_json" jt="-1" type="jsonb" inOut="1" />
			<input_param name="field_name" jt="-1" type="text" inOut="1" />
		</function>
		<function name="jsonb_object_field_text" id="Function-22f5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_object_field_text(from_json jsonb, field_name text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_object_field_text$function$
;]]></string>
			<input_param name="from_json" jt="-1" type="jsonb" inOut="1" />
			<input_param name="field_name" jt="-1" type="text" inOut="1" />
		</function>
		<function name="jsonb_object_keys" id="Function-11db" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_object_keys(jsonb)
 RETURNS SETOF text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$jsonb_object_keys$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonb_out" id="Function-f7a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_out(jsonb)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_out$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonb_path_exists" id="Function-f99" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_path_exists(target jsonb, path jsonpath, vars jsonb DEFAULT '{}'::jsonb, silent boolean DEFAULT false)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_path_exists$function$
;]]></string>
			<input_param name="target" jt="-1" type="jsonb" inOut="1" />
			<input_param name="path" jt="-1" type="jsonpath" inOut="1" />
			<input_param name="vars" jt="-1" type="jsonb" inOut="1" />
			<input_param name="silent" jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="jsonb_path_exists_opr" id="Function-1505" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_path_exists_opr(jsonb, jsonpath)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_path_exists_opr$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="jsonpath" inOut="1" />
		</function>
		<function name="jsonb_path_match" id="Function-f85" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_path_match(target jsonb, path jsonpath, vars jsonb DEFAULT '{}'::jsonb, silent boolean DEFAULT false)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_path_match$function$
;]]></string>
			<input_param name="target" jt="-1" type="jsonb" inOut="1" />
			<input_param name="path" jt="-1" type="jsonpath" inOut="1" />
			<input_param name="vars" jt="-1" type="jsonb" inOut="1" />
			<input_param name="silent" jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="jsonb_path_match_opr" id="Function-40" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_path_match_opr(jsonb, jsonpath)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_path_match_opr$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="jsonpath" inOut="1" />
		</function>
		<function name="jsonb_path_query" id="Function-23b8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_path_query(target jsonb, path jsonpath, vars jsonb DEFAULT '{}'::jsonb, silent boolean DEFAULT false)
 RETURNS SETOF jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_path_query$function$
;]]></string>
			<input_param name="target" jt="-1" type="jsonb" inOut="1" />
			<input_param name="path" jt="-1" type="jsonpath" inOut="1" />
			<input_param name="vars" jt="-1" type="jsonb" inOut="1" />
			<input_param name="silent" jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="jsonb_path_query_array" id="Function-25e2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_path_query_array(target jsonb, path jsonpath, vars jsonb DEFAULT '{}'::jsonb, silent boolean DEFAULT false)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_path_query_array$function$
;]]></string>
			<input_param name="target" jt="-1" type="jsonb" inOut="1" />
			<input_param name="path" jt="-1" type="jsonpath" inOut="1" />
			<input_param name="vars" jt="-1" type="jsonb" inOut="1" />
			<input_param name="silent" jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="jsonb_path_query_first" id="Function-342" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_path_query_first(target jsonb, path jsonpath, vars jsonb DEFAULT '{}'::jsonb, silent boolean DEFAULT false)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_path_query_first$function$
;]]></string>
			<input_param name="target" jt="-1" type="jsonb" inOut="1" />
			<input_param name="path" jt="-1" type="jsonpath" inOut="1" />
			<input_param name="vars" jt="-1" type="jsonb" inOut="1" />
			<input_param name="silent" jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="jsonb_populate_record" id="Function-74e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_populate_record(anyelement, jsonb)
 RETURNS anyelement
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_populate_record$function$
;]]></string>
			<input_param jt="-1" type="anyelement" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonb_populate_recordset" id="Function-26ea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_populate_recordset(anyelement, jsonb)
 RETURNS SETOF anyelement
 LANGUAGE internal
 STABLE PARALLEL SAFE ROWS 100
AS $function$jsonb_populate_recordset$function$
;]]></string>
			<input_param jt="-1" type="anyelement" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonb_pretty" id="Function-149d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_pretty(jsonb)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_pretty$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonb_recv" id="Function-34d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_recv(internal)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="jsonb_send" id="Function-359" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_send(jsonb)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_send$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonb_set" id="Function-1456" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_set(jsonb_in jsonb, path text[], replacement jsonb, create_if_missing boolean DEFAULT true)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_set$function$
;]]></string>
			<input_param name="jsonb_in" jt="-1" type="jsonb" inOut="1" />
			<input_param name="path" jt="-1" type="ARRAY" inOut="1" />
			<input_param name="replacement" jt="-1" type="jsonb" inOut="1" />
			<input_param name="create_if_missing" jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="jsonb_strip_nulls" id="Function-207a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_strip_nulls(jsonb)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_strip_nulls$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonb_to_record" id="Function-1496" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_to_record(jsonb)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$jsonb_to_record$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonb_to_recordset" id="Function-1a95" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_to_recordset(jsonb)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE ROWS 100
AS $function$jsonb_to_recordset$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonb_to_tsvector" id="Function-25e9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_to_tsvector(jsonb, jsonb)
 RETURNS tsvector
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$jsonb_to_tsvector$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonb_to_tsvector" id="Function-b3d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_to_tsvector(regconfig, jsonb, jsonb)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$jsonb_to_tsvector_byid$function$
;]]></string>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonb_typeof" id="Function-14c9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_typeof(jsonb)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_typeof$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonpath_in" id="Function-30f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonpath_in(cstring)
 RETURNS jsonpath
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonpath_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="jsonpath_out" id="Function-13f0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonpath_out(jsonpath)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonpath_out$function$
;]]></string>
			<input_param jt="-1" type="jsonpath" inOut="1" />
		</function>
		<function name="jsonpath_recv" id="Function-d84" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonpath_recv(internal)
 RETURNS jsonpath
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonpath_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="jsonpath_send" id="Function-22" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonpath_send(jsonpath)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonpath_send$function$
;]]></string>
			<input_param jt="-1" type="jsonpath" inOut="1" />
		</function>
		<function name="justify_days" id="Function-1658" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.justify_days(interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_justify_days$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="justify_hours" id="Function-1b2f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.justify_hours(interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_justify_hours$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="justify_interval" id="Function-6bb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.justify_interval(interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_justify_interval$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="koi8r_to_iso" id="Function-25b1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.koi8r_to_iso(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$koi8r_to_iso$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="koi8r_to_mic" id="Function-87b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.koi8r_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$koi8r_to_mic$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="koi8r_to_utf8" id="Function-6bb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.koi8r_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_cyrillic', $function$koi8r_to_utf8$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="koi8r_to_win1251" id="Function-150" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.koi8r_to_win1251(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$koi8r_to_win1251$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="koi8r_to_win866" id="Function-11b8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.koi8r_to_win866(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$koi8r_to_win866$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="koi8u_to_utf8" id="Function-2578" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.koi8u_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_cyrillic', $function$koi8u_to_utf8$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="lag" id="Function-205e" isSystem="false" params_known="n" >
			<string><![CDATA[create function lag window_lag;]]></string>
		</function>
		<function name="language_handler_in" id="Function-bbf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.language_handler_in(cstring)
 RETURNS language_handler
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$language_handler_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="language_handler_out" id="Function-1a1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.language_handler_out(language_handler)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$language_handler_out$function$
;]]></string>
			<input_param jt="-1" type="language_handler" inOut="1" />
		</function>
		<function name="last_value" id="Function-5f9" isSystem="false" params_known="n" >
			<string><![CDATA[create function last_value window_last_value;]]></string>
		</function>
		<function name="lastval" id="Function-1c93" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lastval()
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$lastval$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="latin1_to_mic" id="Function-19d1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.latin1_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/latin_and_mic', $function$latin1_to_mic$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="latin2_to_mic" id="Function-10f6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.latin2_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/latin2_and_win1250', $function$latin2_to_mic$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="latin2_to_win1250" id="Function-1936" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.latin2_to_win1250(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/latin2_and_win1250', $function$latin2_to_win1250$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="latin3_to_mic" id="Function-60c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.latin3_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/latin_and_mic', $function$latin3_to_mic$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="latin4_to_mic" id="Function-1356" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.latin4_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/latin_and_mic', $function$latin4_to_mic$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="lead" id="Function-892" isSystem="false" params_known="n" >
			<string><![CDATA[create function lead window_lead;]]></string>
		</function>
		<function name="left" id="Function-1278" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."left"(text, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_left$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="length" id="Function-575" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.length(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textlen$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="length" id="Function-1609" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.length(character)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpcharlen$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="length" id="Function-7ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.length(lseg)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_length$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="length" id="Function-1e6f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.length(path)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_length$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="length" id="Function-17c5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.length(bit)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitlength$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="length" id="Function-1e68" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.length(bytea, name)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$length_in_encoding$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="length" id="Function-d2a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.length(bytea)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteaoctetlen$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="length" id="Function-894" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.length(tsvector)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_length$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
		</function>
		<function name="like" id="Function-112b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."like"(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT textlike_support
AS $function$textlike$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="like" id="Function-48c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."like"(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT textlike_support
AS $function$namelike$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="like" id="Function-f97" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."like"(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT textlike_support
AS $function$bytealike$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="like_escape" id="Function-b6c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.like_escape(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$like_escape$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="like_escape" id="Function-1ba6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.like_escape(bytea, bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$like_escape_bytea$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="likejoinsel" id="Function-213a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.likejoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$likejoinsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="likesel" id="Function-1529" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.likesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$likesel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="line" id="Function-1a6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line(point, point)
 RETURNS line
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_construct_pp$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="line_distance" id="Function-20e7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_distance(line, line)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_distance$function$
;]]></string>
			<input_param jt="-1" type="line" inOut="1" />
			<input_param jt="-1" type="line" inOut="1" />
		</function>
		<function name="line_eq" id="Function-e3a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_eq(line, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_eq$function$
;]]></string>
			<input_param jt="-1" type="line" inOut="1" />
			<input_param jt="-1" type="line" inOut="1" />
		</function>
		<function name="line_horizontal" id="Function-6d7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_horizontal(line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_horizontal$function$
;]]></string>
			<input_param jt="-1" type="line" inOut="1" />
		</function>
		<function name="line_in" id="Function-24b3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_in(cstring)
 RETURNS line
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="line_interpt" id="Function-23c5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_interpt(line, line)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_interpt$function$
;]]></string>
			<input_param jt="-1" type="line" inOut="1" />
			<input_param jt="-1" type="line" inOut="1" />
		</function>
		<function name="line_intersect" id="Function-b79" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_intersect(line, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_intersect$function$
;]]></string>
			<input_param jt="-1" type="line" inOut="1" />
			<input_param jt="-1" type="line" inOut="1" />
		</function>
		<function name="line_out" id="Function-1670" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_out(line)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_out$function$
;]]></string>
			<input_param jt="-1" type="line" inOut="1" />
		</function>
		<function name="line_parallel" id="Function-3e4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_parallel(line, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_parallel$function$
;]]></string>
			<input_param jt="-1" type="line" inOut="1" />
			<input_param jt="-1" type="line" inOut="1" />
		</function>
		<function name="line_perp" id="Function-13fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_perp(line, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_perp$function$
;]]></string>
			<input_param jt="-1" type="line" inOut="1" />
			<input_param jt="-1" type="line" inOut="1" />
		</function>
		<function name="line_recv" id="Function-f0e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_recv(internal)
 RETURNS line
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="line_send" id="Function-2676" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_send(line)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_send$function$
;]]></string>
			<input_param jt="-1" type="line" inOut="1" />
		</function>
		<function name="line_vertical" id="Function-1fb9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_vertical(line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_vertical$function$
;]]></string>
			<input_param jt="-1" type="line" inOut="1" />
		</function>
		<function name="ln" id="Function-160f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ln(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dlog1$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="ln" id="Function-1030" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ln(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_ln$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="lo_close" id="Function-f8a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_close(integer)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lo_close$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="lo_creat" id="Function-17d9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_creat(integer)
 RETURNS oid
 LANGUAGE internal
 STRICT
AS $function$be_lo_creat$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="lo_create" id="Function-1106" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_create(oid)
 RETURNS oid
 LANGUAGE internal
 STRICT
AS $function$be_lo_create$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="lo_export" id="Function-2e7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_export(oid, text)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lo_export$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="lo_from_bytea" id="Function-11e7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_from_bytea(oid, bytea)
 RETURNS oid
 LANGUAGE internal
 STRICT
AS $function$be_lo_from_bytea$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="lo_get" id="Function-13a2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_get(oid)
 RETURNS bytea
 LANGUAGE internal
 STRICT
AS $function$be_lo_get$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="lo_get" id="Function-1990" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_get(oid, bigint, integer)
 RETURNS bytea
 LANGUAGE internal
 STRICT
AS $function$be_lo_get_fragment$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="lo_import" id="Function-13b7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_import(text)
 RETURNS oid
 LANGUAGE internal
 STRICT
AS $function$be_lo_import$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="lo_import" id="Function-237a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_import(text, oid)
 RETURNS oid
 LANGUAGE internal
 STRICT
AS $function$be_lo_import_with_oid$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="lo_lseek" id="Function-1ec3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_lseek(integer, integer, integer)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lo_lseek$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="lo_lseek64" id="Function-d2f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_lseek64(integer, bigint, integer)
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$be_lo_lseek64$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="lo_open" id="Function-16e2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_open(oid, integer)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lo_open$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="lo_put" id="Function-1183" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_put(oid, bigint, bytea)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$be_lo_put$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="lo_tell" id="Function-2420" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_tell(integer)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lo_tell$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="lo_tell64" id="Function-1bd5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_tell64(integer)
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$be_lo_tell64$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="lo_truncate" id="Function-67c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_truncate(integer, integer)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lo_truncate$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="lo_truncate64" id="Function-82b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_truncate64(integer, bigint)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lo_truncate64$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="lo_unlink" id="Function-1a2d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_unlink(oid)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lo_unlink$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="log" id="Function-1c3d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.log(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dlog10$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="log" id="Function-b20" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.log(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_log$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="log" id="Function-bb5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.log(numeric)
 RETURNS numeric
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.log(10, $1)$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="log10" id="Function-2515" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.log10(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dlog10$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="log10" id="Function-20b7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.log10(numeric)
 RETURNS numeric
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.log(10, $1)$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="loread" id="Function-23a3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.loread(integer, integer)
 RETURNS bytea
 LANGUAGE internal
 STRICT
AS $function$be_loread$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="lower" id="Function-216c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lower(anyrange)
 RETURNS anyelement
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_lower$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="lower" id="Function-498" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lower(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lower$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="lower_inc" id="Function-2049" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lower_inc(anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_lower_inc$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="lower_inf" id="Function-1294" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lower_inf(anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_lower_inf$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="lowrite" id="Function-1408" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lowrite(integer, bytea)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lowrite$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="lpad" id="Function-810" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lpad(text, integer, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lpad$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="lpad" id="Function-220f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lpad(text, integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.lpad($1, $2, ' ')$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="lseg" id="Function-19c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg(box)
 RETURNS lseg
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_diagonal$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="lseg" id="Function-25bf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg(point, point)
 RETURNS lseg
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_construct$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="lseg_center" id="Function-1cf2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_center(lseg)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_center$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="lseg_distance" id="Function-22e6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_distance(lseg, lseg)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_distance$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="lseg_eq" id="Function-1a07" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_eq(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$lseg_eq$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="lseg_ge" id="Function-454" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_ge(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$lseg_ge$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="lseg_gt" id="Function-2659" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_gt(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$lseg_gt$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="lseg_horizontal" id="Function-64b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_horizontal(lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_horizontal$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="lseg_in" id="Function-63b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_in(cstring)
 RETURNS lseg
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="lseg_interpt" id="Function-18c7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_interpt(lseg, lseg)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_interpt$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="lseg_intersect" id="Function-876" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_intersect(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_intersect$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="lseg_le" id="Function-208b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_le(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$lseg_le$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="lseg_length" id="Function-e89" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_length(lseg)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_length$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="lseg_lt" id="Function-2477" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_lt(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$lseg_lt$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="lseg_ne" id="Function-164c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_ne(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$lseg_ne$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="lseg_out" id="Function-1879" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_out(lseg)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_out$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="lseg_parallel" id="Function-130a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_parallel(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_parallel$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="lseg_perp" id="Function-b8e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_perp(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_perp$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="lseg_recv" id="Function-13" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_recv(internal)
 RETURNS lseg
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="lseg_send" id="Function-628" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_send(lseg)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_send$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="lseg_vertical" id="Function-1bbc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_vertical(lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_vertical$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="ltrim" id="Function-1581" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ltrim(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ltrim$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="ltrim" id="Function-1ba2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ltrim(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ltrim1$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="macaddr" id="Function-31c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr(macaddr8)
 RETURNS macaddr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8tomacaddr$function$
;]]></string>
			<input_param jt="-1" type="macaddr8" inOut="1" />
		</function>
		<function name="macaddr8" id="Function-ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8(macaddr)
 RETURNS macaddr8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddrtomacaddr8$function$
;]]></string>
			<input_param jt="-1" type="macaddr" inOut="1" />
		</function>
		<function name="macaddr8_and" id="Function-489" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_and(macaddr8, macaddr8)
 RETURNS macaddr8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_and$function$
;]]></string>
			<input_param jt="-1" type="macaddr8" inOut="1" />
			<input_param jt="-1" type="macaddr8" inOut="1" />
		</function>
		<function name="macaddr8_cmp" id="Function-2a0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_cmp(macaddr8, macaddr8)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr8_cmp$function$
;]]></string>
			<input_param jt="-1" type="macaddr8" inOut="1" />
			<input_param jt="-1" type="macaddr8" inOut="1" />
		</function>
		<function name="macaddr8_eq" id="Function-19cd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_eq(macaddr8, macaddr8)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr8_eq$function$
;]]></string>
			<input_param jt="-1" type="macaddr8" inOut="1" />
			<input_param jt="-1" type="macaddr8" inOut="1" />
		</function>
		<function name="macaddr8_ge" id="Function-b6b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_ge(macaddr8, macaddr8)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr8_ge$function$
;]]></string>
			<input_param jt="-1" type="macaddr8" inOut="1" />
			<input_param jt="-1" type="macaddr8" inOut="1" />
		</function>
		<function name="macaddr8_gt" id="Function-1ad6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_gt(macaddr8, macaddr8)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr8_gt$function$
;]]></string>
			<input_param jt="-1" type="macaddr8" inOut="1" />
			<input_param jt="-1" type="macaddr8" inOut="1" />
		</function>
		<function name="macaddr8_in" id="Function-1d6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_in(cstring)
 RETURNS macaddr8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="macaddr8_le" id="Function-1cdd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_le(macaddr8, macaddr8)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr8_le$function$
;]]></string>
			<input_param jt="-1" type="macaddr8" inOut="1" />
			<input_param jt="-1" type="macaddr8" inOut="1" />
		</function>
		<function name="macaddr8_lt" id="Function-936" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_lt(macaddr8, macaddr8)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr8_lt$function$
;]]></string>
			<input_param jt="-1" type="macaddr8" inOut="1" />
			<input_param jt="-1" type="macaddr8" inOut="1" />
		</function>
		<function name="macaddr8_ne" id="Function-2370" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_ne(macaddr8, macaddr8)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr8_ne$function$
;]]></string>
			<input_param jt="-1" type="macaddr8" inOut="1" />
			<input_param jt="-1" type="macaddr8" inOut="1" />
		</function>
		<function name="macaddr8_not" id="Function-2071" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_not(macaddr8)
 RETURNS macaddr8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_not$function$
;]]></string>
			<input_param jt="-1" type="macaddr8" inOut="1" />
		</function>
		<function name="macaddr8_or" id="Function-fb2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_or(macaddr8, macaddr8)
 RETURNS macaddr8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_or$function$
;]]></string>
			<input_param jt="-1" type="macaddr8" inOut="1" />
			<input_param jt="-1" type="macaddr8" inOut="1" />
		</function>
		<function name="macaddr8_out" id="Function-68a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_out(macaddr8)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_out$function$
;]]></string>
			<input_param jt="-1" type="macaddr8" inOut="1" />
		</function>
		<function name="macaddr8_recv" id="Function-29f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_recv(internal)
 RETURNS macaddr8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="macaddr8_send" id="Function-1668" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_send(macaddr8)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_send$function$
;]]></string>
			<input_param jt="-1" type="macaddr8" inOut="1" />
		</function>
		<function name="macaddr8_set7bit" id="Function-23c9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_set7bit(macaddr8)
 RETURNS macaddr8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_set7bit$function$
;]]></string>
			<input_param jt="-1" type="macaddr8" inOut="1" />
		</function>
		<function name="macaddr_and" id="Function-1551" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_and(macaddr, macaddr)
 RETURNS macaddr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_and$function$
;]]></string>
			<input_param jt="-1" type="macaddr" inOut="1" />
			<input_param jt="-1" type="macaddr" inOut="1" />
		</function>
		<function name="macaddr_cmp" id="Function-176e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_cmp(macaddr, macaddr)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr_cmp$function$
;]]></string>
			<input_param jt="-1" type="macaddr" inOut="1" />
			<input_param jt="-1" type="macaddr" inOut="1" />
		</function>
		<function name="macaddr_eq" id="Function-2ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_eq(macaddr, macaddr)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr_eq$function$
;]]></string>
			<input_param jt="-1" type="macaddr" inOut="1" />
			<input_param jt="-1" type="macaddr" inOut="1" />
		</function>
		<function name="macaddr_ge" id="Function-1055" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_ge(macaddr, macaddr)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr_ge$function$
;]]></string>
			<input_param jt="-1" type="macaddr" inOut="1" />
			<input_param jt="-1" type="macaddr" inOut="1" />
		</function>
		<function name="macaddr_gt" id="Function-1fee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_gt(macaddr, macaddr)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr_gt$function$
;]]></string>
			<input_param jt="-1" type="macaddr" inOut="1" />
			<input_param jt="-1" type="macaddr" inOut="1" />
		</function>
		<function name="macaddr_in" id="Function-26ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_in(cstring)
 RETURNS macaddr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="macaddr_le" id="Function-1cb8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_le(macaddr, macaddr)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr_le$function$
;]]></string>
			<input_param jt="-1" type="macaddr" inOut="1" />
			<input_param jt="-1" type="macaddr" inOut="1" />
		</function>
		<function name="macaddr_lt" id="Function-17df" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_lt(macaddr, macaddr)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr_lt$function$
;]]></string>
			<input_param jt="-1" type="macaddr" inOut="1" />
			<input_param jt="-1" type="macaddr" inOut="1" />
		</function>
		<function name="macaddr_ne" id="Function-cbc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_ne(macaddr, macaddr)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr_ne$function$
;]]></string>
			<input_param jt="-1" type="macaddr" inOut="1" />
			<input_param jt="-1" type="macaddr" inOut="1" />
		</function>
		<function name="macaddr_not" id="Function-152d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_not(macaddr)
 RETURNS macaddr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_not$function$
;]]></string>
			<input_param jt="-1" type="macaddr" inOut="1" />
		</function>
		<function name="macaddr_or" id="Function-1d87" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_or(macaddr, macaddr)
 RETURNS macaddr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_or$function$
;]]></string>
			<input_param jt="-1" type="macaddr" inOut="1" />
			<input_param jt="-1" type="macaddr" inOut="1" />
		</function>
		<function name="macaddr_out" id="Function-a22" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_out(macaddr)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_out$function$
;]]></string>
			<input_param jt="-1" type="macaddr" inOut="1" />
		</function>
		<function name="macaddr_recv" id="Function-1214" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_recv(internal)
 RETURNS macaddr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="macaddr_send" id="Function-21db" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_send(macaddr)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_send$function$
;]]></string>
			<input_param jt="-1" type="macaddr" inOut="1" />
		</function>
		<function name="macaddr_sortsupport" id="Function-1e79" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_sortsupport$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="make_date" id="Function-167e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.make_date(year integer, month integer, day integer)
 RETURNS date
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$make_date$function$
;]]></string>
			<input_param name="year" jt="-1" type="integer" inOut="1" />
			<input_param name="month" jt="-1" type="integer" inOut="1" />
			<input_param name="day" jt="-1" type="integer" inOut="1" />
		</function>
		<function name="make_interval" id="Function-1953" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.make_interval(years integer DEFAULT 0, months integer DEFAULT 0, weeks integer DEFAULT 0, days integer DEFAULT 0, hours integer DEFAULT 0, mins integer DEFAULT 0, secs double precision DEFAULT 0.0)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$make_interval$function$
;]]></string>
			<input_param name="years" jt="-1" type="integer" inOut="1" />
			<input_param name="months" jt="-1" type="integer" inOut="1" />
			<input_param name="weeks" jt="-1" type="integer" inOut="1" />
			<input_param name="days" jt="-1" type="integer" inOut="1" />
			<input_param name="hours" jt="-1" type="integer" inOut="1" />
			<input_param name="mins" jt="-1" type="integer" inOut="1" />
			<input_param name="secs" jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="make_time" id="Function-1309" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.make_time(hour integer, min integer, sec double precision)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$make_time$function$
;]]></string>
			<input_param name="hour" jt="-1" type="integer" inOut="1" />
			<input_param name="min" jt="-1" type="integer" inOut="1" />
			<input_param name="sec" jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="make_timestamp" id="Function-810" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.make_timestamp(year integer, month integer, mday integer, hour integer, min integer, sec double precision)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$make_timestamp$function$
;]]></string>
			<input_param name="year" jt="-1" type="integer" inOut="1" />
			<input_param name="month" jt="-1" type="integer" inOut="1" />
			<input_param name="mday" jt="-1" type="integer" inOut="1" />
			<input_param name="hour" jt="-1" type="integer" inOut="1" />
			<input_param name="min" jt="-1" type="integer" inOut="1" />
			<input_param name="sec" jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="make_timestamptz" id="Function-6fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.make_timestamptz(year integer, month integer, mday integer, hour integer, min integer, sec double precision)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$make_timestamptz$function$
;]]></string>
			<input_param name="year" jt="-1" type="integer" inOut="1" />
			<input_param name="month" jt="-1" type="integer" inOut="1" />
			<input_param name="mday" jt="-1" type="integer" inOut="1" />
			<input_param name="hour" jt="-1" type="integer" inOut="1" />
			<input_param name="min" jt="-1" type="integer" inOut="1" />
			<input_param name="sec" jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="make_timestamptz" id="Function-1b41" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.make_timestamptz(year integer, month integer, mday integer, hour integer, min integer, sec double precision, timezone text)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$make_timestamptz_at_timezone$function$
;]]></string>
			<input_param name="year" jt="-1" type="integer" inOut="1" />
			<input_param name="month" jt="-1" type="integer" inOut="1" />
			<input_param name="mday" jt="-1" type="integer" inOut="1" />
			<input_param name="hour" jt="-1" type="integer" inOut="1" />
			<input_param name="min" jt="-1" type="integer" inOut="1" />
			<input_param name="sec" jt="-1" type="double precision" inOut="1" />
			<input_param name="timezone" jt="-1" type="text" inOut="1" />
		</function>
		<function name="makeaclitem" id="Function-1d2c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.makeaclitem(oid, oid, text, boolean)
 RETURNS aclitem
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$makeaclitem$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="masklen" id="Function-1629" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.masklen(inet)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_masklen$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="md5" id="Function-1195" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.md5(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$md5_text$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="md5" id="Function-c76" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.md5(bytea)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$md5_bytea$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="mic_to_ascii" id="Function-bd7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_ascii(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/ascii_and_mic', $function$mic_to_ascii$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="mic_to_big5" id="Function-c79" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_big5(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_tw_and_big5', $function$mic_to_big5$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="mic_to_euc_cn" id="Function-81d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_euc_cn(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_cn_and_mic', $function$mic_to_euc_cn$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="mic_to_euc_jp" id="Function-169f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_euc_jp(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_jp_and_sjis', $function$mic_to_euc_jp$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="mic_to_euc_kr" id="Function-763" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_euc_kr(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_kr_and_mic', $function$mic_to_euc_kr$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="mic_to_euc_tw" id="Function-1ddc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_euc_tw(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_tw_and_big5', $function$mic_to_euc_tw$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="mic_to_iso" id="Function-1e2e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_iso(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$mic_to_iso$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="mic_to_koi8r" id="Function-2684" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_koi8r(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$mic_to_koi8r$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="mic_to_latin1" id="Function-1ae8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_latin1(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/latin_and_mic', $function$mic_to_latin1$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="mic_to_latin2" id="Function-1dc4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_latin2(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/latin2_and_win1250', $function$mic_to_latin2$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="mic_to_latin3" id="Function-282" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_latin3(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/latin_and_mic', $function$mic_to_latin3$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="mic_to_latin4" id="Function-2a3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_latin4(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/latin_and_mic', $function$mic_to_latin4$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="mic_to_sjis" id="Function-1d59" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_sjis(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_jp_and_sjis', $function$mic_to_sjis$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="mic_to_win1250" id="Function-d6b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_win1250(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/latin2_and_win1250', $function$mic_to_win1250$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="mic_to_win1251" id="Function-1748" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_win1251(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$mic_to_win1251$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="mic_to_win866" id="Function-1b2f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_win866(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$mic_to_win866$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="mod" id="Function-23c1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mod(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_mod$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="mod" id="Function-617" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mod(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2mod$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="mod" id="Function-d7a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mod(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4mod$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="mod" id="Function-1110" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mod(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8mod$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="mode_final" id="Function-2481" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mode_final(internal, anyelement)
 RETURNS anyelement
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$mode_final$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="anyelement" inOut="1" />
		</function>
		<function name="money" id="Function-21d0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.money(integer)
 RETURNS money
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$int4_cash$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="money" id="Function-d26" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.money(bigint)
 RETURNS money
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$int8_cash$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="money" id="Function-1aed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.money(numeric)
 RETURNS money
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$numeric_cash$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="mul_d_interval" id="Function-cb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mul_d_interval(double precision, interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$mul_d_interval$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="mxid_age" id="Function-5f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mxid_age(xid)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$mxid_age$function$
;]]></string>
			<input_param jt="-1" type="xid" inOut="1" />
		</function>
		<function name="name" id="Function-10f0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.name(character varying)
 RETURNS name
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_name$function$
;]]></string>
			<input_param jt="-1" type="character varying" inOut="1" />
		</function>
		<function name="name" id="Function-19fe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.name(text)
 RETURNS name
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_name$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="name" id="Function-21bb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.name(character)
 RETURNS name
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpchar_name$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="nameconcatoid" id="Function-22c4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameconcatoid(name, oid)
 RETURNS name
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$nameconcatoid$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="nameeq" id="Function-240e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameeq(name, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$nameeq$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="nameeqtext" id="Function-1bd7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameeqtext(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$nameeqtext$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="namege" id="Function-1553" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namege(name, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$namege$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="namegetext" id="Function-4cf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namegetext(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$namegetext$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="namegt" id="Function-175c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namegt(name, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$namegt$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="namegttext" id="Function-1820" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namegttext(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$namegttext$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="nameiclike" id="Function-21ac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameiclike(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT texticlike_support
AS $function$nameiclike$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="nameicnlike" id="Function-e1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameicnlike(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$nameicnlike$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="nameicregexeq" id="Function-848" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameicregexeq(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT texticregexeq_support
AS $function$nameicregexeq$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="nameicregexne" id="Function-1e3d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameicregexne(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$nameicregexne$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="namein" id="Function-dd7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namein(cstring)
 RETURNS name
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$namein$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="namele" id="Function-e8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namele(name, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$namele$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="nameletext" id="Function-211d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameletext(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$nameletext$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="namelike" id="Function-fa4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namelike(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT textlike_support
AS $function$namelike$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="namelt" id="Function-e21" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namelt(name, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$namelt$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="namelttext" id="Function-139a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namelttext(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$namelttext$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="namene" id="Function-15e1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namene(name, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$namene$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="namenetext" id="Function-1c4a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namenetext(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$namenetext$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="namenlike" id="Function-1f69" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namenlike(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$namenlike$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="nameout" id="Function-8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameout(name)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$nameout$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="namerecv" id="Function-208b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namerecv(internal)
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$namerecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="nameregexeq" id="Function-2270" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameregexeq(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT textregexeq_support
AS $function$nameregexeq$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="nameregexne" id="Function-1da0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameregexne(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$nameregexne$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="namesend" id="Function-1fa1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namesend(name)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$namesend$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="neqjoinsel" id="Function-1948" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.neqjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$neqjoinsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="neqsel" id="Function-2b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.neqsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$neqsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="netmask" id="Function-fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.netmask(inet)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_netmask$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="network" id="Function-678" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network(inet)
 RETURNS cidr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_network$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="network_cmp" id="Function-47a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_cmp(inet, inet)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$network_cmp$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="network_eq" id="Function-240c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_eq(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$network_eq$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="network_ge" id="Function-6af" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_ge(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$network_ge$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="network_gt" id="Function-69e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_gt(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$network_gt$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="network_larger" id="Function-bf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_larger(inet, inet)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_larger$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="network_le" id="Function-22bf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_le(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$network_le$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="network_lt" id="Function-1a67" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_lt(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$network_lt$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="network_ne" id="Function-228a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_ne(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$network_ne$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="network_overlap" id="Function-1d60" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_overlap(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_overlap$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="network_smaller" id="Function-1c81" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_smaller(inet, inet)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_smaller$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="network_sub" id="Function-949" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_sub(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT network_subset_support
AS $function$network_sub$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="network_subeq" id="Function-265b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_subeq(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT network_subset_support
AS $function$network_subeq$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="network_subset_support" id="Function-2f8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_subset_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_subset_support$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="network_sup" id="Function-2236" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_sup(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT network_subset_support
AS $function$network_sup$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="network_supeq" id="Function-269d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_supeq(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT network_subset_support
AS $function$network_supeq$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="networkjoinsel" id="Function-1c98" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.networkjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$networkjoinsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="networksel" id="Function-21cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.networksel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$networksel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="nextval" id="Function-1f78" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nextval(regclass)
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$nextval_oid$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
		</function>
		<function name="nlikejoinsel" id="Function-e47" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nlikejoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$nlikejoinsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="nlikesel" id="Function-39a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nlikesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$nlikesel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="notlike" id="Function-1904" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.notlike(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textnlike$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="notlike" id="Function-13fb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.notlike(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$namenlike$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="notlike" id="Function-12ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.notlike(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteanlike$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="now" id="Function-5e7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.now()
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$now$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="npoints" id="Function-1d9f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.npoints(path)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_npoints$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="npoints" id="Function-1af0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.npoints(polygon)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_npoints$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="nth_value" id="Function-1a16" isSystem="false" params_known="n" >
			<string><![CDATA[create function nth_value window_nth_value;]]></string>
		</function>
		<function name="ntile" id="Function-7c3" isSystem="false" params_known="n" >
			<string><![CDATA[create function ntile window_ntile;]]></string>
		</function>
		<function name="num_nonnulls" id="Function-767" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.num_nonnulls(VARIADIC "any")
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$pg_num_nonnulls$function$
;]]></string>
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="num_nulls" id="Function-232" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.num_nulls(VARIADIC "any")
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$pg_num_nulls$function$
;]]></string>
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="numeric" id="Function-172d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."numeric"(numeric, integer)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT numeric_support
AS $function$numeric$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="numeric" id="Function-18e1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."numeric"(integer)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4_numeric$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="numeric" id="Function-2622" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."numeric"(real)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4_numeric$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="numeric" id="Function-1362" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."numeric"(double precision)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_numeric$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="numeric" id="Function-123b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."numeric"(bigint)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8_numeric$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="numeric" id="Function-12ac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."numeric"(smallint)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2_numeric$function$
;]]></string>
			<input_param jt="-1" type="smallint" inOut="1" />
		</function>
		<function name="numeric" id="Function-9f7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."numeric"(jsonb)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_numeric$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="numeric" id="Function-91c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."numeric"(money)
 RETURNS numeric
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$cash_numeric$function$
;]]></string>
			<input_param jt="-1" type="money" inOut="1" />
		</function>
		<function name="numeric_abs" id="Function-1052" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_abs(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_abs$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_accum" id="Function-1274" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_accum(internal, numeric)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_accum$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_accum_inv" id="Function-20fb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_accum_inv(internal, numeric)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_accum_inv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_add" id="Function-e10" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_add(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_add$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_avg" id="Function-1c6e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_avg(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_avg$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="numeric_avg_accum" id="Function-1c55" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_avg_accum(internal, numeric)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_avg_accum$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_avg_combine" id="Function-1b5f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_avg_combine(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_avg_combine$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="numeric_avg_deserialize" id="Function-12a5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_avg_deserialize(bytea, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_avg_deserialize$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="numeric_avg_serialize" id="Function-250b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_avg_serialize(internal)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_avg_serialize$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="numeric_cmp" id="Function-25df" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_cmp(numeric, numeric)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_cmp$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_combine" id="Function-f89" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_combine(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_combine$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="numeric_deserialize" id="Function-1fc9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_deserialize(bytea, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_deserialize$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="numeric_div" id="Function-89e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_div(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_div$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_div_trunc" id="Function-181a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_div_trunc(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_div_trunc$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_eq" id="Function-1422" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_eq(numeric, numeric)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_eq$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_exp" id="Function-975" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_exp(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_exp$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_fac" id="Function-7de" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_fac(bigint)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_fac$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="numeric_ge" id="Function-1c6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_ge(numeric, numeric)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_ge$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_gt" id="Function-1dd7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_gt(numeric, numeric)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_gt$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_in" id="Function-23cf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_in(cstring, oid, integer)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="numeric_inc" id="Function-39e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_inc(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_inc$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_larger" id="Function-2114" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_larger(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_larger$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_le" id="Function-bb7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_le(numeric, numeric)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_le$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_ln" id="Function-dba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_ln(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_ln$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_log" id="Function-24e7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_log(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_log$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_lt" id="Function-24a1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_lt(numeric, numeric)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_lt$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_mod" id="Function-d61" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_mod(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_mod$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_mul" id="Function-460" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_mul(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_mul$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_ne" id="Function-1ce2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_ne(numeric, numeric)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_ne$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_out" id="Function-a77" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_out(numeric)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_out$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_poly_avg" id="Function-1af9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_avg(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_poly_avg$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="numeric_poly_combine" id="Function-1068" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_combine(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_poly_combine$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="numeric_poly_deserialize" id="Function-f54" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_deserialize(bytea, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_poly_deserialize$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="numeric_poly_serialize" id="Function-1cbc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_serialize(internal)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_poly_serialize$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="numeric_poly_stddev_pop" id="Function-f83" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_stddev_pop(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_poly_stddev_pop$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="numeric_poly_stddev_samp" id="Function-123c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_stddev_samp(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_poly_stddev_samp$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="numeric_poly_sum" id="Function-1d30" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_sum(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_poly_sum$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="numeric_poly_var_pop" id="Function-c54" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_var_pop(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_poly_var_pop$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="numeric_poly_var_samp" id="Function-bbe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_var_samp(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_poly_var_samp$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="numeric_power" id="Function-1e96" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_power(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_power$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_recv" id="Function-205e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_recv(internal, oid, integer)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="numeric_send" id="Function-d10" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_send(numeric)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_send$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_serialize" id="Function-cbe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_serialize(internal)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_serialize$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="numeric_smaller" id="Function-1673" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_smaller(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_smaller$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_sortsupport" id="Function-469" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_sortsupport$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="numeric_sqrt" id="Function-b77" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_sqrt(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_sqrt$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_stddev_pop" id="Function-12a2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_stddev_pop(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_stddev_pop$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="numeric_stddev_samp" id="Function-1542" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_stddev_samp(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_stddev_samp$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="numeric_sub" id="Function-d3d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_sub(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_sub$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_sum" id="Function-189f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_sum(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_sum$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="numeric_support" id="Function-84c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_support$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="numeric_uminus" id="Function-d70" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_uminus(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_uminus$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_uplus" id="Function-10d1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_uplus(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_uplus$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numeric_var_pop" id="Function-d16" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_var_pop(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_var_pop$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="numeric_var_samp" id="Function-12b3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_var_samp(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_var_samp$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="numerictypmodin" id="Function-12c5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numerictypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numerictypmodin$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="numerictypmodout" id="Function-10d0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numerictypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numerictypmodout$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="numnode" id="Function-f4f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numnode(tsquery)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_numnode$function$
;]]></string>
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="numrange" id="Function-6e3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numrange(numeric, numeric)
 RETURNS numrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor2$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numrange" id="Function-26f9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numrange(numeric, numeric, text)
 RETURNS numrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor3$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="numrange_subdiff" id="Function-2556" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numrange_subdiff(numeric, numeric)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numrange_subdiff$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="obj_description" id="Function-156e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.obj_description(oid, name)
 RETURNS text
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT
AS $function$select description from pg_catalog.pg_description where objoid = $1 and classoid = (select oid from pg_catalog.pg_class where relname = $2 and relnamespace = 11) and objsubid = 0$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="obj_description" id="Function-17bf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.obj_description(oid)
 RETURNS text
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT
AS $function$select description from pg_catalog.pg_description where objoid = $1 and objsubid = 0$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="octet_length" id="Function-227b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.octet_length(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textoctetlen$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="octet_length" id="Function-1393" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.octet_length(character)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpcharoctetlen$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="octet_length" id="Function-169f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.octet_length(bit)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitoctetlength$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="octet_length" id="Function-10eb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.octet_length(bytea)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteaoctetlen$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="oid" id="Function-b4d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oid(bigint)
 RETURNS oid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$i8tooid$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="oideq" id="Function-1b9b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oideq(oid, oid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oideq$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="oidge" id="Function-1695" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidge(oid, oid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidge$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="oidgt" id="Function-177f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidgt(oid, oid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidgt$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="oidin" id="Function-278" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidin(cstring)
 RETURNS oid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidin$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="oidlarger" id="Function-2690" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidlarger(oid, oid)
 RETURNS oid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidlarger$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="oidle" id="Function-13c6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidle(oid, oid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidle$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="oidlt" id="Function-1f1d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidlt(oid, oid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidlt$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="oidne" id="Function-755" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidne(oid, oid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidne$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="oidout" id="Function-76" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidout(oid)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidout$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="oidrecv" id="Function-f94" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidrecv(internal)
 RETURNS oid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidrecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="oidsend" id="Function-1394" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidsend(oid)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidsend$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="oidsmaller" id="Function-3f1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidsmaller(oid, oid)
 RETURNS oid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidsmaller$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="oidvectoreq" id="Function-36e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectoreq(oidvector, oidvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidvectoreq$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="oidvectorge" id="Function-1a6f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorge(oidvector, oidvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidvectorge$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="oidvectorgt" id="Function-16f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorgt(oidvector, oidvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidvectorgt$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="oidvectorin" id="Function-14ea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorin(cstring)
 RETURNS oidvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidvectorin$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="oidvectorle" id="Function-680" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorle(oidvector, oidvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidvectorle$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="oidvectorlt" id="Function-1cf6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorlt(oidvector, oidvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidvectorlt$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="oidvectorne" id="Function-5d1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorne(oidvector, oidvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidvectorne$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="oidvectorout" id="Function-1246" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorout(oidvector)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidvectorout$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="oidvectorrecv" id="Function-16a0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorrecv(internal)
 RETURNS oidvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidvectorrecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="oidvectorsend" id="Function-16" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorsend(oidvector)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidvectorsend$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="oidvectortypes" id="Function-1096" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectortypes(oidvector)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$oidvectortypes$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="on_pb" id="Function-2483" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.on_pb(point, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$on_pb$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="on_pl" id="Function-421" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.on_pl(point, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$on_pl$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="line" inOut="1" />
		</function>
		<function name="on_ppath" id="Function-18d5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.on_ppath(point, path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$on_ppath$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="on_ps" id="Function-2172" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.on_ps(point, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$on_ps$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="on_sb" id="Function-2326" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.on_sb(lseg, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$on_sb$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="on_sl" id="Function-114" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.on_sl(lseg, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$on_sl$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
			<input_param jt="-1" type="line" inOut="1" />
		</function>
		<function name="opaque_in" id="Function-204a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.opaque_in(cstring)
 RETURNS opaque
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$opaque_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="opaque_out" id="Function-1683" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.opaque_out(opaque)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$opaque_out$function$
;]]></string>
			<input_param jt="-1" type="opaque" inOut="1" />
		</function>
		<function name="ordered_set_transition" id="Function-e38" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ordered_set_transition(internal, "any")
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$ordered_set_transition$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="ordered_set_transition_multi" id="Function-a05" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ordered_set_transition_multi(internal, VARIADIC "any")
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$ordered_set_transition_multi$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="overlaps" id="Function-608" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(time with time zone, time with time zone, time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$overlaps_timetz$function$
;]]></string>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="overlaps" id="Function-13a6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$overlaps_timestamp$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="overlaps" id="Function-13eb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(timestamp with time zone, interval, timestamp with time zone, interval)
 RETURNS boolean
 LANGUAGE sql
 STABLE PARALLEL SAFE COST 1
AS $function$select ($1, ($1 + $2)) overlaps ($3, ($3 + $4))$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="overlaps" id="Function-48" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(timestamp with time zone, timestamp with time zone, timestamp with time zone, interval)
 RETURNS boolean
 LANGUAGE sql
 STABLE PARALLEL SAFE COST 1
AS $function$select ($1, $2) overlaps ($3, ($3 + $4))$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="overlaps" id="Function-21c5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(timestamp with time zone, interval, timestamp with time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE sql
 STABLE PARALLEL SAFE COST 1
AS $function$select ($1, ($1 + $2)) overlaps ($3, $4)$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="overlaps" id="Function-261e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(time without time zone, time without time zone, time without time zone, time without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$overlaps_time$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="time without time zone" inOut="1" />
		</function>
		<function name="overlaps" id="Function-aeb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(time without time zone, interval, time without time zone, interval)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE COST 1
AS $function$select ($1, ($1 + $2)) overlaps ($3, ($3 + $4))$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="overlaps" id="Function-542" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(time without time zone, time without time zone, time without time zone, interval)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE COST 1
AS $function$select ($1, $2) overlaps ($3, ($3 + $4))$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="overlaps" id="Function-252" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(time without time zone, interval, time without time zone, time without time zone)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE COST 1
AS $function$select ($1, ($1 + $2)) overlaps ($3, $4)$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="time without time zone" inOut="1" />
		</function>
		<function name="overlaps" id="Function-c7b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$overlaps_timestamp$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="overlaps" id="Function-252d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(timestamp without time zone, interval, timestamp without time zone, interval)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE COST 1
AS $function$select ($1, ($1 + $2)) overlaps ($3, ($3 + $4))$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="overlaps" id="Function-1c54" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(timestamp without time zone, timestamp without time zone, timestamp without time zone, interval)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE COST 1
AS $function$select ($1, $2) overlaps ($3, ($3 + $4))$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="overlaps" id="Function-537" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(timestamp without time zone, interval, timestamp without time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE COST 1
AS $function$select ($1, ($1 + $2)) overlaps ($3, $4)$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="overlay" id="Function-796" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlay"(text, text, integer, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textoverlay$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="overlay" id="Function-19f2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlay"(text, text, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textoverlay_no_len$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="overlay" id="Function-1f39" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlay"(bit, bit, integer, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitoverlay$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="overlay" id="Function-957" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlay"(bit, bit, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitoverlay_no_len$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="overlay" id="Function-18d1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlay"(bytea, bytea, integer, integer)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteaoverlay$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="overlay" id="Function-262" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlay"(bytea, bytea, integer)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteaoverlay_no_len$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="parse_ident" id="Function-1f32" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.parse_ident(str text, strict boolean DEFAULT true)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$parse_ident$function$
;]]></string>
			<input_param name="str" jt="-1" type="text" inOut="1" />
			<input_param name="strict" jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="path" id="Function-ba8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path(polygon)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_path$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="path_add" id="Function-d16" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_add(path, path)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_add$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="path_add_pt" id="Function-ca4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_add_pt(path, point)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_add_pt$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="path_center" id="Function-12f0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_center(path)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_center$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="path_contain_pt" id="Function-1eb7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_contain_pt(path, point)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.on_ppath($2, $1)$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="path_distance" id="Function-17ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_distance(path, path)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_distance$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="path_div_pt" id="Function-aca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_div_pt(path, point)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_div_pt$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="path_in" id="Function-2003" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_in(cstring)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="path_inter" id="Function-1393" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_inter(path, path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_inter$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="path_length" id="Function-19b6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_length(path)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_length$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="path_mul_pt" id="Function-1ee6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_mul_pt(path, point)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_mul_pt$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="path_n_eq" id="Function-1e70" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_n_eq(path, path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_n_eq$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="path_n_ge" id="Function-1a89" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_n_ge(path, path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_n_ge$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="path_n_gt" id="Function-c9d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_n_gt(path, path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_n_gt$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="path_n_le" id="Function-26da" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_n_le(path, path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_n_le$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="path_n_lt" id="Function-b07" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_n_lt(path, path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_n_lt$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="path_npoints" id="Function-1491" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_npoints(path)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_npoints$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="path_out" id="Function-6f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_out(path)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_out$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="path_recv" id="Function-2097" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_recv(internal)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="path_send" id="Function-1bae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_send(path)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_send$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="path_sub_pt" id="Function-4c1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_sub_pt(path, point)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_sub_pt$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="pclose" id="Function-22d0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pclose(path)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_close$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="percent_rank" id="Function-f66" isSystem="false" params_known="n" >
			<string><![CDATA[create function percent_rank window_percent_rank;]]></string>
		</function>
		<function name="percent_rank_final" id="Function-1d24" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.percent_rank_final(internal, VARIADIC "any")
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$hypothetical_percent_rank_final$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="percentile_cont_float8_final" id="Function-218e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.percentile_cont_float8_final(internal, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$percentile_cont_float8_final$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="percentile_cont_float8_multi_final" id="Function-641" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.percentile_cont_float8_multi_final(internal, double precision[])
 RETURNS double precision[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$percentile_cont_float8_multi_final$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="percentile_cont_interval_final" id="Function-2062" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.percentile_cont_interval_final(internal, double precision)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$percentile_cont_interval_final$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="percentile_cont_interval_multi_final" id="Function-19d1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.percentile_cont_interval_multi_final(internal, double precision[])
 RETURNS interval[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$percentile_cont_interval_multi_final$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="percentile_disc_final" id="Function-bde" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.percentile_disc_final(internal, double precision, anyelement)
 RETURNS anyelement
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$percentile_disc_final$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="anyelement" inOut="1" />
		</function>
		<function name="percentile_disc_multi_final" id="Function-163a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.percentile_disc_multi_final(internal, double precision[], anyelement)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$percentile_disc_multi_final$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="anyelement" inOut="1" />
		</function>
		<function name="pg_advisory_lock" id="Function-665" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_lock(bigint)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_lock_int8$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_advisory_lock" id="Function-2b9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_lock(integer, integer)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_lock_int4$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_advisory_lock_shared" id="Function-120f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_lock_shared(bigint)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_lock_shared_int8$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_advisory_lock_shared" id="Function-5a2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_lock_shared(integer, integer)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_lock_shared_int4$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_advisory_unlock" id="Function-fd8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_unlock(bigint)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_unlock_int8$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_advisory_unlock" id="Function-22f0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_unlock(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_unlock_int4$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_advisory_unlock_all" id="Function-a2a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_unlock_all()
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_unlock_all$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_advisory_unlock_shared" id="Function-1146" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_unlock_shared(bigint)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_unlock_shared_int8$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_advisory_unlock_shared" id="Function-11ed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_unlock_shared(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_unlock_shared_int4$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_advisory_xact_lock" id="Function-1f15" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_xact_lock(bigint)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_xact_lock_int8$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_advisory_xact_lock" id="Function-af9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_xact_lock(integer, integer)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_xact_lock_int4$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_advisory_xact_lock_shared" id="Function-1d58" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_xact_lock_shared(bigint)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_xact_lock_shared_int8$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_advisory_xact_lock_shared" id="Function-1623" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_xact_lock_shared(integer, integer)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_xact_lock_shared_int4$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_available_extension_versions" id="Function-535" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_available_extension_versions(OUT name name, OUT version text, OUT superuser boolean, OUT relocatable boolean, OUT schema name, OUT requires name[], OUT comment text)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10 ROWS 100
AS $function$pg_available_extension_versions$function$
;]]></string>
			<input_param name="name" jt="-1" type="name" inOut="3" />
			<input_param name="version" jt="-1" type="text" inOut="3" />
			<input_param name="superuser" jt="-1" type="boolean" inOut="3" />
			<input_param name="relocatable" jt="-1" type="boolean" inOut="3" />
			<input_param name="schema" jt="-1" type="name" inOut="3" />
			<input_param name="requires" jt="-1" type="ARRAY" inOut="3" />
			<input_param name="comment" jt="-1" type="text" inOut="3" />
		</function>
		<function name="pg_available_extensions" id="Function-1468" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_available_extensions(OUT name name, OUT default_version text, OUT comment text)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10 ROWS 100
AS $function$pg_available_extensions$function$
;]]></string>
			<input_param name="name" jt="-1" type="name" inOut="3" />
			<input_param name="default_version" jt="-1" type="text" inOut="3" />
			<input_param name="comment" jt="-1" type="text" inOut="3" />
		</function>
		<function name="pg_backend_pid" id="Function-2573" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_backend_pid()
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_backend_pid$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_backup_start_time" id="Function-1175" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_backup_start_time()
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_backup_start_time$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_blocking_pids" id="Function-697" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_blocking_pids(integer)
 RETURNS integer[]
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_blocking_pids$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_cancel_backend" id="Function-1bcb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_cancel_backend(integer)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_cancel_backend$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_char_to_encoding" id="Function-2178" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_char_to_encoding(name)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$PG_char_to_encoding$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="pg_client_encoding" id="Function-aa6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_client_encoding()
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_client_encoding$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_collation_actual_version" id="Function-e36" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_collation_actual_version(oid)
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE STRICT COST 100
AS $function$pg_collation_actual_version$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_collation_for" id="Function-79e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_collation_for("any")
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$pg_collation_for$function$
;]]></string>
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="pg_collation_is_visible" id="Function-25fe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_collation_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_collation_is_visible$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_column_is_updatable" id="Function-1dc4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_column_is_updatable(regclass, smallint, boolean)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_column_is_updatable$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="pg_column_size" id="Function-1082" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_column_size("any")
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_column_size$function$
;]]></string>
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="pg_conf_load_time" id="Function-b3e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_conf_load_time()
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_conf_load_time$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_config" id="Function-1cc1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_config(OUT name text, OUT setting text)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT ROWS 23
AS $function$pg_config$function$
;]]></string>
			<input_param name="name" jt="-1" type="text" inOut="3" />
			<input_param name="setting" jt="-1" type="text" inOut="3" />
		</function>
		<function name="pg_control_checkpoint" id="Function-2673" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_control_checkpoint(OUT checkpoint_lsn pg_lsn, OUT redo_lsn pg_lsn, OUT redo_wal_file text, OUT timeline_id integer, OUT prev_timeline_id integer, OUT full_page_writes boolean, OUT next_xid text, OUT next_oid oid, OUT next_multixact_id xid, OUT next_multi_offset xid, OUT oldest_xid xid, OUT oldest_xid_dbid oid, OUT oldest_active_xid xid, OUT oldest_multi_xid xid, OUT oldest_multi_dbid oid, OUT oldest_commit_ts_xid xid, OUT newest_commit_ts_xid xid, OUT checkpoint_time timestamp with time zone)
 RETURNS record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_control_checkpoint$function$
;]]></string>
			<input_param name="checkpoint_lsn" jt="-1" type="pg_lsn" inOut="3" />
			<input_param name="redo_lsn" jt="-1" type="pg_lsn" inOut="3" />
			<input_param name="redo_wal_file" jt="-1" type="text" inOut="3" />
			<input_param name="timeline_id" jt="-1" type="integer" inOut="3" />
			<input_param name="prev_timeline_id" jt="-1" type="integer" inOut="3" />
			<input_param name="full_page_writes" jt="-1" type="boolean" inOut="3" />
			<input_param name="next_xid" jt="-1" type="text" inOut="3" />
			<input_param name="next_oid" jt="-1" type="oid" inOut="3" />
			<input_param name="next_multixact_id" jt="-1" type="xid" inOut="3" />
			<input_param name="next_multi_offset" jt="-1" type="xid" inOut="3" />
			<input_param name="oldest_xid" jt="-1" type="xid" inOut="3" />
			<input_param name="oldest_xid_dbid" jt="-1" type="oid" inOut="3" />
			<input_param name="oldest_active_xid" jt="-1" type="xid" inOut="3" />
			<input_param name="oldest_multi_xid" jt="-1" type="xid" inOut="3" />
			<input_param name="oldest_multi_dbid" jt="-1" type="oid" inOut="3" />
			<input_param name="oldest_commit_ts_xid" jt="-1" type="xid" inOut="3" />
			<input_param name="newest_commit_ts_xid" jt="-1" type="xid" inOut="3" />
			<input_param name="checkpoint_time" jt="-1" type="timestamp with time zone" inOut="3" />
		</function>
		<function name="pg_control_init" id="Function-f06" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_control_init(OUT max_data_alignment integer, OUT database_block_size integer, OUT blocks_per_segment integer, OUT wal_block_size integer, OUT bytes_per_wal_segment integer, OUT max_identifier_length integer, OUT max_index_columns integer, OUT max_toast_chunk_size integer, OUT large_object_chunk_size integer, OUT float4_pass_by_value boolean, OUT float8_pass_by_value boolean, OUT data_page_checksum_version integer)
 RETURNS record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_control_init$function$
;]]></string>
			<input_param name="max_data_alignment" jt="-1" type="integer" inOut="3" />
			<input_param name="database_block_size" jt="-1" type="integer" inOut="3" />
			<input_param name="blocks_per_segment" jt="-1" type="integer" inOut="3" />
			<input_param name="wal_block_size" jt="-1" type="integer" inOut="3" />
			<input_param name="bytes_per_wal_segment" jt="-1" type="integer" inOut="3" />
			<input_param name="max_identifier_length" jt="-1" type="integer" inOut="3" />
			<input_param name="max_index_columns" jt="-1" type="integer" inOut="3" />
			<input_param name="max_toast_chunk_size" jt="-1" type="integer" inOut="3" />
			<input_param name="large_object_chunk_size" jt="-1" type="integer" inOut="3" />
			<input_param name="float4_pass_by_value" jt="-1" type="boolean" inOut="3" />
			<input_param name="float8_pass_by_value" jt="-1" type="boolean" inOut="3" />
			<input_param name="data_page_checksum_version" jt="-1" type="integer" inOut="3" />
		</function>
		<function name="pg_control_recovery" id="Function-1e0b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_control_recovery(OUT min_recovery_end_lsn pg_lsn, OUT min_recovery_end_timeline integer, OUT backup_start_lsn pg_lsn, OUT backup_end_lsn pg_lsn, OUT end_of_backup_record_required boolean)
 RETURNS record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_control_recovery$function$
;]]></string>
			<input_param name="min_recovery_end_lsn" jt="-1" type="pg_lsn" inOut="3" />
			<input_param name="min_recovery_end_timeline" jt="-1" type="integer" inOut="3" />
			<input_param name="backup_start_lsn" jt="-1" type="pg_lsn" inOut="3" />
			<input_param name="backup_end_lsn" jt="-1" type="pg_lsn" inOut="3" />
			<input_param name="end_of_backup_record_required" jt="-1" type="boolean" inOut="3" />
		</function>
		<function name="pg_control_system" id="Function-426" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_control_system(OUT pg_control_version integer, OUT catalog_version_no integer, OUT system_identifier bigint, OUT pg_control_last_modified timestamp with time zone)
 RETURNS record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_control_system$function$
;]]></string>
			<input_param name="pg_control_version" jt="-1" type="integer" inOut="3" />
			<input_param name="catalog_version_no" jt="-1" type="integer" inOut="3" />
			<input_param name="system_identifier" jt="-1" type="bigint" inOut="3" />
			<input_param name="pg_control_last_modified" jt="-1" type="timestamp with time zone" inOut="3" />
		</function>
		<function name="pg_conversion_is_visible" id="Function-255e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_conversion_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_conversion_is_visible$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_copy_logical_replication_slot" id="Function-3f4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_copy_logical_replication_slot(src_slot_name name, dst_slot_name name, temporary boolean, plugin name, OUT slot_name name, OUT lsn pg_lsn)
 RETURNS record
 LANGUAGE internal
 STRICT
AS $function$pg_copy_logical_replication_slot_a$function$
;]]></string>
			<input_param name="src_slot_name" jt="-1" type="name" inOut="1" />
			<input_param name="dst_slot_name" jt="-1" type="name" inOut="1" />
			<input_param name="temporary" jt="-1" type="boolean" inOut="1" />
			<input_param name="plugin" jt="-1" type="name" inOut="1" />
			<input_param name="slot_name" jt="-1" type="name" inOut="3" />
			<input_param name="lsn" jt="-1" type="pg_lsn" inOut="3" />
		</function>
		<function name="pg_copy_logical_replication_slot" id="Function-6d6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_copy_logical_replication_slot(src_slot_name name, dst_slot_name name, temporary boolean, OUT slot_name name, OUT lsn pg_lsn)
 RETURNS record
 LANGUAGE internal
 STRICT
AS $function$pg_copy_logical_replication_slot_b$function$
;]]></string>
			<input_param name="src_slot_name" jt="-1" type="name" inOut="1" />
			<input_param name="dst_slot_name" jt="-1" type="name" inOut="1" />
			<input_param name="temporary" jt="-1" type="boolean" inOut="1" />
			<input_param name="slot_name" jt="-1" type="name" inOut="3" />
			<input_param name="lsn" jt="-1" type="pg_lsn" inOut="3" />
		</function>
		<function name="pg_copy_logical_replication_slot" id="Function-1fe4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_copy_logical_replication_slot(src_slot_name name, dst_slot_name name, OUT slot_name name, OUT lsn pg_lsn)
 RETURNS record
 LANGUAGE internal
 STRICT
AS $function$pg_copy_logical_replication_slot_c$function$
;]]></string>
			<input_param name="src_slot_name" jt="-1" type="name" inOut="1" />
			<input_param name="dst_slot_name" jt="-1" type="name" inOut="1" />
			<input_param name="slot_name" jt="-1" type="name" inOut="3" />
			<input_param name="lsn" jt="-1" type="pg_lsn" inOut="3" />
		</function>
		<function name="pg_copy_physical_replication_slot" id="Function-4fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_copy_physical_replication_slot(src_slot_name name, dst_slot_name name, temporary boolean, OUT slot_name name, OUT lsn pg_lsn)
 RETURNS record
 LANGUAGE internal
 STRICT
AS $function$pg_copy_physical_replication_slot_a$function$
;]]></string>
			<input_param name="src_slot_name" jt="-1" type="name" inOut="1" />
			<input_param name="dst_slot_name" jt="-1" type="name" inOut="1" />
			<input_param name="temporary" jt="-1" type="boolean" inOut="1" />
			<input_param name="slot_name" jt="-1" type="name" inOut="3" />
			<input_param name="lsn" jt="-1" type="pg_lsn" inOut="3" />
		</function>
		<function name="pg_copy_physical_replication_slot" id="Function-ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_copy_physical_replication_slot(src_slot_name name, dst_slot_name name, OUT slot_name name, OUT lsn pg_lsn)
 RETURNS record
 LANGUAGE internal
 STRICT
AS $function$pg_copy_physical_replication_slot_b$function$
;]]></string>
			<input_param name="src_slot_name" jt="-1" type="name" inOut="1" />
			<input_param name="dst_slot_name" jt="-1" type="name" inOut="1" />
			<input_param name="slot_name" jt="-1" type="name" inOut="3" />
			<input_param name="lsn" jt="-1" type="pg_lsn" inOut="3" />
		</function>
		<function name="pg_create_logical_replication_slot" id="Function-97b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_create_logical_replication_slot(slot_name name, plugin name, temporary boolean DEFAULT false, OUT slot_name name, OUT lsn pg_lsn)
 RETURNS record
 LANGUAGE internal
 STRICT
AS $function$pg_create_logical_replication_slot$function$
;]]></string>
			<input_param name="slot_name" jt="-1" type="name" inOut="1" />
			<input_param name="plugin" jt="-1" type="name" inOut="1" />
			<input_param name="temporary" jt="-1" type="boolean" inOut="1" />
			<input_param name="slot_name" jt="-1" type="name" inOut="3" />
			<input_param name="lsn" jt="-1" type="pg_lsn" inOut="3" />
		</function>
		<function name="pg_create_physical_replication_slot" id="Function-c60" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_create_physical_replication_slot(slot_name name, immediately_reserve boolean DEFAULT false, temporary boolean DEFAULT false, OUT slot_name name, OUT lsn pg_lsn)
 RETURNS record
 LANGUAGE internal
 STRICT
AS $function$pg_create_physical_replication_slot$function$
;]]></string>
			<input_param name="slot_name" jt="-1" type="name" inOut="1" />
			<input_param name="immediately_reserve" jt="-1" type="boolean" inOut="1" />
			<input_param name="temporary" jt="-1" type="boolean" inOut="1" />
			<input_param name="slot_name" jt="-1" type="name" inOut="3" />
			<input_param name="lsn" jt="-1" type="pg_lsn" inOut="3" />
		</function>
		<function name="pg_create_restore_point" id="Function-750" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_create_restore_point(text)
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_create_restore_point$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_current_logfile" id="Function-122b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_current_logfile()
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE
AS $function$pg_current_logfile$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_current_logfile" id="Function-1154" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_current_logfile(text)
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE
AS $function$pg_current_logfile_1arg$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_current_wal_flush_lsn" id="Function-1773" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_current_wal_flush_lsn()
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_current_wal_flush_lsn$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_current_wal_insert_lsn" id="Function-aa6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_current_wal_insert_lsn()
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_current_wal_insert_lsn$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_current_wal_lsn" id="Function-1939" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_current_wal_lsn()
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_current_wal_lsn$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_cursor" id="Function-e1e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_cursor(OUT name text, OUT statement text, OUT is_holdable boolean, OUT is_binary boolean, OUT is_scrollable boolean, OUT creation_time timestamp with time zone)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_cursor$function$
;]]></string>
			<input_param name="name" jt="-1" type="text" inOut="3" />
			<input_param name="statement" jt="-1" type="text" inOut="3" />
			<input_param name="is_holdable" jt="-1" type="boolean" inOut="3" />
			<input_param name="is_binary" jt="-1" type="boolean" inOut="3" />
			<input_param name="is_scrollable" jt="-1" type="boolean" inOut="3" />
			<input_param name="creation_time" jt="-1" type="timestamp with time zone" inOut="3" />
		</function>
		<function name="pg_database_size" id="Function-c8d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_database_size(name)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_database_size_name$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="pg_database_size" id="Function-1d10" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_database_size(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_database_size_oid$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_ddl_command_in" id="Function-18b2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ddl_command_in(cstring)
 RETURNS pg_ddl_command
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_ddl_command_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="pg_ddl_command_out" id="Function-9e9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ddl_command_out(pg_ddl_command)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_ddl_command_out$function$
;]]></string>
			<input_param jt="-1" type="pg_ddl_command" inOut="1" />
		</function>
		<function name="pg_ddl_command_recv" id="Function-149c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ddl_command_recv(internal)
 RETURNS pg_ddl_command
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_ddl_command_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="pg_ddl_command_send" id="Function-1e74" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ddl_command_send(pg_ddl_command)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_ddl_command_send$function$
;]]></string>
			<input_param jt="-1" type="pg_ddl_command" inOut="1" />
		</function>
		<function name="pg_dependencies_in" id="Function-1780" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_dependencies_in(cstring)
 RETURNS pg_dependencies
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_dependencies_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="pg_dependencies_out" id="Function-1e1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_dependencies_out(pg_dependencies)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_dependencies_out$function$
;]]></string>
			<input_param jt="-1" type="pg_dependencies" inOut="1" />
		</function>
		<function name="pg_dependencies_recv" id="Function-1af7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_dependencies_recv(internal)
 RETURNS pg_dependencies
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_dependencies_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="pg_dependencies_send" id="Function-1823" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_dependencies_send(pg_dependencies)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_dependencies_send$function$
;]]></string>
			<input_param jt="-1" type="pg_dependencies" inOut="1" />
		</function>
		<function name="pg_describe_object" id="Function-698" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_describe_object(oid, oid, integer)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_describe_object$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_drop_replication_slot" id="Function-1de4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_drop_replication_slot(name)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_drop_replication_slot$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="pg_encoding_max_length" id="Function-1179" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_encoding_max_length(integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_encoding_max_length_sql$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_encoding_to_char" id="Function-153a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_encoding_to_char(integer)
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$PG_encoding_to_char$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_event_trigger_ddl_commands" id="Function-107f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_event_trigger_ddl_commands(OUT classid oid, OUT objid oid, OUT objsubid integer, OUT command_tag text, OUT object_type text, OUT schema_name text, OUT object_identity text, OUT in_extension boolean, OUT command pg_ddl_command)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 10 ROWS 100
AS $function$pg_event_trigger_ddl_commands$function$
;]]></string>
			<input_param name="classid" jt="-1" type="oid" inOut="3" />
			<input_param name="objid" jt="-1" type="oid" inOut="3" />
			<input_param name="objsubid" jt="-1" type="integer" inOut="3" />
			<input_param name="command_tag" jt="-1" type="text" inOut="3" />
			<input_param name="object_type" jt="-1" type="text" inOut="3" />
			<input_param name="schema_name" jt="-1" type="text" inOut="3" />
			<input_param name="object_identity" jt="-1" type="text" inOut="3" />
			<input_param name="in_extension" jt="-1" type="boolean" inOut="3" />
			<input_param name="command" jt="-1" type="pg_ddl_command" inOut="3" />
		</function>
		<function name="pg_event_trigger_dropped_objects" id="Function-d21" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_event_trigger_dropped_objects(OUT classid oid, OUT objid oid, OUT objsubid integer, OUT original boolean, OUT normal boolean, OUT is_temporary boolean, OUT object_type text, OUT schema_name text, OUT object_name text, OUT object_identity text, OUT address_names text[], OUT address_args text[])
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 10 ROWS 100
AS $function$pg_event_trigger_dropped_objects$function$
;]]></string>
			<input_param name="classid" jt="-1" type="oid" inOut="3" />
			<input_param name="objid" jt="-1" type="oid" inOut="3" />
			<input_param name="objsubid" jt="-1" type="integer" inOut="3" />
			<input_param name="original" jt="-1" type="boolean" inOut="3" />
			<input_param name="normal" jt="-1" type="boolean" inOut="3" />
			<input_param name="is_temporary" jt="-1" type="boolean" inOut="3" />
			<input_param name="object_type" jt="-1" type="text" inOut="3" />
			<input_param name="schema_name" jt="-1" type="text" inOut="3" />
			<input_param name="object_name" jt="-1" type="text" inOut="3" />
			<input_param name="object_identity" jt="-1" type="text" inOut="3" />
			<input_param name="address_names" jt="-1" type="ARRAY" inOut="3" />
			<input_param name="address_args" jt="-1" type="ARRAY" inOut="3" />
		</function>
		<function name="pg_event_trigger_table_rewrite_oid" id="Function-2622" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_event_trigger_table_rewrite_oid(OUT oid oid)
 RETURNS oid
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_event_trigger_table_rewrite_oid$function$
;]]></string>
			<input_param name="oid" jt="-1" type="oid" inOut="3" />
		</function>
		<function name="pg_event_trigger_table_rewrite_reason" id="Function-d60" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_event_trigger_table_rewrite_reason()
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_event_trigger_table_rewrite_reason$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_export_snapshot" id="Function-180b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_export_snapshot()
 RETURNS text
 LANGUAGE internal
 STRICT
AS $function$pg_export_snapshot$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_extension_config_dump" id="Function-1304" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_extension_config_dump(regclass, text)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_extension_config_dump$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_extension_update_paths" id="Function-230d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_extension_update_paths(name name, OUT source text, OUT target text, OUT path text)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10 ROWS 100
AS $function$pg_extension_update_paths$function$
;]]></string>
			<input_param name="name" jt="-1" type="name" inOut="1" />
			<input_param name="source" jt="-1" type="text" inOut="3" />
			<input_param name="target" jt="-1" type="text" inOut="3" />
			<input_param name="path" jt="-1" type="text" inOut="3" />
		</function>
		<function name="pg_filenode_relation" id="Function-d4e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_filenode_relation(oid, oid)
 RETURNS regclass
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_filenode_relation$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_function_is_visible" id="Function-176" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_function_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_function_is_visible$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_get_constraintdef" id="Function-591" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_constraintdef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_constraintdef$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_get_constraintdef" id="Function-e9e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_constraintdef(oid, boolean)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_constraintdef_ext$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="pg_get_expr" id="Function-1d94" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_expr(pg_node_tree, oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_expr$function$
;]]></string>
			<input_param jt="-1" type="pg_node_tree" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_get_expr" id="Function-24ee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_expr(pg_node_tree, oid, boolean)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_expr_ext$function$
;]]></string>
			<input_param jt="-1" type="pg_node_tree" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="pg_get_function_arg_default" id="Function-26fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_function_arg_default(oid, integer)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_function_arg_default$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_get_function_arguments" id="Function-1e19" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_function_arguments(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_function_arguments$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_get_function_identity_arguments" id="Function-9a0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_function_identity_arguments(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_function_identity_arguments$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_get_function_result" id="Function-de6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_function_result(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_function_result$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_get_functiondef" id="Function-c72" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_functiondef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_functiondef$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_get_indexdef" id="Function-1ac7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_indexdef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_indexdef$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_get_indexdef" id="Function-8a3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_indexdef(oid, integer, boolean)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_indexdef_ext$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="pg_get_keywords" id="Function-1206" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_keywords(OUT word text, OUT catcode "char", OUT catdesc text)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10 ROWS 400
AS $function$pg_get_keywords$function$
;]]></string>
			<input_param name="word" jt="-1" type="text" inOut="3" />
			<input_param name="catcode" jt="-1" type="&quot;char&quot;" inOut="3" />
			<input_param name="catdesc" jt="-1" type="text" inOut="3" />
		</function>
		<function name="pg_get_multixact_members" id="Function-1135" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_multixact_members(multixid xid, OUT xid xid, OUT mode text)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_get_multixact_members$function$
;]]></string>
			<input_param name="multixid" jt="-1" type="xid" inOut="1" />
			<input_param name="xid" jt="-1" type="xid" inOut="3" />
			<input_param name="mode" jt="-1" type="text" inOut="3" />
		</function>
		<function name="pg_get_object_address" id="Function-894" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_object_address(type text, object_names text[], object_args text[], OUT classid oid, OUT objid oid, OUT objsubid integer)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_object_address$function$
;]]></string>
			<input_param name="type" jt="-1" type="text" inOut="1" />
			<input_param name="object_names" jt="-1" type="ARRAY" inOut="1" />
			<input_param name="object_args" jt="-1" type="ARRAY" inOut="1" />
			<input_param name="classid" jt="-1" type="oid" inOut="3" />
			<input_param name="objid" jt="-1" type="oid" inOut="3" />
			<input_param name="objsubid" jt="-1" type="integer" inOut="3" />
		</function>
		<function name="pg_get_partition_constraintdef" id="Function-2297" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_partition_constraintdef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_partition_constraintdef$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_get_partkeydef" id="Function-22eb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_partkeydef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_partkeydef$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_get_publication_tables" id="Function-6f3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_publication_tables(pubname text, OUT relid oid)
 RETURNS SETOF oid
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_publication_tables$function$
;]]></string>
			<input_param name="pubname" jt="-1" type="text" inOut="1" />
			<input_param name="relid" jt="-1" type="oid" inOut="3" />
		</function>
		<function name="pg_get_replica_identity_index" id="Function-1eb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_replica_identity_index(regclass)
 RETURNS regclass
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_get_replica_identity_index$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
		</function>
		<function name="pg_get_replication_slots" id="Function-2020" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_replication_slots(OUT slot_name name, OUT plugin name, OUT slot_type text, OUT datoid oid, OUT temporary boolean, OUT active boolean, OUT active_pid integer, OUT xmin xid, OUT catalog_xmin xid, OUT restart_lsn pg_lsn, OUT confirmed_flush_lsn pg_lsn)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE ROWS 10
AS $function$pg_get_replication_slots$function$
;]]></string>
			<input_param name="slot_name" jt="-1" type="name" inOut="3" />
			<input_param name="plugin" jt="-1" type="name" inOut="3" />
			<input_param name="slot_type" jt="-1" type="text" inOut="3" />
			<input_param name="datoid" jt="-1" type="oid" inOut="3" />
			<input_param name="temporary" jt="-1" type="boolean" inOut="3" />
			<input_param name="active" jt="-1" type="boolean" inOut="3" />
			<input_param name="active_pid" jt="-1" type="integer" inOut="3" />
			<input_param name="xmin" jt="-1" type="xid" inOut="3" />
			<input_param name="catalog_xmin" jt="-1" type="xid" inOut="3" />
			<input_param name="restart_lsn" jt="-1" type="pg_lsn" inOut="3" />
			<input_param name="confirmed_flush_lsn" jt="-1" type="pg_lsn" inOut="3" />
		</function>
		<function name="pg_get_ruledef" id="Function-2002" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_ruledef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_ruledef$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_get_ruledef" id="Function-1314" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_ruledef(oid, boolean)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_ruledef_ext$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="pg_get_serial_sequence" id="Function-731" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_serial_sequence(text, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_serial_sequence$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_get_statisticsobjdef" id="Function-19ee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_statisticsobjdef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_statisticsobjdef$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_get_triggerdef" id="Function-244a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_triggerdef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_triggerdef$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_get_triggerdef" id="Function-858" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_triggerdef(oid, boolean)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_triggerdef_ext$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="pg_get_userbyid" id="Function-d88" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_userbyid(oid)
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_userbyid$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_get_viewdef" id="Function-12df" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_viewdef(text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_get_viewdef_name$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_get_viewdef" id="Function-22b0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_viewdef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_get_viewdef$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_get_viewdef" id="Function-1675" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_viewdef(text, boolean)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_get_viewdef_name_ext$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="pg_get_viewdef" id="Function-164" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_viewdef(oid, boolean)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_get_viewdef_ext$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="pg_get_viewdef" id="Function-1dc6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_viewdef(oid, integer)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_get_viewdef_wrap$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_has_role" id="Function-49c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_has_role(name, name, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_has_role_name_name$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_has_role" id="Function-203" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_has_role(name, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_has_role_name_id$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_has_role" id="Function-1e88" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_has_role(oid, name, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_has_role_id_name$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_has_role" id="Function-13b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_has_role(oid, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_has_role_id_id$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_has_role" id="Function-1258" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_has_role(name, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_has_role_name$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_has_role" id="Function-32c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_has_role(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_has_role_id$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_hba_file_rules" id="Function-2352" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_hba_file_rules(OUT line_number integer, OUT type text, OUT database text[], OUT user_name text[], OUT address text, OUT netmask text, OUT auth_method text, OUT options text[], OUT error text)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_hba_file_rules$function$
;]]></string>
			<input_param name="line_number" jt="-1" type="integer" inOut="3" />
			<input_param name="type" jt="-1" type="text" inOut="3" />
			<input_param name="database" jt="-1" type="ARRAY" inOut="3" />
			<input_param name="user_name" jt="-1" type="ARRAY" inOut="3" />
			<input_param name="address" jt="-1" type="text" inOut="3" />
			<input_param name="netmask" jt="-1" type="text" inOut="3" />
			<input_param name="auth_method" jt="-1" type="text" inOut="3" />
			<input_param name="options" jt="-1" type="ARRAY" inOut="3" />
			<input_param name="error" jt="-1" type="text" inOut="3" />
		</function>
		<function name="pg_identify_object" id="Function-1b22" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_identify_object(classid oid, objid oid, objsubid integer, OUT type text, OUT schema text, OUT name text, OUT identity text)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_identify_object$function$
;]]></string>
			<input_param name="classid" jt="-1" type="oid" inOut="1" />
			<input_param name="objid" jt="-1" type="oid" inOut="1" />
			<input_param name="objsubid" jt="-1" type="integer" inOut="1" />
			<input_param name="type" jt="-1" type="text" inOut="3" />
			<input_param name="schema" jt="-1" type="text" inOut="3" />
			<input_param name="name" jt="-1" type="text" inOut="3" />
			<input_param name="identity" jt="-1" type="text" inOut="3" />
		</function>
		<function name="pg_identify_object_as_address" id="Function-13d6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_identify_object_as_address(classid oid, objid oid, objsubid integer, OUT type text, OUT object_names text[], OUT object_args text[])
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_identify_object_as_address$function$
;]]></string>
			<input_param name="classid" jt="-1" type="oid" inOut="1" />
			<input_param name="objid" jt="-1" type="oid" inOut="1" />
			<input_param name="objsubid" jt="-1" type="integer" inOut="1" />
			<input_param name="type" jt="-1" type="text" inOut="3" />
			<input_param name="object_names" jt="-1" type="ARRAY" inOut="3" />
			<input_param name="object_args" jt="-1" type="ARRAY" inOut="3" />
		</function>
		<function name="pg_import_system_collations" id="Function-8ae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_import_system_collations(regnamespace)
 RETURNS integer
 LANGUAGE internal
 STRICT COST 100
AS $function$pg_import_system_collations$function$
;]]></string>
			<input_param jt="-1" type="regnamespace" inOut="1" />
		</function>
		<function name="pg_index_column_has_property" id="Function-1364" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_index_column_has_property(regclass, integer, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_index_column_has_property$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_index_has_property" id="Function-839" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_index_has_property(regclass, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_index_has_property$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_indexam_has_property" id="Function-1799" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_indexam_has_property(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_indexam_has_property$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_indexam_progress_phasename" id="Function-a9d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_indexam_progress_phasename(oid, bigint)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_indexam_progress_phasename$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_indexes_size" id="Function-18bf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_indexes_size(regclass)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_indexes_size$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
		</function>
		<function name="pg_is_in_backup" id="Function-b7b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_is_in_backup()
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_is_in_backup$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_is_in_recovery" id="Function-322" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_is_in_recovery()
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_is_in_recovery$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_is_other_temp_schema" id="Function-11f3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_is_other_temp_schema(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_is_other_temp_schema$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_is_wal_replay_paused" id="Function-1fdb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_is_wal_replay_paused()
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_is_wal_replay_paused$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_isolation_test_session_is_blocked" id="Function-7ea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_isolation_test_session_is_blocked(integer, integer[])
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_isolation_test_session_is_blocked$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="pg_jit_available" id="Function-20ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_jit_available()
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_jit_available$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_last_committed_xact" id="Function-1f8f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_last_committed_xact(OUT xid xid, OUT "timestamp" timestamp with time zone)
 RETURNS record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_last_committed_xact$function$
;]]></string>
			<input_param name="xid" jt="-1" type="xid" inOut="3" />
			<input_param name="timestamp" jt="-1" type="timestamp with time zone" inOut="3" />
		</function>
		<function name="pg_last_wal_receive_lsn" id="Function-ba2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_last_wal_receive_lsn()
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_last_wal_receive_lsn$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_last_wal_replay_lsn" id="Function-17db" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_last_wal_replay_lsn()
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_last_wal_replay_lsn$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_last_xact_replay_timestamp" id="Function-980" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_last_xact_replay_timestamp()
 RETURNS timestamp with time zone
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_last_xact_replay_timestamp$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_listening_channels" id="Function-19ea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_listening_channels()
 RETURNS SETOF text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT ROWS 10
AS $function$pg_listening_channels$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_lock_status" id="Function-441" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lock_status(OUT locktype text, OUT database oid, OUT relation oid, OUT page integer, OUT tuple smallint, OUT virtualxid text, OUT transactionid xid, OUT classid oid, OUT objid oid, OUT objsubid smallint, OUT virtualtransaction text, OUT pid integer, OUT mode text, OUT granted boolean, OUT fastpath boolean)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_lock_status$function$
;]]></string>
			<input_param name="locktype" jt="-1" type="text" inOut="3" />
			<input_param name="database" jt="-1" type="oid" inOut="3" />
			<input_param name="relation" jt="-1" type="oid" inOut="3" />
			<input_param name="page" jt="-1" type="integer" inOut="3" />
			<input_param name="tuple" jt="-1" type="smallint" inOut="3" />
			<input_param name="virtualxid" jt="-1" type="text" inOut="3" />
			<input_param name="transactionid" jt="-1" type="xid" inOut="3" />
			<input_param name="classid" jt="-1" type="oid" inOut="3" />
			<input_param name="objid" jt="-1" type="oid" inOut="3" />
			<input_param name="objsubid" jt="-1" type="smallint" inOut="3" />
			<input_param name="virtualtransaction" jt="-1" type="text" inOut="3" />
			<input_param name="pid" jt="-1" type="integer" inOut="3" />
			<input_param name="mode" jt="-1" type="text" inOut="3" />
			<input_param name="granted" jt="-1" type="boolean" inOut="3" />
			<input_param name="fastpath" jt="-1" type="boolean" inOut="3" />
		</function>
		<function name="pg_logical_emit_message" id="Function-c5c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_logical_emit_message(boolean, text, text)
 RETURNS pg_lsn
 LANGUAGE internal
 STRICT
AS $function$pg_logical_emit_message_text$function$
;]]></string>
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_logical_emit_message" id="Function-1270" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_logical_emit_message(boolean, text, bytea)
 RETURNS pg_lsn
 LANGUAGE internal
 STRICT
AS $function$pg_logical_emit_message_bytea$function$
;]]></string>
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="pg_logical_slot_get_binary_changes" id="Function-1462" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_logical_slot_get_binary_changes(slot_name name, upto_lsn pg_lsn, upto_nchanges integer, VARIADIC options text[] DEFAULT '{}'::text[], OUT lsn pg_lsn, OUT xid xid, OUT data bytea)
 RETURNS SETOF record
 LANGUAGE internal
 COST 1000
AS $function$pg_logical_slot_get_binary_changes$function$
;]]></string>
			<input_param name="slot_name" jt="-1" type="name" inOut="1" />
			<input_param name="upto_lsn" jt="-1" type="pg_lsn" inOut="1" />
			<input_param name="upto_nchanges" jt="-1" type="integer" inOut="1" />
			<input_param name="options" jt="-1" type="ARRAY" inOut="1" />
			<input_param name="lsn" jt="-1" type="pg_lsn" inOut="3" />
			<input_param name="xid" jt="-1" type="xid" inOut="3" />
			<input_param name="data" jt="-1" type="bytea" inOut="3" />
		</function>
		<function name="pg_logical_slot_get_changes" id="Function-1ef1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_logical_slot_get_changes(slot_name name, upto_lsn pg_lsn, upto_nchanges integer, VARIADIC options text[] DEFAULT '{}'::text[], OUT lsn pg_lsn, OUT xid xid, OUT data text)
 RETURNS SETOF record
 LANGUAGE internal
 COST 1000
AS $function$pg_logical_slot_get_changes$function$
;]]></string>
			<input_param name="slot_name" jt="-1" type="name" inOut="1" />
			<input_param name="upto_lsn" jt="-1" type="pg_lsn" inOut="1" />
			<input_param name="upto_nchanges" jt="-1" type="integer" inOut="1" />
			<input_param name="options" jt="-1" type="ARRAY" inOut="1" />
			<input_param name="lsn" jt="-1" type="pg_lsn" inOut="3" />
			<input_param name="xid" jt="-1" type="xid" inOut="3" />
			<input_param name="data" jt="-1" type="text" inOut="3" />
		</function>
		<function name="pg_logical_slot_peek_binary_changes" id="Function-4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_logical_slot_peek_binary_changes(slot_name name, upto_lsn pg_lsn, upto_nchanges integer, VARIADIC options text[] DEFAULT '{}'::text[], OUT lsn pg_lsn, OUT xid xid, OUT data bytea)
 RETURNS SETOF record
 LANGUAGE internal
 COST 1000
AS $function$pg_logical_slot_peek_binary_changes$function$
;]]></string>
			<input_param name="slot_name" jt="-1" type="name" inOut="1" />
			<input_param name="upto_lsn" jt="-1" type="pg_lsn" inOut="1" />
			<input_param name="upto_nchanges" jt="-1" type="integer" inOut="1" />
			<input_param name="options" jt="-1" type="ARRAY" inOut="1" />
			<input_param name="lsn" jt="-1" type="pg_lsn" inOut="3" />
			<input_param name="xid" jt="-1" type="xid" inOut="3" />
			<input_param name="data" jt="-1" type="bytea" inOut="3" />
		</function>
		<function name="pg_logical_slot_peek_changes" id="Function-1152" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_logical_slot_peek_changes(slot_name name, upto_lsn pg_lsn, upto_nchanges integer, VARIADIC options text[] DEFAULT '{}'::text[], OUT lsn pg_lsn, OUT xid xid, OUT data text)
 RETURNS SETOF record
 LANGUAGE internal
 COST 1000
AS $function$pg_logical_slot_peek_changes$function$
;]]></string>
			<input_param name="slot_name" jt="-1" type="name" inOut="1" />
			<input_param name="upto_lsn" jt="-1" type="pg_lsn" inOut="1" />
			<input_param name="upto_nchanges" jt="-1" type="integer" inOut="1" />
			<input_param name="options" jt="-1" type="ARRAY" inOut="1" />
			<input_param name="lsn" jt="-1" type="pg_lsn" inOut="3" />
			<input_param name="xid" jt="-1" type="xid" inOut="3" />
			<input_param name="data" jt="-1" type="text" inOut="3" />
		</function>
		<function name="pg_ls_archive_statusdir" id="Function-130e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ls_archive_statusdir(OUT name text, OUT size bigint, OUT modification timestamp with time zone)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT COST 10 ROWS 20
AS $function$pg_ls_archive_statusdir$function$
;]]></string>
			<input_param name="name" jt="-1" type="text" inOut="3" />
			<input_param name="size" jt="-1" type="bigint" inOut="3" />
			<input_param name="modification" jt="-1" type="timestamp with time zone" inOut="3" />
		</function>
		<function name="pg_ls_dir" id="Function-186e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ls_dir(text)
 RETURNS SETOF text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_ls_dir_1arg$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_ls_dir" id="Function-14d5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ls_dir(text, boolean, boolean)
 RETURNS SETOF text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_ls_dir$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="pg_ls_logdir" id="Function-1d35" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ls_logdir(OUT name text, OUT size bigint, OUT modification timestamp with time zone)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT COST 10 ROWS 20
AS $function$pg_ls_logdir$function$
;]]></string>
			<input_param name="name" jt="-1" type="text" inOut="3" />
			<input_param name="size" jt="-1" type="bigint" inOut="3" />
			<input_param name="modification" jt="-1" type="timestamp with time zone" inOut="3" />
		</function>
		<function name="pg_ls_tmpdir" id="Function-26ea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ls_tmpdir(OUT name text, OUT size bigint, OUT modification timestamp with time zone)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT COST 10 ROWS 20
AS $function$pg_ls_tmpdir_noargs$function$
;]]></string>
			<input_param name="name" jt="-1" type="text" inOut="3" />
			<input_param name="size" jt="-1" type="bigint" inOut="3" />
			<input_param name="modification" jt="-1" type="timestamp with time zone" inOut="3" />
		</function>
		<function name="pg_ls_tmpdir" id="Function-14eb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ls_tmpdir(tablespace oid, OUT name text, OUT size bigint, OUT modification timestamp with time zone)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT COST 10 ROWS 20
AS $function$pg_ls_tmpdir_1arg$function$
;]]></string>
			<input_param name="tablespace" jt="-1" type="oid" inOut="1" />
			<input_param name="name" jt="-1" type="text" inOut="3" />
			<input_param name="size" jt="-1" type="bigint" inOut="3" />
			<input_param name="modification" jt="-1" type="timestamp with time zone" inOut="3" />
		</function>
		<function name="pg_ls_waldir" id="Function-b2d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ls_waldir(OUT name text, OUT size bigint, OUT modification timestamp with time zone)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT COST 10 ROWS 20
AS $function$pg_ls_waldir$function$
;]]></string>
			<input_param name="name" jt="-1" type="text" inOut="3" />
			<input_param name="size" jt="-1" type="bigint" inOut="3" />
			<input_param name="modification" jt="-1" type="timestamp with time zone" inOut="3" />
		</function>
		<function name="pg_lsn_cmp" id="Function-b7e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_cmp(pg_lsn, pg_lsn)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$pg_lsn_cmp$function$
;]]></string>
			<input_param jt="-1" type="pg_lsn" inOut="1" />
			<input_param jt="-1" type="pg_lsn" inOut="1" />
		</function>
		<function name="pg_lsn_eq" id="Function-56e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_eq(pg_lsn, pg_lsn)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$pg_lsn_eq$function$
;]]></string>
			<input_param jt="-1" type="pg_lsn" inOut="1" />
			<input_param jt="-1" type="pg_lsn" inOut="1" />
		</function>
		<function name="pg_lsn_ge" id="Function-186a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_ge(pg_lsn, pg_lsn)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$pg_lsn_ge$function$
;]]></string>
			<input_param jt="-1" type="pg_lsn" inOut="1" />
			<input_param jt="-1" type="pg_lsn" inOut="1" />
		</function>
		<function name="pg_lsn_gt" id="Function-25cf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_gt(pg_lsn, pg_lsn)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$pg_lsn_gt$function$
;]]></string>
			<input_param jt="-1" type="pg_lsn" inOut="1" />
			<input_param jt="-1" type="pg_lsn" inOut="1" />
		</function>
		<function name="pg_lsn_hash" id="Function-1146" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_hash(pg_lsn)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_hash$function$
;]]></string>
			<input_param jt="-1" type="pg_lsn" inOut="1" />
		</function>
		<function name="pg_lsn_hash_extended" id="Function-1e2d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_hash_extended(pg_lsn, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_hash_extended$function$
;]]></string>
			<input_param jt="-1" type="pg_lsn" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_lsn_in" id="Function-f45" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_in(cstring)
 RETURNS pg_lsn
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="pg_lsn_le" id="Function-2584" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_le(pg_lsn, pg_lsn)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$pg_lsn_le$function$
;]]></string>
			<input_param jt="-1" type="pg_lsn" inOut="1" />
			<input_param jt="-1" type="pg_lsn" inOut="1" />
		</function>
		<function name="pg_lsn_lt" id="Function-6c1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_lt(pg_lsn, pg_lsn)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$pg_lsn_lt$function$
;]]></string>
			<input_param jt="-1" type="pg_lsn" inOut="1" />
			<input_param jt="-1" type="pg_lsn" inOut="1" />
		</function>
		<function name="pg_lsn_mi" id="Function-969" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_mi(pg_lsn, pg_lsn)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_mi$function$
;]]></string>
			<input_param jt="-1" type="pg_lsn" inOut="1" />
			<input_param jt="-1" type="pg_lsn" inOut="1" />
		</function>
		<function name="pg_lsn_ne" id="Function-25b1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_ne(pg_lsn, pg_lsn)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$pg_lsn_ne$function$
;]]></string>
			<input_param jt="-1" type="pg_lsn" inOut="1" />
			<input_param jt="-1" type="pg_lsn" inOut="1" />
		</function>
		<function name="pg_lsn_out" id="Function-23a5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_out(pg_lsn)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_out$function$
;]]></string>
			<input_param jt="-1" type="pg_lsn" inOut="1" />
		</function>
		<function name="pg_lsn_recv" id="Function-2600" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_recv(internal)
 RETURNS pg_lsn
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="pg_lsn_send" id="Function-1f00" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_send(pg_lsn)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_send$function$
;]]></string>
			<input_param jt="-1" type="pg_lsn" inOut="1" />
		</function>
		<function name="pg_mcv_list_in" id="Function-307" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_mcv_list_in(cstring)
 RETURNS pg_mcv_list
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_mcv_list_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="pg_mcv_list_items" id="Function-f8d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_mcv_list_items(mcv_list pg_mcv_list, OUT index integer, OUT "values" text[], OUT nulls boolean[], OUT frequency double precision, OUT base_frequency double precision)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_stats_ext_mcvlist_items$function$
;]]></string>
			<input_param name="mcv_list" jt="-1" type="pg_mcv_list" inOut="1" />
			<input_param name="index" jt="-1" type="integer" inOut="3" />
			<input_param name="values" jt="-1" type="ARRAY" inOut="3" />
			<input_param name="nulls" jt="-1" type="ARRAY" inOut="3" />
			<input_param name="frequency" jt="-1" type="double precision" inOut="3" />
			<input_param name="base_frequency" jt="-1" type="double precision" inOut="3" />
		</function>
		<function name="pg_mcv_list_out" id="Function-238a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_mcv_list_out(pg_mcv_list)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_mcv_list_out$function$
;]]></string>
			<input_param jt="-1" type="pg_mcv_list" inOut="1" />
		</function>
		<function name="pg_mcv_list_recv" id="Function-13a1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_mcv_list_recv(internal)
 RETURNS pg_mcv_list
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_mcv_list_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="pg_mcv_list_send" id="Function-f3b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_mcv_list_send(pg_mcv_list)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_mcv_list_send$function$
;]]></string>
			<input_param jt="-1" type="pg_mcv_list" inOut="1" />
		</function>
		<function name="pg_my_temp_schema" id="Function-e82" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_my_temp_schema()
 RETURNS oid
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_my_temp_schema$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_ndistinct_in" id="Function-21b2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ndistinct_in(cstring)
 RETURNS pg_ndistinct
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_ndistinct_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="pg_ndistinct_out" id="Function-1108" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ndistinct_out(pg_ndistinct)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_ndistinct_out$function$
;]]></string>
			<input_param jt="-1" type="pg_ndistinct" inOut="1" />
		</function>
		<function name="pg_ndistinct_recv" id="Function-1577" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ndistinct_recv(internal)
 RETURNS pg_ndistinct
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_ndistinct_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="pg_ndistinct_send" id="Function-16c1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ndistinct_send(pg_ndistinct)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_ndistinct_send$function$
;]]></string>
			<input_param jt="-1" type="pg_ndistinct" inOut="1" />
		</function>
		<function name="pg_nextoid" id="Function-12b0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_nextoid(regclass, name, regclass)
 RETURNS oid
 LANGUAGE internal
 STRICT
AS $function$pg_nextoid$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="regclass" inOut="1" />
		</function>
		<function name="pg_node_tree_in" id="Function-1d60" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_node_tree_in(cstring)
 RETURNS pg_node_tree
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_node_tree_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="pg_node_tree_out" id="Function-8b6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_node_tree_out(pg_node_tree)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_node_tree_out$function$
;]]></string>
			<input_param jt="-1" type="pg_node_tree" inOut="1" />
		</function>
		<function name="pg_node_tree_recv" id="Function-1d9a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_node_tree_recv(internal)
 RETURNS pg_node_tree
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_node_tree_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="pg_node_tree_send" id="Function-c8a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_node_tree_send(pg_node_tree)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_node_tree_send$function$
;]]></string>
			<input_param jt="-1" type="pg_node_tree" inOut="1" />
		</function>
		<function name="pg_notification_queue_usage" id="Function-2504" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_notification_queue_usage()
 RETURNS double precision
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_notification_queue_usage$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_notify" id="Function-1fb9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_notify(text, text)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED
AS $function$pg_notify$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_opclass_is_visible" id="Function-403" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_opclass_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_opclass_is_visible$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_operator_is_visible" id="Function-212a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_operator_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_operator_is_visible$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_opfamily_is_visible" id="Function-616" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_opfamily_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_opfamily_is_visible$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_options_to_table" id="Function-98c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_options_to_table(options_array text[], OUT option_name text, OUT option_value text)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT ROWS 3
AS $function$pg_options_to_table$function$
;]]></string>
			<input_param name="options_array" jt="-1" type="ARRAY" inOut="1" />
			<input_param name="option_name" jt="-1" type="text" inOut="3" />
			<input_param name="option_value" jt="-1" type="text" inOut="3" />
		</function>
		<function name="pg_partition_ancestors" id="Function-12b0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_partition_ancestors(partitionid regclass, OUT relid regclass)
 RETURNS SETOF regclass
 LANGUAGE internal
 PARALLEL SAFE STRICT ROWS 10
AS $function$pg_partition_ancestors$function$
;]]></string>
			<input_param name="partitionid" jt="-1" type="regclass" inOut="1" />
			<input_param name="relid" jt="-1" type="regclass" inOut="3" />
		</function>
		<function name="pg_partition_root" id="Function-c52" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_partition_root(regclass)
 RETURNS regclass
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_partition_root$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
		</function>
		<function name="pg_partition_tree" id="Function-15c1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_partition_tree(rootrelid regclass, OUT relid regclass, OUT parentrelid regclass, OUT isleaf boolean, OUT level integer)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_partition_tree$function$
;]]></string>
			<input_param name="rootrelid" jt="-1" type="regclass" inOut="1" />
			<input_param name="relid" jt="-1" type="regclass" inOut="3" />
			<input_param name="parentrelid" jt="-1" type="regclass" inOut="3" />
			<input_param name="isleaf" jt="-1" type="boolean" inOut="3" />
			<input_param name="level" jt="-1" type="integer" inOut="3" />
		</function>
		<function name="pg_postmaster_start_time" id="Function-1b45" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_postmaster_start_time()
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_postmaster_start_time$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_prepared_statement" id="Function-1089" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_prepared_statement(OUT name text, OUT statement text, OUT prepare_time timestamp with time zone, OUT parameter_types regtype[], OUT from_sql boolean)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_prepared_statement$function$
;]]></string>
			<input_param name="name" jt="-1" type="text" inOut="3" />
			<input_param name="statement" jt="-1" type="text" inOut="3" />
			<input_param name="prepare_time" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="parameter_types" jt="-1" type="ARRAY" inOut="3" />
			<input_param name="from_sql" jt="-1" type="boolean" inOut="3" />
		</function>
		<function name="pg_prepared_xact" id="Function-1027" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_prepared_xact(OUT transaction xid, OUT gid text, OUT prepared timestamp with time zone, OUT ownerid oid, OUT dbid oid)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_prepared_xact$function$
;]]></string>
			<input_param name="transaction" jt="-1" type="xid" inOut="3" />
			<input_param name="gid" jt="-1" type="text" inOut="3" />
			<input_param name="prepared" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="ownerid" jt="-1" type="oid" inOut="3" />
			<input_param name="dbid" jt="-1" type="oid" inOut="3" />
		</function>
		<function name="pg_promote" id="Function-1add" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_promote(wait boolean DEFAULT true, wait_seconds integer DEFAULT 60)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_promote$function$
;]]></string>
			<input_param name="wait" jt="-1" type="boolean" inOut="1" />
			<input_param name="wait_seconds" jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_read_binary_file" id="Function-1425" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_read_binary_file(text, bigint, bigint, boolean)
 RETURNS bytea
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_read_binary_file$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="pg_read_binary_file" id="Function-1b5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_read_binary_file(text, bigint, bigint)
 RETURNS bytea
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_read_binary_file_off_len$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_read_binary_file" id="Function-ebc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_read_binary_file(text)
 RETURNS bytea
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_read_binary_file_all$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_read_file" id="Function-1a95" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_read_file(text, bigint, bigint)
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_read_file_off_len$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_read_file" id="Function-12ac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_read_file(text, bigint, bigint, boolean)
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_read_file_v2$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="pg_read_file" id="Function-1a33" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_read_file(text)
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_read_file_all$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_read_file_old" id="Function-1924" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_read_file_old(text, bigint, bigint)
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_read_file$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_relation_filenode" id="Function-674" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_relation_filenode(regclass)
 RETURNS oid
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_relation_filenode$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
		</function>
		<function name="pg_relation_filepath" id="Function-c0f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_relation_filepath(regclass)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_relation_filepath$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
		</function>
		<function name="pg_relation_is_publishable" id="Function-6e3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_relation_is_publishable(regclass)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_relation_is_publishable$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
		</function>
		<function name="pg_relation_is_updatable" id="Function-22e2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_relation_is_updatable(regclass, boolean)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_relation_is_updatable$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="pg_relation_size" id="Function-45f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_relation_size(regclass)
 RETURNS bigint
 LANGUAGE sql
 PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.pg_relation_size($1, 'main')$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
		</function>
		<function name="pg_relation_size" id="Function-57f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_relation_size(regclass, text)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_relation_size$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_reload_conf" id="Function-13e8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_reload_conf()
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_reload_conf$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_replication_origin_advance" id="Function-22cf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_advance(text, pg_lsn)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_replication_origin_advance$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="pg_lsn" inOut="1" />
		</function>
		<function name="pg_replication_origin_create" id="Function-105e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_create(text)
 RETURNS oid
 LANGUAGE internal
 STRICT
AS $function$pg_replication_origin_create$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_replication_origin_drop" id="Function-1461" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_drop(text)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_replication_origin_drop$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_replication_origin_oid" id="Function-1551" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_oid(text)
 RETURNS oid
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_replication_origin_oid$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_replication_origin_progress" id="Function-75" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_progress(text, boolean)
 RETURNS pg_lsn
 LANGUAGE internal
 STRICT
AS $function$pg_replication_origin_progress$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="pg_replication_origin_session_is_setup" id="Function-b52" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_session_is_setup()
 RETURNS boolean
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_replication_origin_session_is_setup$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_replication_origin_session_progress" id="Function-1ce9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_session_progress(boolean)
 RETURNS pg_lsn
 LANGUAGE internal
 STRICT
AS $function$pg_replication_origin_session_progress$function$
;]]></string>
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="pg_replication_origin_session_reset" id="Function-19a9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_session_reset()
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_replication_origin_session_reset$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_replication_origin_session_setup" id="Function-132e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_session_setup(text)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_replication_origin_session_setup$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_replication_origin_xact_reset" id="Function-101e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_xact_reset()
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_replication_origin_xact_reset$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_replication_origin_xact_setup" id="Function-11de" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_xact_setup(pg_lsn, timestamp with time zone)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_replication_origin_xact_setup$function$
;]]></string>
			<input_param jt="-1" type="pg_lsn" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="pg_replication_slot_advance" id="Function-5b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_slot_advance(slot_name name, upto_lsn pg_lsn, OUT slot_name name, OUT end_lsn pg_lsn)
 RETURNS record
 LANGUAGE internal
 STRICT
AS $function$pg_replication_slot_advance$function$
;]]></string>
			<input_param name="slot_name" jt="-1" type="name" inOut="1" />
			<input_param name="upto_lsn" jt="-1" type="pg_lsn" inOut="1" />
			<input_param name="slot_name" jt="-1" type="name" inOut="3" />
			<input_param name="end_lsn" jt="-1" type="pg_lsn" inOut="3" />
		</function>
		<function name="pg_rotate_logfile" id="Function-b92" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_rotate_logfile()
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_rotate_logfile_v2$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_rotate_logfile_old" id="Function-1910" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_rotate_logfile_old()
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_rotate_logfile$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_safe_snapshot_blocking_pids" id="Function-a3a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_safe_snapshot_blocking_pids(integer)
 RETURNS integer[]
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_safe_snapshot_blocking_pids$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_sequence_last_value" id="Function-ee1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_sequence_last_value(regclass)
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$pg_sequence_last_value$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
		</function>
		<function name="pg_sequence_parameters" id="Function-1693" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_sequence_parameters(sequence_oid oid, OUT start_value bigint, OUT minimum_value bigint, OUT maximum_value bigint, OUT increment bigint, OUT cycle_option boolean, OUT cache_size bigint, OUT data_type oid)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_sequence_parameters$function$
;]]></string>
			<input_param name="sequence_oid" jt="-1" type="oid" inOut="1" />
			<input_param name="start_value" jt="-1" type="bigint" inOut="3" />
			<input_param name="minimum_value" jt="-1" type="bigint" inOut="3" />
			<input_param name="maximum_value" jt="-1" type="bigint" inOut="3" />
			<input_param name="increment" jt="-1" type="bigint" inOut="3" />
			<input_param name="cycle_option" jt="-1" type="boolean" inOut="3" />
			<input_param name="cache_size" jt="-1" type="bigint" inOut="3" />
			<input_param name="data_type" jt="-1" type="oid" inOut="3" />
		</function>
		<function name="pg_show_all_file_settings" id="Function-ec2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_show_all_file_settings(OUT sourcefile text, OUT sourceline integer, OUT seqno integer, OUT name text, OUT setting text, OUT applied boolean, OUT error text)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$show_all_file_settings$function$
;]]></string>
			<input_param name="sourcefile" jt="-1" type="text" inOut="3" />
			<input_param name="sourceline" jt="-1" type="integer" inOut="3" />
			<input_param name="seqno" jt="-1" type="integer" inOut="3" />
			<input_param name="name" jt="-1" type="text" inOut="3" />
			<input_param name="setting" jt="-1" type="text" inOut="3" />
			<input_param name="applied" jt="-1" type="boolean" inOut="3" />
			<input_param name="error" jt="-1" type="text" inOut="3" />
		</function>
		<function name="pg_show_all_settings" id="Function-1e95" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_show_all_settings(OUT name text, OUT setting text, OUT unit text, OUT category text, OUT short_desc text, OUT extra_desc text, OUT context text, OUT vartype text, OUT source text, OUT min_val text, OUT max_val text, OUT enumvals text[], OUT boot_val text, OUT reset_val text, OUT sourcefile text, OUT sourceline integer, OUT pending_restart boolean)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$show_all_settings$function$
;]]></string>
			<input_param name="name" jt="-1" type="text" inOut="3" />
			<input_param name="setting" jt="-1" type="text" inOut="3" />
			<input_param name="unit" jt="-1" type="text" inOut="3" />
			<input_param name="category" jt="-1" type="text" inOut="3" />
			<input_param name="short_desc" jt="-1" type="text" inOut="3" />
			<input_param name="extra_desc" jt="-1" type="text" inOut="3" />
			<input_param name="context" jt="-1" type="text" inOut="3" />
			<input_param name="vartype" jt="-1" type="text" inOut="3" />
			<input_param name="source" jt="-1" type="text" inOut="3" />
			<input_param name="min_val" jt="-1" type="text" inOut="3" />
			<input_param name="max_val" jt="-1" type="text" inOut="3" />
			<input_param name="enumvals" jt="-1" type="ARRAY" inOut="3" />
			<input_param name="boot_val" jt="-1" type="text" inOut="3" />
			<input_param name="reset_val" jt="-1" type="text" inOut="3" />
			<input_param name="sourcefile" jt="-1" type="text" inOut="3" />
			<input_param name="sourceline" jt="-1" type="integer" inOut="3" />
			<input_param name="pending_restart" jt="-1" type="boolean" inOut="3" />
		</function>
		<function name="pg_show_replication_origin_status" id="Function-12f2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_show_replication_origin_status(OUT local_id oid, OUT external_id text, OUT remote_lsn pg_lsn, OUT local_lsn pg_lsn)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL RESTRICTED ROWS 100
AS $function$pg_show_replication_origin_status$function$
;]]></string>
			<input_param name="local_id" jt="-1" type="oid" inOut="3" />
			<input_param name="external_id" jt="-1" type="text" inOut="3" />
			<input_param name="remote_lsn" jt="-1" type="pg_lsn" inOut="3" />
			<input_param name="local_lsn" jt="-1" type="pg_lsn" inOut="3" />
		</function>
		<function name="pg_size_bytes" id="Function-1fb5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_size_bytes(text)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_size_bytes$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_size_pretty" id="Function-3cb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_size_pretty(bigint)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_size_pretty$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_size_pretty" id="Function-1523" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_size_pretty(numeric)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_size_pretty_numeric$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="pg_sleep" id="Function-22f1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_sleep(double precision)
 RETURNS void
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_sleep$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="pg_sleep_for" id="Function-ac0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_sleep_for(interval)
 RETURNS void
 LANGUAGE sql
 PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.pg_sleep(extract(epoch from pg_catalog.clock_timestamp() operator(pg_catalog.+) $1) operator(pg_catalog.-) extract(epoch from pg_catalog.clock_timestamp()))$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="pg_sleep_until" id="Function-b0b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_sleep_until(timestamp with time zone)
 RETURNS void
 LANGUAGE sql
 PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.pg_sleep(extract(epoch from $1) operator(pg_catalog.-) extract(epoch from pg_catalog.clock_timestamp()))$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="pg_start_backup" id="Function-2681" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_start_backup(label text, fast boolean DEFAULT false, exclusive boolean DEFAULT true)
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_start_backup$function$
;]]></string>
			<input_param name="label" jt="-1" type="text" inOut="1" />
			<input_param name="fast" jt="-1" type="boolean" inOut="1" />
			<input_param name="exclusive" jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="pg_stat_clear_snapshot" id="Function-20e3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_clear_snapshot()
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED
AS $function$pg_stat_clear_snapshot$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_stat_file" id="Function-45d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_file(filename text, OUT size bigint, OUT access timestamp with time zone, OUT modification timestamp with time zone, OUT change timestamp with time zone, OUT creation timestamp with time zone, OUT isdir boolean)
 RETURNS record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_stat_file_1arg$function$
;]]></string>
			<input_param name="filename" jt="-1" type="text" inOut="1" />
			<input_param name="size" jt="-1" type="bigint" inOut="3" />
			<input_param name="access" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="modification" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="change" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="creation" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="isdir" jt="-1" type="boolean" inOut="3" />
		</function>
		<function name="pg_stat_file" id="Function-d47" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_file(filename text, missing_ok boolean, OUT size bigint, OUT access timestamp with time zone, OUT modification timestamp with time zone, OUT change timestamp with time zone, OUT creation timestamp with time zone, OUT isdir boolean)
 RETURNS record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_stat_file$function$
;]]></string>
			<input_param name="filename" jt="-1" type="text" inOut="1" />
			<input_param name="missing_ok" jt="-1" type="boolean" inOut="1" />
			<input_param name="size" jt="-1" type="bigint" inOut="3" />
			<input_param name="access" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="modification" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="change" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="creation" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="isdir" jt="-1" type="boolean" inOut="3" />
		</function>
		<function name="pg_stat_get_activity" id="Function-12d6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_activity(pid integer, OUT datid oid, OUT pid integer, OUT usesysid oid, OUT application_name text, OUT state text, OUT query text, OUT wait_event_type text, OUT wait_event text, OUT xact_start timestamp with time zone, OUT query_start timestamp with time zone, OUT backend_start timestamp with time zone, OUT state_change timestamp with time zone, OUT client_addr inet, OUT client_hostname text, OUT client_port integer, OUT backend_xid xid, OUT backend_xmin xid, OUT backend_type text, OUT ssl boolean, OUT sslversion text, OUT sslcipher text, OUT sslbits integer, OUT sslcompression boolean, OUT ssl_client_dn text, OUT ssl_client_serial numeric, OUT ssl_issuer_dn text, OUT gss_auth boolean, OUT gss_princ text, OUT gss_enc boolean)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED ROWS 100
AS $function$pg_stat_get_activity$function$
;]]></string>
			<input_param name="pid" jt="-1" type="integer" inOut="1" />
			<input_param name="datid" jt="-1" type="oid" inOut="3" />
			<input_param name="pid" jt="-1" type="integer" inOut="3" />
			<input_param name="usesysid" jt="-1" type="oid" inOut="3" />
			<input_param name="application_name" jt="-1" type="text" inOut="3" />
			<input_param name="state" jt="-1" type="text" inOut="3" />
			<input_param name="query" jt="-1" type="text" inOut="3" />
			<input_param name="wait_event_type" jt="-1" type="text" inOut="3" />
			<input_param name="wait_event" jt="-1" type="text" inOut="3" />
			<input_param name="xact_start" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="query_start" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="backend_start" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="state_change" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="client_addr" jt="-1" type="inet" inOut="3" />
			<input_param name="client_hostname" jt="-1" type="text" inOut="3" />
			<input_param name="client_port" jt="-1" type="integer" inOut="3" />
			<input_param name="backend_xid" jt="-1" type="xid" inOut="3" />
			<input_param name="backend_xmin" jt="-1" type="xid" inOut="3" />
			<input_param name="backend_type" jt="-1" type="text" inOut="3" />
			<input_param name="ssl" jt="-1" type="boolean" inOut="3" />
			<input_param name="sslversion" jt="-1" type="text" inOut="3" />
			<input_param name="sslcipher" jt="-1" type="text" inOut="3" />
			<input_param name="sslbits" jt="-1" type="integer" inOut="3" />
			<input_param name="sslcompression" jt="-1" type="boolean" inOut="3" />
			<input_param name="ssl_client_dn" jt="-1" type="text" inOut="3" />
			<input_param name="ssl_client_serial" jt="-1" type="numeric" inOut="3" />
			<input_param name="ssl_issuer_dn" jt="-1" type="text" inOut="3" />
			<input_param name="gss_auth" jt="-1" type="boolean" inOut="3" />
			<input_param name="gss_princ" jt="-1" type="text" inOut="3" />
			<input_param name="gss_enc" jt="-1" type="boolean" inOut="3" />
		</function>
		<function name="pg_stat_get_analyze_count" id="Function-de8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_analyze_count(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_analyze_count$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_archiver" id="Function-68a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_archiver(OUT archived_count bigint, OUT last_archived_wal text, OUT last_archived_time timestamp with time zone, OUT failed_count bigint, OUT last_failed_wal text, OUT last_failed_time timestamp with time zone, OUT stats_reset timestamp with time zone)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED
AS $function$pg_stat_get_archiver$function$
;]]></string>
			<input_param name="archived_count" jt="-1" type="bigint" inOut="3" />
			<input_param name="last_archived_wal" jt="-1" type="text" inOut="3" />
			<input_param name="last_archived_time" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="failed_count" jt="-1" type="bigint" inOut="3" />
			<input_param name="last_failed_wal" jt="-1" type="text" inOut="3" />
			<input_param name="last_failed_time" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="stats_reset" jt="-1" type="timestamp with time zone" inOut="3" />
		</function>
		<function name="pg_stat_get_autoanalyze_count" id="Function-7c5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_autoanalyze_count(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_autoanalyze_count$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_autovacuum_count" id="Function-1e08" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_autovacuum_count(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_autovacuum_count$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_backend_activity" id="Function-10b7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_activity(integer)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_activity$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_stat_get_backend_activity_start" id="Function-1ec7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_activity_start(integer)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_activity_start$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_stat_get_backend_client_addr" id="Function-93e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_client_addr(integer)
 RETURNS inet
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_client_addr$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_stat_get_backend_client_port" id="Function-22ee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_client_port(integer)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_client_port$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_stat_get_backend_dbid" id="Function-62a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_dbid(integer)
 RETURNS oid
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_dbid$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_stat_get_backend_idset" id="Function-878" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_idset()
 RETURNS SETOF integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT ROWS 100
AS $function$pg_stat_get_backend_idset$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_stat_get_backend_pid" id="Function-f00" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_pid(integer)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_pid$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_stat_get_backend_start" id="Function-25c7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_start(integer)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_start$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_stat_get_backend_userid" id="Function-4c1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_userid(integer)
 RETURNS oid
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_userid$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_stat_get_backend_wait_event" id="Function-85e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_wait_event(integer)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_wait_event$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_stat_get_backend_wait_event_type" id="Function-13e1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_wait_event_type(integer)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_wait_event_type$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_stat_get_backend_xact_start" id="Function-11bc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_xact_start(integer)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_xact_start$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_stat_get_bgwriter_buf_written_checkpoints" id="Function-1460" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_bgwriter_buf_written_checkpoints()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_bgwriter_buf_written_checkpoints$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_stat_get_bgwriter_buf_written_clean" id="Function-14c9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_bgwriter_buf_written_clean()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_bgwriter_buf_written_clean$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_stat_get_bgwriter_maxwritten_clean" id="Function-5b6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_bgwriter_maxwritten_clean()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_bgwriter_maxwritten_clean$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_stat_get_bgwriter_requested_checkpoints" id="Function-2582" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_bgwriter_requested_checkpoints()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_bgwriter_requested_checkpoints$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_stat_get_bgwriter_stat_reset_time" id="Function-151" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_bgwriter_stat_reset_time()
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_bgwriter_stat_reset_time$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_stat_get_bgwriter_timed_checkpoints" id="Function-42" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_bgwriter_timed_checkpoints()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_bgwriter_timed_checkpoints$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_stat_get_blocks_fetched" id="Function-d46" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_blocks_fetched(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_blocks_fetched$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_blocks_hit" id="Function-fbf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_blocks_hit(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_blocks_hit$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_buf_alloc" id="Function-196b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_buf_alloc()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_buf_alloc$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_stat_get_buf_fsync_backend" id="Function-197e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_buf_fsync_backend()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_buf_fsync_backend$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_stat_get_buf_written_backend" id="Function-1f7e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_buf_written_backend()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_buf_written_backend$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_stat_get_checkpoint_sync_time" id="Function-1f57" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_checkpoint_sync_time()
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_checkpoint_sync_time$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_stat_get_checkpoint_write_time" id="Function-937" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_checkpoint_write_time()
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_checkpoint_write_time$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_stat_get_db_blk_read_time" id="Function-2701" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_blk_read_time(oid)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_blk_read_time$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_db_blk_write_time" id="Function-1a07" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_blk_write_time(oid)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_blk_write_time$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_db_blocks_fetched" id="Function-34" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_blocks_fetched(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_blocks_fetched$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_db_blocks_hit" id="Function-24e0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_blocks_hit(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_blocks_hit$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_db_checksum_failures" id="Function-9f4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_checksum_failures(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_checksum_failures$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_db_checksum_last_failure" id="Function-cb4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_checksum_last_failure(oid)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_checksum_last_failure$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_db_conflict_all" id="Function-1533" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_conflict_all(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_conflict_all$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_db_conflict_bufferpin" id="Function-5da" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_conflict_bufferpin(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_conflict_bufferpin$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_db_conflict_lock" id="Function-15c4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_conflict_lock(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_conflict_lock$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_db_conflict_snapshot" id="Function-2534" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_conflict_snapshot(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_conflict_snapshot$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_db_conflict_startup_deadlock" id="Function-123c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_conflict_startup_deadlock(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_conflict_startup_deadlock$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_db_conflict_tablespace" id="Function-112" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_conflict_tablespace(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_conflict_tablespace$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_db_deadlocks" id="Function-1153" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_deadlocks(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_deadlocks$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_db_numbackends" id="Function-1018" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_numbackends(oid)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_numbackends$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_db_stat_reset_time" id="Function-11f7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_stat_reset_time(oid)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_stat_reset_time$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_db_temp_bytes" id="Function-125b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_temp_bytes(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_temp_bytes$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_db_temp_files" id="Function-2456" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_temp_files(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_temp_files$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_db_tuples_deleted" id="Function-1070" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_tuples_deleted(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_tuples_deleted$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_db_tuples_fetched" id="Function-1c66" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_tuples_fetched(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_tuples_fetched$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_db_tuples_inserted" id="Function-178e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_tuples_inserted(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_tuples_inserted$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_db_tuples_returned" id="Function-17c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_tuples_returned(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_tuples_returned$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_db_tuples_updated" id="Function-704" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_tuples_updated(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_tuples_updated$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_db_xact_commit" id="Function-70f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_xact_commit(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_xact_commit$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_db_xact_rollback" id="Function-1d7c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_xact_rollback(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_xact_rollback$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_dead_tuples" id="Function-f0a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_dead_tuples(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_dead_tuples$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_function_calls" id="Function-1bc5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_function_calls(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_function_calls$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_function_self_time" id="Function-84f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_function_self_time(oid)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_function_self_time$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_function_total_time" id="Function-ea3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_function_total_time(oid)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_function_total_time$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_last_analyze_time" id="Function-13f6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_last_analyze_time(oid)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_last_analyze_time$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_last_autoanalyze_time" id="Function-19f0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_last_autoanalyze_time(oid)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_last_autoanalyze_time$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_last_autovacuum_time" id="Function-237c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_last_autovacuum_time(oid)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_last_autovacuum_time$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_last_vacuum_time" id="Function-25e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_last_vacuum_time(oid)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_last_vacuum_time$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_live_tuples" id="Function-2431" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_live_tuples(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_live_tuples$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_mod_since_analyze" id="Function-fb4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_mod_since_analyze(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_mod_since_analyze$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_numscans" id="Function-236f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_numscans(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_numscans$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_progress_info" id="Function-156f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_progress_info(cmdtype text, OUT pid integer, OUT datid oid, OUT relid oid, OUT param1 bigint, OUT param2 bigint, OUT param3 bigint, OUT param4 bigint, OUT param5 bigint, OUT param6 bigint, OUT param7 bigint, OUT param8 bigint, OUT param9 bigint, OUT param10 bigint, OUT param11 bigint, OUT param12 bigint, OUT param13 bigint, OUT param14 bigint, OUT param15 bigint, OUT param16 bigint, OUT param17 bigint, OUT param18 bigint, OUT param19 bigint, OUT param20 bigint)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT ROWS 100
AS $function$pg_stat_get_progress_info$function$
;]]></string>
			<input_param name="cmdtype" jt="-1" type="text" inOut="1" />
			<input_param name="pid" jt="-1" type="integer" inOut="3" />
			<input_param name="datid" jt="-1" type="oid" inOut="3" />
			<input_param name="relid" jt="-1" type="oid" inOut="3" />
			<input_param name="param1" jt="-1" type="bigint" inOut="3" />
			<input_param name="param2" jt="-1" type="bigint" inOut="3" />
			<input_param name="param3" jt="-1" type="bigint" inOut="3" />
			<input_param name="param4" jt="-1" type="bigint" inOut="3" />
			<input_param name="param5" jt="-1" type="bigint" inOut="3" />
			<input_param name="param6" jt="-1" type="bigint" inOut="3" />
			<input_param name="param7" jt="-1" type="bigint" inOut="3" />
			<input_param name="param8" jt="-1" type="bigint" inOut="3" />
			<input_param name="param9" jt="-1" type="bigint" inOut="3" />
			<input_param name="param10" jt="-1" type="bigint" inOut="3" />
			<input_param name="param11" jt="-1" type="bigint" inOut="3" />
			<input_param name="param12" jt="-1" type="bigint" inOut="3" />
			<input_param name="param13" jt="-1" type="bigint" inOut="3" />
			<input_param name="param14" jt="-1" type="bigint" inOut="3" />
			<input_param name="param15" jt="-1" type="bigint" inOut="3" />
			<input_param name="param16" jt="-1" type="bigint" inOut="3" />
			<input_param name="param17" jt="-1" type="bigint" inOut="3" />
			<input_param name="param18" jt="-1" type="bigint" inOut="3" />
			<input_param name="param19" jt="-1" type="bigint" inOut="3" />
			<input_param name="param20" jt="-1" type="bigint" inOut="3" />
		</function>
		<function name="pg_stat_get_snapshot_timestamp" id="Function-1345" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_snapshot_timestamp()
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_snapshot_timestamp$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_stat_get_subscription" id="Function-1e3d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_subscription(subid oid, OUT subid oid, OUT relid oid, OUT pid integer, OUT received_lsn pg_lsn, OUT last_msg_send_time timestamp with time zone, OUT last_msg_receipt_time timestamp with time zone, OUT latest_end_lsn pg_lsn, OUT latest_end_time timestamp with time zone)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED
AS $function$pg_stat_get_subscription$function$
;]]></string>
			<input_param name="subid" jt="-1" type="oid" inOut="1" />
			<input_param name="subid" jt="-1" type="oid" inOut="3" />
			<input_param name="relid" jt="-1" type="oid" inOut="3" />
			<input_param name="pid" jt="-1" type="integer" inOut="3" />
			<input_param name="received_lsn" jt="-1" type="pg_lsn" inOut="3" />
			<input_param name="last_msg_send_time" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="last_msg_receipt_time" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="latest_end_lsn" jt="-1" type="pg_lsn" inOut="3" />
			<input_param name="latest_end_time" jt="-1" type="timestamp with time zone" inOut="3" />
		</function>
		<function name="pg_stat_get_tuples_deleted" id="Function-913" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_tuples_deleted(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_tuples_deleted$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_tuples_fetched" id="Function-9bb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_tuples_fetched(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_tuples_fetched$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_tuples_hot_updated" id="Function-188a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_tuples_hot_updated(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_tuples_hot_updated$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_tuples_inserted" id="Function-3a2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_tuples_inserted(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_tuples_inserted$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_tuples_returned" id="Function-ce9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_tuples_returned(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_tuples_returned$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_tuples_updated" id="Function-1a17" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_tuples_updated(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_tuples_updated$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_vacuum_count" id="Function-1f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_vacuum_count(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_vacuum_count$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_wal_receiver" id="Function-130d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_wal_receiver(OUT pid integer, OUT status text, OUT receive_start_lsn pg_lsn, OUT receive_start_tli integer, OUT received_lsn pg_lsn, OUT received_tli integer, OUT last_msg_send_time timestamp with time zone, OUT last_msg_receipt_time timestamp with time zone, OUT latest_end_lsn pg_lsn, OUT latest_end_time timestamp with time zone, OUT slot_name text, OUT sender_host text, OUT sender_port integer, OUT conninfo text)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED
AS $function$pg_stat_get_wal_receiver$function$
;]]></string>
			<input_param name="pid" jt="-1" type="integer" inOut="3" />
			<input_param name="status" jt="-1" type="text" inOut="3" />
			<input_param name="receive_start_lsn" jt="-1" type="pg_lsn" inOut="3" />
			<input_param name="receive_start_tli" jt="-1" type="integer" inOut="3" />
			<input_param name="received_lsn" jt="-1" type="pg_lsn" inOut="3" />
			<input_param name="received_tli" jt="-1" type="integer" inOut="3" />
			<input_param name="last_msg_send_time" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="last_msg_receipt_time" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="latest_end_lsn" jt="-1" type="pg_lsn" inOut="3" />
			<input_param name="latest_end_time" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="slot_name" jt="-1" type="text" inOut="3" />
			<input_param name="sender_host" jt="-1" type="text" inOut="3" />
			<input_param name="sender_port" jt="-1" type="integer" inOut="3" />
			<input_param name="conninfo" jt="-1" type="text" inOut="3" />
		</function>
		<function name="pg_stat_get_wal_senders" id="Function-95b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_wal_senders(OUT pid integer, OUT state text, OUT sent_lsn pg_lsn, OUT write_lsn pg_lsn, OUT flush_lsn pg_lsn, OUT replay_lsn pg_lsn, OUT write_lag interval, OUT flush_lag interval, OUT replay_lag interval, OUT sync_priority integer, OUT sync_state text, OUT reply_time timestamp with time zone)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED ROWS 10
AS $function$pg_stat_get_wal_senders$function$
;]]></string>
			<input_param name="pid" jt="-1" type="integer" inOut="3" />
			<input_param name="state" jt="-1" type="text" inOut="3" />
			<input_param name="sent_lsn" jt="-1" type="pg_lsn" inOut="3" />
			<input_param name="write_lsn" jt="-1" type="pg_lsn" inOut="3" />
			<input_param name="flush_lsn" jt="-1" type="pg_lsn" inOut="3" />
			<input_param name="replay_lsn" jt="-1" type="pg_lsn" inOut="3" />
			<input_param name="write_lag" jt="-1" type="interval" inOut="3" />
			<input_param name="flush_lag" jt="-1" type="interval" inOut="3" />
			<input_param name="replay_lag" jt="-1" type="interval" inOut="3" />
			<input_param name="sync_priority" jt="-1" type="integer" inOut="3" />
			<input_param name="sync_state" jt="-1" type="text" inOut="3" />
			<input_param name="reply_time" jt="-1" type="timestamp with time zone" inOut="3" />
		</function>
		<function name="pg_stat_get_xact_blocks_fetched" id="Function-2121" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_blocks_fetched(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_blocks_fetched$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_xact_blocks_hit" id="Function-21a3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_blocks_hit(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_blocks_hit$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_xact_function_calls" id="Function-265b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_function_calls(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_function_calls$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_xact_function_self_time" id="Function-ae2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_function_self_time(oid)
 RETURNS double precision
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_function_self_time$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_xact_function_total_time" id="Function-1e7f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_function_total_time(oid)
 RETURNS double precision
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_function_total_time$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_xact_numscans" id="Function-1f98" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_numscans(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_numscans$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_xact_tuples_deleted" id="Function-e1d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_tuples_deleted(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_tuples_deleted$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_xact_tuples_fetched" id="Function-2361" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_tuples_fetched(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_tuples_fetched$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_xact_tuples_hot_updated" id="Function-1726" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_tuples_hot_updated(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_tuples_hot_updated$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_xact_tuples_inserted" id="Function-2569" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_tuples_inserted(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_tuples_inserted$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_xact_tuples_returned" id="Function-540" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_tuples_returned(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_tuples_returned$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_get_xact_tuples_updated" id="Function-1053" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_tuples_updated(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_tuples_updated$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_reset" id="Function-7c8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_reset()
 RETURNS void
 LANGUAGE internal
 PARALLEL SAFE
AS $function$pg_stat_reset$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_stat_reset_shared" id="Function-1704" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_reset_shared(text)
 RETURNS void
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_stat_reset_shared$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_stat_reset_single_function_counters" id="Function-1a1c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_reset_single_function_counters(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_stat_reset_single_function_counters$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stat_reset_single_table_counters" id="Function-2660" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_reset_single_table_counters(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_stat_reset_single_table_counters$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_statistics_obj_is_visible" id="Function-106" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_statistics_obj_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_statistics_obj_is_visible$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_stop_backup" id="Function-2289" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stop_backup()
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stop_backup$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_stop_backup" id="Function-3a8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stop_backup(exclusive boolean, wait_for_archive boolean DEFAULT true, OUT lsn pg_lsn, OUT labelfile text, OUT spcmapfile text)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stop_backup_v2$function$
;]]></string>
			<input_param name="exclusive" jt="-1" type="boolean" inOut="1" />
			<input_param name="wait_for_archive" jt="-1" type="boolean" inOut="1" />
			<input_param name="lsn" jt="-1" type="pg_lsn" inOut="3" />
			<input_param name="labelfile" jt="-1" type="text" inOut="3" />
			<input_param name="spcmapfile" jt="-1" type="text" inOut="3" />
		</function>
		<function name="pg_switch_wal" id="Function-35a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_switch_wal()
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_switch_wal$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_table_is_visible" id="Function-db5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_table_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_table_is_visible$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_table_size" id="Function-1f19" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_table_size(regclass)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_table_size$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
		</function>
		<function name="pg_tablespace_databases" id="Function-1cb1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_tablespace_databases(oid)
 RETURNS SETOF oid
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_tablespace_databases$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_tablespace_location" id="Function-2182" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_tablespace_location(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_tablespace_location$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_tablespace_size" id="Function-1085" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_tablespace_size(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_tablespace_size_oid$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_tablespace_size" id="Function-1ee9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_tablespace_size(name)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_tablespace_size_name$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="pg_terminate_backend" id="Function-231" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_terminate_backend(integer)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_terminate_backend$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_timezone_abbrevs" id="Function-22d1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_timezone_abbrevs(OUT abbrev text, OUT utc_offset interval, OUT is_dst boolean)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_timezone_abbrevs$function$
;]]></string>
			<input_param name="abbrev" jt="-1" type="text" inOut="3" />
			<input_param name="utc_offset" jt="-1" type="interval" inOut="3" />
			<input_param name="is_dst" jt="-1" type="boolean" inOut="3" />
		</function>
		<function name="pg_timezone_names" id="Function-12ad" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_timezone_names(OUT name text, OUT abbrev text, OUT utc_offset interval, OUT is_dst boolean)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_timezone_names$function$
;]]></string>
			<input_param name="name" jt="-1" type="text" inOut="3" />
			<input_param name="abbrev" jt="-1" type="text" inOut="3" />
			<input_param name="utc_offset" jt="-1" type="interval" inOut="3" />
			<input_param name="is_dst" jt="-1" type="boolean" inOut="3" />
		</function>
		<function name="pg_total_relation_size" id="Function-f01" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_total_relation_size(regclass)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_total_relation_size$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
		</function>
		<function name="pg_trigger_depth" id="Function-b19" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_trigger_depth()
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_trigger_depth$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_try_advisory_lock" id="Function-1313" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_try_advisory_lock(bigint)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$pg_try_advisory_lock_int8$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_try_advisory_lock" id="Function-454" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_try_advisory_lock(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$pg_try_advisory_lock_int4$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_try_advisory_lock_shared" id="Function-253e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_try_advisory_lock_shared(bigint)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$pg_try_advisory_lock_shared_int8$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_try_advisory_lock_shared" id="Function-1d73" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_try_advisory_lock_shared(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$pg_try_advisory_lock_shared_int4$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_try_advisory_xact_lock" id="Function-753" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_try_advisory_xact_lock(bigint)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$pg_try_advisory_xact_lock_int8$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_try_advisory_xact_lock" id="Function-25c2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_try_advisory_xact_lock(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$pg_try_advisory_xact_lock_int4$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_try_advisory_xact_lock_shared" id="Function-21d1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_try_advisory_xact_lock_shared(bigint)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$pg_try_advisory_xact_lock_shared_int8$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_try_advisory_xact_lock_shared" id="Function-1fd8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_try_advisory_xact_lock_shared(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$pg_try_advisory_xact_lock_shared_int4$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pg_ts_config_is_visible" id="Function-1ca0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ts_config_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_ts_config_is_visible$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_ts_dict_is_visible" id="Function-8fe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ts_dict_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_ts_dict_is_visible$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_ts_parser_is_visible" id="Function-baa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ts_parser_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_ts_parser_is_visible$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_ts_template_is_visible" id="Function-bc3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ts_template_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_ts_template_is_visible$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_type_is_visible" id="Function-25ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_type_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_type_is_visible$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_typeof" id="Function-41f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_typeof("any")
 RETURNS regtype
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$pg_typeof$function$
;]]></string>
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="pg_wal_lsn_diff" id="Function-2709" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_wal_lsn_diff(pg_lsn, pg_lsn)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_wal_lsn_diff$function$
;]]></string>
			<input_param jt="-1" type="pg_lsn" inOut="1" />
			<input_param jt="-1" type="pg_lsn" inOut="1" />
		</function>
		<function name="pg_wal_replay_pause" id="Function-1a4c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_wal_replay_pause()
 RETURNS void
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_wal_replay_pause$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_wal_replay_resume" id="Function-959" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_wal_replay_resume()
 RETURNS void
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_wal_replay_resume$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="pg_walfile_name" id="Function-ab1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_walfile_name(pg_lsn)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_walfile_name$function$
;]]></string>
			<input_param jt="-1" type="pg_lsn" inOut="1" />
		</function>
		<function name="pg_walfile_name_offset" id="Function-af3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_walfile_name_offset(lsn pg_lsn, OUT file_name text, OUT file_offset integer)
 RETURNS record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_walfile_name_offset$function$
;]]></string>
			<input_param name="lsn" jt="-1" type="pg_lsn" inOut="1" />
			<input_param name="file_name" jt="-1" type="text" inOut="3" />
			<input_param name="file_offset" jt="-1" type="integer" inOut="3" />
		</function>
		<function name="pg_xact_commit_timestamp" id="Function-16dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_xact_commit_timestamp(xid)
 RETURNS timestamp with time zone
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_xact_commit_timestamp$function$
;]]></string>
			<input_param jt="-1" type="xid" inOut="1" />
		</function>
		<function name="phraseto_tsquery" id="Function-592" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.phraseto_tsquery(text)
 RETURNS tsquery
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$phraseto_tsquery$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="phraseto_tsquery" id="Function-5e4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.phraseto_tsquery(regconfig, text)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$phraseto_tsquery_byid$function$
;]]></string>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pi" id="Function-31f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pi()
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dpi$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="plainto_tsquery" id="Function-597" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.plainto_tsquery(regconfig, text)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$plainto_tsquery_byid$function$
;]]></string>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="plainto_tsquery" id="Function-cce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.plainto_tsquery(text)
 RETURNS tsquery
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$plainto_tsquery$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="plpgsql_call_handler" id="Function-ddd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.plpgsql_call_handler()
 RETURNS language_handler
 LANGUAGE c
AS '$libdir/plpgsql', $function$plpgsql_call_handler$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="plpgsql_inline_handler" id="Function-1120" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.plpgsql_inline_handler(internal)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/plpgsql', $function$plpgsql_inline_handler$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="plpgsql_validator" id="Function-12d6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.plpgsql_validator(oid)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/plpgsql', $function$plpgsql_validator$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="point" id="Function-17c6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point(circle)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_center$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="point" id="Function-140e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point(double precision, double precision)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$construct_point$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="point" id="Function-111a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point(lseg)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_center$function$
;]]></string>
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="point" id="Function-8d4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point(path)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_center$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="point" id="Function-4ad" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point(box)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_center$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="point" id="Function-778" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point(polygon)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_center$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="point_above" id="Function-1bc1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_above(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_above$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="point_add" id="Function-c59" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_add(point, point)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_add$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="point_below" id="Function-128c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_below(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_below$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="point_distance" id="Function-1dc7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_distance(point, point)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_distance$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="point_div" id="Function-20d3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_div(point, point)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_div$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="point_eq" id="Function-22" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_eq(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_eq$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="point_horiz" id="Function-171e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_horiz(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_horiz$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="point_in" id="Function-7d1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_in(cstring)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="point_left" id="Function-18a4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_left(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_left$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="point_mul" id="Function-1cdf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_mul(point, point)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_mul$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="point_ne" id="Function-30e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_ne(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_ne$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="point_out" id="Function-c4e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_out(point)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_out$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="point_recv" id="Function-20f6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_recv(internal)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="point_right" id="Function-2654" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_right(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_right$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="point_send" id="Function-1aed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_send(point)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_send$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="point_sub" id="Function-1dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_sub(point, point)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_sub$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="point_vert" id="Function-8e9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_vert(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_vert$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="poly_above" id="Function-2db" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_above(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_above$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="poly_below" id="Function-1bde" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_below(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_below$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="poly_center" id="Function-aee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_center(polygon)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_center$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="poly_contain" id="Function-24f3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_contain(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_contain$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="poly_contain_pt" id="Function-168c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_contain_pt(polygon, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_contain_pt$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="poly_contained" id="Function-20a6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_contained(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_contained$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="poly_distance" id="Function-a68" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_distance(polygon, polygon)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_distance$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="poly_in" id="Function-11ed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_in(cstring)
 RETURNS polygon
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="poly_left" id="Function-3e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_left(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_left$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="poly_npoints" id="Function-a29" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_npoints(polygon)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_npoints$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="poly_out" id="Function-154" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_out(polygon)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_out$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="poly_overabove" id="Function-269" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_overabove(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_overabove$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="poly_overbelow" id="Function-332" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_overbelow(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_overbelow$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="poly_overlap" id="Function-2361" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_overlap(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_overlap$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="poly_overleft" id="Function-83b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_overleft(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_overleft$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="poly_overright" id="Function-1208" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_overright(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_overright$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="poly_recv" id="Function-16d3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_recv(internal)
 RETURNS polygon
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="poly_right" id="Function-1c67" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_right(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_right$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="poly_same" id="Function-ce2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_same(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_same$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="poly_send" id="Function-b2c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_send(polygon)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_send$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="polygon" id="Function-671" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.polygon(box)
 RETURNS polygon
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_poly$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="polygon" id="Function-98d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.polygon(path)
 RETURNS polygon
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_poly$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="polygon" id="Function-77a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.polygon(integer, circle)
 RETURNS polygon
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_poly$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="polygon" id="Function-c51" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.polygon(circle)
 RETURNS polygon
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.polygon(12, $1)$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="popen" id="Function-1af4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.popen(path)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_open$function$
;]]></string>
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="position" id="Function-34c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."position"(bit, bit)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitposition$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="position" id="Function-245b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."position"(bytea, bytea)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteapos$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="position" id="Function-1d0f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."position"(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textpos$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="positionjoinsel" id="Function-9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.positionjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$positionjoinsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="positionsel" id="Function-1949" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.positionsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$positionsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="postgresql_fdw_validator" id="Function-182e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.postgresql_fdw_validator(text[], oid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$postgresql_fdw_validator$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pow" id="Function-118b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pow(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dpow$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="pow" id="Function-17f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pow(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_power$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="power" id="Function-22ac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.power(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dpow$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="power" id="Function-2432" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.power(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_power$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="prefixjoinsel" id="Function-17d8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.prefixjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$prefixjoinsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="prefixsel" id="Function-1886" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.prefixsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$prefixsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="prsd_end" id="Function-aec" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.prsd_end(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$prsd_end$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="prsd_headline" id="Function-360" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.prsd_headline(internal, internal, tsquery)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$prsd_headline$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="prsd_lextype" id="Function-b0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.prsd_lextype(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$prsd_lextype$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="prsd_nexttoken" id="Function-a10" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.prsd_nexttoken(internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$prsd_nexttoken$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="prsd_start" id="Function-1c13" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.prsd_start(internal, integer)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$prsd_start$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="pt_contained_circle" id="Function-828" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pt_contained_circle(point, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pt_contained_circle$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="pt_contained_poly" id="Function-c25" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pt_contained_poly(point, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pt_contained_poly$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="query_to_xml" id="Function-187c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.query_to_xml(query text, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STRICT COST 100
AS $function$query_to_xml$function$
;]]></string>
			<input_param name="query" jt="-1" type="text" inOut="1" />
			<input_param name="nulls" jt="-1" type="boolean" inOut="1" />
			<input_param name="tableforest" jt="-1" type="boolean" inOut="1" />
			<input_param name="targetns" jt="-1" type="text" inOut="1" />
		</function>
		<function name="query_to_xml_and_xmlschema" id="Function-f95" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.query_to_xml_and_xmlschema(query text, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STRICT COST 100
AS $function$query_to_xml_and_xmlschema$function$
;]]></string>
			<input_param name="query" jt="-1" type="text" inOut="1" />
			<input_param name="nulls" jt="-1" type="boolean" inOut="1" />
			<input_param name="tableforest" jt="-1" type="boolean" inOut="1" />
			<input_param name="targetns" jt="-1" type="text" inOut="1" />
		</function>
		<function name="query_to_xmlschema" id="Function-4ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.query_to_xmlschema(query text, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STRICT COST 100
AS $function$query_to_xmlschema$function$
;]]></string>
			<input_param name="query" jt="-1" type="text" inOut="1" />
			<input_param name="nulls" jt="-1" type="boolean" inOut="1" />
			<input_param name="tableforest" jt="-1" type="boolean" inOut="1" />
			<input_param name="targetns" jt="-1" type="text" inOut="1" />
		</function>
		<function name="querytree" id="Function-22d2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.querytree(tsquery)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquerytree$function$
;]]></string>
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="quote_ident" id="Function-e69" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.quote_ident(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$quote_ident$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="quote_literal" id="Function-2449" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.quote_literal(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$quote_literal$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="quote_literal" id="Function-159a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.quote_literal(anyelement)
 RETURNS text
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.quote_literal($1::pg_catalog.text)$function$
;]]></string>
			<input_param jt="-1" type="anyelement" inOut="1" />
		</function>
		<function name="quote_nullable" id="Function-23dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.quote_nullable(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$quote_nullable$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="quote_nullable" id="Function-8e9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.quote_nullable(anyelement)
 RETURNS text
 LANGUAGE sql
 STABLE PARALLEL SAFE COST 1
AS $function$select pg_catalog.quote_nullable($1::pg_catalog.text)$function$
;]]></string>
			<input_param jt="-1" type="anyelement" inOut="1" />
		</function>
		<function name="radians" id="Function-1bed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.radians(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$radians$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="radius" id="Function-2428" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.radius(circle)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_radius$function$
;]]></string>
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="random" id="Function-1abe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.random()
 RETURNS double precision
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$drandom$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="range_adjacent" id="Function-927" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_adjacent(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_adjacent$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="range_after" id="Function-10df" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_after(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_after$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="range_before" id="Function-2066" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_before(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_before$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="range_cmp" id="Function-19c3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_cmp(anyrange, anyrange)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_cmp$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="range_contained_by" id="Function-601" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_contained_by(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_contained_by$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="range_contains" id="Function-1332" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_contains(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_contains$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="range_contains_elem" id="Function-11e2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_contains_elem(anyrange, anyelement)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_contains_elem$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="anyelement" inOut="1" />
		</function>
		<function name="range_eq" id="Function-2019" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_eq(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_eq$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="range_ge" id="Function-174" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_ge(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_ge$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="range_gist_consistent" id="Function-ac0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_gist_consistent(internal, anyrange, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_gist_consistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="range_gist_penalty" id="Function-c43" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_gist_penalty(internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_gist_penalty$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="range_gist_picksplit" id="Function-356" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_gist_picksplit(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_gist_picksplit$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="range_gist_same" id="Function-874" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_gist_same(anyrange, anyrange, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_gist_same$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="range_gist_union" id="Function-928" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_gist_union(internal, internal)
 RETURNS anyrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_gist_union$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="range_gt" id="Function-d72" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_gt(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_gt$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="range_in" id="Function-43b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_in(cstring, oid, integer)
 RETURNS anyrange
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$range_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="range_intersect" id="Function-461" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_intersect(anyrange, anyrange)
 RETURNS anyrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_intersect$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="range_le" id="Function-18ac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_le(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_le$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="range_lt" id="Function-79c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_lt(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_lt$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="range_merge" id="Function-1471" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_merge(anyrange, anyrange)
 RETURNS anyrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_merge$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="range_minus" id="Function-1f0b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_minus(anyrange, anyrange)
 RETURNS anyrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_minus$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="range_ne" id="Function-18fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_ne(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_ne$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="range_out" id="Function-c9d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_out(anyrange)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$range_out$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="range_overlaps" id="Function-1fbc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_overlaps(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_overlaps$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="range_overleft" id="Function-777" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_overleft(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_overleft$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="range_overright" id="Function-178b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_overright(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_overright$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="range_recv" id="Function-f54" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_recv(internal, oid, integer)
 RETURNS anyrange
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$range_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="range_send" id="Function-1c37" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_send(anyrange)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$range_send$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="range_typanalyze" id="Function-3da" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_typanalyze(internal)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$range_typanalyze$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="range_union" id="Function-1dfb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_union(anyrange, anyrange)
 RETURNS anyrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_union$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="rangesel" id="Function-1302" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.rangesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$rangesel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="rank" id="Function-f07" isSystem="false" params_known="n" >
			<string><![CDATA[create function rank window_rank;]]></string>
		</function>
		<function name="rank_final" id="Function-1a16" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.rank_final(internal, VARIADIC "any")
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$hypothetical_rank_final$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="record_eq" id="Function-2f9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_eq(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_eq$function$
;]]></string>
			<input_param jt="-1" type="record" inOut="1" />
			<input_param jt="-1" type="record" inOut="1" />
		</function>
		<function name="record_ge" id="Function-1f57" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_ge(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_ge$function$
;]]></string>
			<input_param jt="-1" type="record" inOut="1" />
			<input_param jt="-1" type="record" inOut="1" />
		</function>
		<function name="record_gt" id="Function-2155" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_gt(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_gt$function$
;]]></string>
			<input_param jt="-1" type="record" inOut="1" />
			<input_param jt="-1" type="record" inOut="1" />
		</function>
		<function name="record_image_eq" id="Function-140" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_image_eq(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_image_eq$function$
;]]></string>
			<input_param jt="-1" type="record" inOut="1" />
			<input_param jt="-1" type="record" inOut="1" />
		</function>
		<function name="record_image_ge" id="Function-1a37" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_image_ge(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_image_ge$function$
;]]></string>
			<input_param jt="-1" type="record" inOut="1" />
			<input_param jt="-1" type="record" inOut="1" />
		</function>
		<function name="record_image_gt" id="Function-19a5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_image_gt(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_image_gt$function$
;]]></string>
			<input_param jt="-1" type="record" inOut="1" />
			<input_param jt="-1" type="record" inOut="1" />
		</function>
		<function name="record_image_le" id="Function-1760" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_image_le(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_image_le$function$
;]]></string>
			<input_param jt="-1" type="record" inOut="1" />
			<input_param jt="-1" type="record" inOut="1" />
		</function>
		<function name="record_image_lt" id="Function-c91" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_image_lt(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_image_lt$function$
;]]></string>
			<input_param jt="-1" type="record" inOut="1" />
			<input_param jt="-1" type="record" inOut="1" />
		</function>
		<function name="record_image_ne" id="Function-180f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_image_ne(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_image_ne$function$
;]]></string>
			<input_param jt="-1" type="record" inOut="1" />
			<input_param jt="-1" type="record" inOut="1" />
		</function>
		<function name="record_in" id="Function-208d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_in(cstring, oid, integer)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$record_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="record_le" id="Function-17cb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_le(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_le$function$
;]]></string>
			<input_param jt="-1" type="record" inOut="1" />
			<input_param jt="-1" type="record" inOut="1" />
		</function>
		<function name="record_lt" id="Function-f43" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_lt(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_lt$function$
;]]></string>
			<input_param jt="-1" type="record" inOut="1" />
			<input_param jt="-1" type="record" inOut="1" />
		</function>
		<function name="record_ne" id="Function-2511" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_ne(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_ne$function$
;]]></string>
			<input_param jt="-1" type="record" inOut="1" />
			<input_param jt="-1" type="record" inOut="1" />
		</function>
		<function name="record_out" id="Function-1473" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_out(record)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$record_out$function$
;]]></string>
			<input_param jt="-1" type="record" inOut="1" />
		</function>
		<function name="record_recv" id="Function-5c8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_recv(internal, oid, integer)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$record_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="record_send" id="Function-782" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_send(record)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$record_send$function$
;]]></string>
			<input_param jt="-1" type="record" inOut="1" />
		</function>
		<function name="regclass" id="Function-17c8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regclass(text)
 RETURNS regclass
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$text_regclass$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regclassin" id="Function-e89" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regclassin(cstring)
 RETURNS regclass
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regclassin$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="regclassout" id="Function-220d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regclassout(regclass)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regclassout$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
		</function>
		<function name="regclassrecv" id="Function-2326" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regclassrecv(internal)
 RETURNS regclass
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regclassrecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="regclasssend" id="Function-24ef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regclasssend(regclass)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regclasssend$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
		</function>
		<function name="regconfigin" id="Function-1106" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regconfigin(cstring)
 RETURNS regconfig
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regconfigin$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="regconfigout" id="Function-26a3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regconfigout(regconfig)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regconfigout$function$
;]]></string>
			<input_param jt="-1" type="regconfig" inOut="1" />
		</function>
		<function name="regconfigrecv" id="Function-1552" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regconfigrecv(internal)
 RETURNS regconfig
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regconfigrecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="regconfigsend" id="Function-13fe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regconfigsend(regconfig)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regconfigsend$function$
;]]></string>
			<input_param jt="-1" type="regconfig" inOut="1" />
		</function>
		<function name="regdictionaryin" id="Function-6dc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regdictionaryin(cstring)
 RETURNS regdictionary
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regdictionaryin$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="regdictionaryout" id="Function-e0f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regdictionaryout(regdictionary)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regdictionaryout$function$
;]]></string>
			<input_param jt="-1" type="regdictionary" inOut="1" />
		</function>
		<function name="regdictionaryrecv" id="Function-62d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regdictionaryrecv(internal)
 RETURNS regdictionary
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regdictionaryrecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="regdictionarysend" id="Function-1653" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regdictionarysend(regdictionary)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regdictionarysend$function$
;]]></string>
			<input_param jt="-1" type="regdictionary" inOut="1" />
		</function>
		<function name="regexeqjoinsel" id="Function-2589" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexeqjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regexeqjoinsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="regexeqsel" id="Function-2563" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexeqsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regexeqsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="regexnejoinsel" id="Function-4fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexnejoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regexnejoinsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="regexnesel" id="Function-bc1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexnesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regexnesel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="regexp_match" id="Function-23ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_match(text, text)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_match_no_flags$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_match" id="Function-2502" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_match(text, text, text)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_match$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_matches" id="Function-25c7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_matches(text, text)
 RETURNS SETOF text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 1
AS $function$regexp_matches_no_flags$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_matches" id="Function-1f74" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_matches(text, text, text)
 RETURNS SETOF text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 10
AS $function$regexp_matches$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_replace" id="Function-116d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_replace(text, text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textregexreplace_noopt$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_replace" id="Function-1787" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_replace(text, text, text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textregexreplace$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_split_to_array" id="Function-123f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_split_to_array(text, text)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_split_to_array_no_flags$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_split_to_array" id="Function-556" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_split_to_array(text, text, text)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_split_to_array$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_split_to_table" id="Function-cc6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_split_to_table(text, text)
 RETURNS SETOF text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_split_to_table_no_flags$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_split_to_table" id="Function-1781" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_split_to_table(text, text, text)
 RETURNS SETOF text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_split_to_table$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regnamespacein" id="Function-12bd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regnamespacein(cstring)
 RETURNS regnamespace
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regnamespacein$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="regnamespaceout" id="Function-12cb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regnamespaceout(regnamespace)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regnamespaceout$function$
;]]></string>
			<input_param jt="-1" type="regnamespace" inOut="1" />
		</function>
		<function name="regnamespacerecv" id="Function-ba5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regnamespacerecv(internal)
 RETURNS regnamespace
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regnamespacerecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="regnamespacesend" id="Function-758" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regnamespacesend(regnamespace)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regnamespacesend$function$
;]]></string>
			<input_param jt="-1" type="regnamespace" inOut="1" />
		</function>
		<function name="regoperatorin" id="Function-1826" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regoperatorin(cstring)
 RETURNS regoperator
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regoperatorin$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="regoperatorout" id="Function-634" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regoperatorout(regoperator)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regoperatorout$function$
;]]></string>
			<input_param jt="-1" type="regoperator" inOut="1" />
		</function>
		<function name="regoperatorrecv" id="Function-123e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regoperatorrecv(internal)
 RETURNS regoperator
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regoperatorrecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="regoperatorsend" id="Function-22f8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regoperatorsend(regoperator)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regoperatorsend$function$
;]]></string>
			<input_param jt="-1" type="regoperator" inOut="1" />
		</function>
		<function name="regoperin" id="Function-ee7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regoperin(cstring)
 RETURNS regoper
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regoperin$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="regoperout" id="Function-1ada" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regoperout(regoper)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regoperout$function$
;]]></string>
			<input_param jt="-1" type="regoper" inOut="1" />
		</function>
		<function name="regoperrecv" id="Function-16b9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regoperrecv(internal)
 RETURNS regoper
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regoperrecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="regopersend" id="Function-1022" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regopersend(regoper)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regopersend$function$
;]]></string>
			<input_param jt="-1" type="regoper" inOut="1" />
		</function>
		<function name="regprocedurein" id="Function-869" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regprocedurein(cstring)
 RETURNS regprocedure
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regprocedurein$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="regprocedureout" id="Function-c5e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regprocedureout(regprocedure)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regprocedureout$function$
;]]></string>
			<input_param jt="-1" type="regprocedure" inOut="1" />
		</function>
		<function name="regprocedurerecv" id="Function-1102" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regprocedurerecv(internal)
 RETURNS regprocedure
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regprocedurerecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="regproceduresend" id="Function-2da" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regproceduresend(regprocedure)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regproceduresend$function$
;]]></string>
			<input_param jt="-1" type="regprocedure" inOut="1" />
		</function>
		<function name="regprocin" id="Function-13d6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regprocin(cstring)
 RETURNS regproc
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regprocin$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="regprocout" id="Function-1022" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regprocout(regproc)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regprocout$function$
;]]></string>
			<input_param jt="-1" type="regproc" inOut="1" />
		</function>
		<function name="regprocrecv" id="Function-14d5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regprocrecv(internal)
 RETURNS regproc
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regprocrecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="regprocsend" id="Function-2443" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regprocsend(regproc)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regprocsend$function$
;]]></string>
			<input_param jt="-1" type="regproc" inOut="1" />
		</function>
		<function name="regrolein" id="Function-1246" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regrolein(cstring)
 RETURNS regrole
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regrolein$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="regroleout" id="Function-2323" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regroleout(regrole)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regroleout$function$
;]]></string>
			<input_param jt="-1" type="regrole" inOut="1" />
		</function>
		<function name="regrolerecv" id="Function-c25" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regrolerecv(internal)
 RETURNS regrole
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regrolerecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="regrolesend" id="Function-23dc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regrolesend(regrole)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regrolesend$function$
;]]></string>
			<input_param jt="-1" type="regrole" inOut="1" />
		</function>
		<function name="regtypein" id="Function-224d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regtypein(cstring)
 RETURNS regtype
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regtypein$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="regtypeout" id="Function-2709" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regtypeout(regtype)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regtypeout$function$
;]]></string>
			<input_param jt="-1" type="regtype" inOut="1" />
		</function>
		<function name="regtyperecv" id="Function-2329" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regtyperecv(internal)
 RETURNS regtype
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regtyperecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="regtypesend" id="Function-232f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regtypesend(regtype)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regtypesend$function$
;]]></string>
			<input_param jt="-1" type="regtype" inOut="1" />
		</function>
		<function name="repeat" id="Function-407" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.repeat(text, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$repeat$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="replace" id="Function-1574" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.replace(text, text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$replace_text$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="reverse" id="Function-2196" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.reverse(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_reverse$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="right" id="Function-8ae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."right"(text, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_right$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="round" id="Function-a4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.round(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dround$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="round" id="Function-a87" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.round(numeric, integer)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_round$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="round" id="Function-c3a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.round(numeric)
 RETURNS numeric
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.round($1,0)$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="row_number" id="Function-eb7" isSystem="false" params_known="n" >
			<string><![CDATA[create function row_number window_row_number;]]></string>
		</function>
		<function name="row_security_active" id="Function-b60" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.row_security_active(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$row_security_active$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="row_security_active" id="Function-60" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.row_security_active(text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$row_security_active_name$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="row_to_json" id="Function-133b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.row_to_json(record)
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$row_to_json$function$
;]]></string>
			<input_param jt="-1" type="record" inOut="1" />
		</function>
		<function name="row_to_json" id="Function-c70" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.row_to_json(record, boolean)
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$row_to_json_pretty$function$
;]]></string>
			<input_param jt="-1" type="record" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="rpad" id="Function-2416" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.rpad(text, integer, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$rpad$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="rpad" id="Function-16e4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.rpad(text, integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.rpad($1, $2, ' ')$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="rtrim" id="Function-2047" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.rtrim(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$rtrim$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="rtrim" id="Function-f94" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.rtrim(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$rtrim1$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="satisfies_hash_partition" id="Function-2084" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.satisfies_hash_partition(oid, integer, integer, VARIADIC "any")
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$satisfies_hash_partition$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="scalargejoinsel" id="Function-4a8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.scalargejoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$scalargejoinsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="scalargesel" id="Function-e12" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.scalargesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$scalargesel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="scalargtjoinsel" id="Function-774" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.scalargtjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$scalargtjoinsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="scalargtsel" id="Function-86" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.scalargtsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$scalargtsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="scalarlejoinsel" id="Function-d39" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.scalarlejoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$scalarlejoinsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="scalarlesel" id="Function-5dc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.scalarlesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$scalarlesel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="scalarltjoinsel" id="Function-99d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.scalarltjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$scalarltjoinsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="scalarltsel" id="Function-f0e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.scalarltsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$scalarltsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="scale" id="Function-15eb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.scale(numeric)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_scale$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="schema_to_xml" id="Function-1e6b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.schema_to_xml(schema name, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$schema_to_xml$function$
;]]></string>
			<input_param name="schema" jt="-1" type="name" inOut="1" />
			<input_param name="nulls" jt="-1" type="boolean" inOut="1" />
			<input_param name="tableforest" jt="-1" type="boolean" inOut="1" />
			<input_param name="targetns" jt="-1" type="text" inOut="1" />
		</function>
		<function name="schema_to_xml_and_xmlschema" id="Function-2307" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.schema_to_xml_and_xmlschema(schema name, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$schema_to_xml_and_xmlschema$function$
;]]></string>
			<input_param name="schema" jt="-1" type="name" inOut="1" />
			<input_param name="nulls" jt="-1" type="boolean" inOut="1" />
			<input_param name="tableforest" jt="-1" type="boolean" inOut="1" />
			<input_param name="targetns" jt="-1" type="text" inOut="1" />
		</function>
		<function name="schema_to_xmlschema" id="Function-1f23" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.schema_to_xmlschema(schema name, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$schema_to_xmlschema$function$
;]]></string>
			<input_param name="schema" jt="-1" type="name" inOut="1" />
			<input_param name="nulls" jt="-1" type="boolean" inOut="1" />
			<input_param name="tableforest" jt="-1" type="boolean" inOut="1" />
			<input_param name="targetns" jt="-1" type="text" inOut="1" />
		</function>
		<function name="session_user" id="Function-2685" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."session_user"()
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$session_user$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="set_bit" id="Function-17a3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.set_bit(bit, integer, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitsetbit$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="set_bit" id="Function-1552" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.set_bit(bytea, integer, integer)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteaSetBit$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="set_byte" id="Function-c76" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.set_byte(bytea, integer, integer)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteaSetByte$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="set_config" id="Function-1673" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.set_config(text, text, boolean)
 RETURNS text
 LANGUAGE internal
AS $function$set_config_by_name$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="set_masklen" id="Function-b92" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.set_masklen(inet, integer)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_set_masklen$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="set_masklen" id="Function-f27" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.set_masklen(cidr, integer)
 RETURNS cidr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidr_set_masklen$function$
;]]></string>
			<input_param jt="-1" type="cidr" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="setseed" id="Function-1af8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.setseed(double precision)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$setseed$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="setval" id="Function-1117" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.setval(regclass, bigint)
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$setval_oid$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="setval" id="Function-254b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.setval(regclass, bigint, boolean)
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$setval3_oid$function$
;]]></string>
			<input_param jt="-1" type="regclass" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="setweight" id="Function-1cb9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.setweight(tsvector, "char", text[])
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_setweight_by_filter$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="setweight" id="Function-1a31" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.setweight(tsvector, "char")
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_setweight$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
		</function>
		<function name="sha224" id="Function-e6c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sha224(bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$sha224_bytea$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="sha256" id="Function-22f1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sha256(bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$sha256_bytea$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="sha384" id="Function-668" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sha384(bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$sha384_bytea$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="sha512" id="Function-1f3b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sha512(bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$sha512_bytea$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="shell_in" id="Function-b23" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.shell_in(cstring)
 RETURNS opaque
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$shell_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="shell_out" id="Function-d85" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.shell_out(opaque)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$shell_out$function$
;]]></string>
			<input_param jt="-1" type="opaque" inOut="1" />
		</function>
		<function name="shift_jis_2004_to_euc_jis_2004" id="Function-136d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.shift_jis_2004_to_euc_jis_2004(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc2004_sjis2004', $function$shift_jis_2004_to_euc_jis_2004$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="shift_jis_2004_to_utf8" id="Function-1b1c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.shift_jis_2004_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_sjis2004', $function$shift_jis_2004_to_utf8$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="shobj_description" id="Function-17" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.shobj_description(oid, name)
 RETURNS text
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT
AS $function$select description from pg_catalog.pg_shdescription where objoid = $1 and classoid = (select oid from pg_catalog.pg_class where relname = $2 and relnamespace = 11)$function$
;]]></string>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="sign" id="Function-1d18" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sign(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_sign$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="sign" id="Function-1d37" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sign(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsign$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="similar_escape" id="Function-1702" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.similar_escape(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$similar_escape$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="sin" id="Function-3f0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sin(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsin$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="sind" id="Function-ed1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sind(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsind$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="sinh" id="Function-48d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sinh(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsinh$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="sjis_to_euc_jp" id="Function-1f22" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sjis_to_euc_jp(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_jp_and_sjis', $function$sjis_to_euc_jp$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="sjis_to_mic" id="Function-2124" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sjis_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_jp_and_sjis', $function$sjis_to_mic$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="sjis_to_utf8" id="Function-885" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sjis_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_sjis', $function$sjis_to_utf8$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="slope" id="Function-7a7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.slope(point, point)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_slope$function$
;]]></string>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="spg_bbox_quad_config" id="Function-ff1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_bbox_quad_config(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_bbox_quad_config$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spg_box_quad_choose" id="Function-1d67" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_box_quad_choose(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_box_quad_choose$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spg_box_quad_config" id="Function-d9e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_box_quad_config(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_box_quad_config$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spg_box_quad_inner_consistent" id="Function-826" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_box_quad_inner_consistent(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_box_quad_inner_consistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spg_box_quad_leaf_consistent" id="Function-b94" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_box_quad_leaf_consistent(internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_box_quad_leaf_consistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spg_box_quad_picksplit" id="Function-b3e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_box_quad_picksplit(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_box_quad_picksplit$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spg_kd_choose" id="Function-82b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_kd_choose(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_kd_choose$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spg_kd_config" id="Function-270a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_kd_config(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_kd_config$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spg_kd_inner_consistent" id="Function-401" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_kd_inner_consistent(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_kd_inner_consistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spg_kd_picksplit" id="Function-119d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_kd_picksplit(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_kd_picksplit$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spg_poly_quad_compress" id="Function-1bfb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_poly_quad_compress(polygon)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_poly_quad_compress$function$
;]]></string>
			<input_param jt="-1" type="polygon" inOut="1" />
		</function>
		<function name="spg_quad_choose" id="Function-1f20" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_quad_choose(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_quad_choose$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spg_quad_config" id="Function-103c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_quad_config(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_quad_config$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spg_quad_inner_consistent" id="Function-846" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_quad_inner_consistent(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_quad_inner_consistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spg_quad_leaf_consistent" id="Function-15dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_quad_leaf_consistent(internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_quad_leaf_consistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spg_quad_picksplit" id="Function-13d0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_quad_picksplit(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_quad_picksplit$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spg_range_quad_choose" id="Function-14b0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_range_quad_choose(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_range_quad_choose$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spg_range_quad_config" id="Function-427" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_range_quad_config(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_range_quad_config$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spg_range_quad_inner_consistent" id="Function-9d0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_range_quad_inner_consistent(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_range_quad_inner_consistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spg_range_quad_leaf_consistent" id="Function-989" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_range_quad_leaf_consistent(internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_range_quad_leaf_consistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spg_range_quad_picksplit" id="Function-2038" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_range_quad_picksplit(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_range_quad_picksplit$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spg_text_choose" id="Function-797" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_text_choose(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_text_choose$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spg_text_config" id="Function-20a7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_text_config(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_text_config$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spg_text_inner_consistent" id="Function-f8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_text_inner_consistent(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_text_inner_consistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spg_text_leaf_consistent" id="Function-1b1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_text_leaf_consistent(internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_text_leaf_consistent$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spg_text_picksplit" id="Function-de2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_text_picksplit(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_text_picksplit$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="spghandler" id="Function-145e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spghandler(internal)
 RETURNS index_am_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$spghandler$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="split_part" id="Function-38a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.split_part(text, text, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$split_text$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="sqrt" id="Function-109b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sqrt(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsqrt$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="sqrt" id="Function-121e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sqrt(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_sqrt$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="starts_with" id="Function-21f4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.starts_with(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$text_starts_with$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="statement_timestamp" id="Function-3d9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.statement_timestamp()
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$statement_timestamp$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="string_agg_finalfn" id="Function-a4b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.string_agg_finalfn(internal)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$string_agg_finalfn$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="string_agg_transfn" id="Function-26af" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.string_agg_transfn(internal, text, text)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$string_agg_transfn$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="string_to_array" id="Function-142e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.string_to_array(text, text, text)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$text_to_array_null$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="string_to_array" id="Function-1796" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.string_to_array(text, text)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$text_to_array$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="strip" id="Function-5e4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.strip(tsvector)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_strip$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
		</function>
		<function name="strpos" id="Function-1d7d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.strpos(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textpos$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="substr" id="Function-a6a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.substr(bytea, integer, integer)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bytea_substr$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="substr" id="Function-1b4d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.substr(bytea, integer)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bytea_substr_no_len$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="substr" id="Function-23a3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.substr(text, integer, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_substr$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="substr" id="Function-1543" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.substr(text, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_substr_no_len$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="substring" id="Function-1fb4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."substring"(bit, integer, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitsubstr$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="substring" id="Function-179" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."substring"(bit, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitsubstr_no_len$function$
;]]></string>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="substring" id="Function-2569" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."substring"(bytea, integer, integer)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bytea_substr$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="substring" id="Function-1710" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."substring"(bytea, integer)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bytea_substr_no_len$function$
;]]></string>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="substring" id="Function-1174" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."substring"(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textregexsubstr$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="substring" id="Function-1a3f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."substring"(text, text, text)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.substring($1, pg_catalog.similar_escape($2, $3))$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="substring" id="Function-1229" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."substring"(text, integer, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_substr$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="substring" id="Function-18f2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."substring"(text, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_substr_no_len$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="suppress_redundant_updates_trigger" id="Function-43b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.suppress_redundant_updates_trigger()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$suppress_redundant_updates_trigger$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="system" id="Function-1bb2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.system(internal)
 RETURNS tsm_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$tsm_system_handler$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="table_am_handler_in" id="Function-b5a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.table_am_handler_in(cstring)
 RETURNS table_am_handler
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$table_am_handler_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="table_am_handler_out" id="Function-12ec" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.table_am_handler_out(table_am_handler)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$table_am_handler_out$function$
;]]></string>
			<input_param jt="-1" type="table_am_handler" inOut="1" />
		</function>
		<function name="table_to_xml" id="Function-ed3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.table_to_xml(tbl regclass, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$table_to_xml$function$
;]]></string>
			<input_param name="tbl" jt="-1" type="regclass" inOut="1" />
			<input_param name="nulls" jt="-1" type="boolean" inOut="1" />
			<input_param name="tableforest" jt="-1" type="boolean" inOut="1" />
			<input_param name="targetns" jt="-1" type="text" inOut="1" />
		</function>
		<function name="table_to_xml_and_xmlschema" id="Function-f01" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.table_to_xml_and_xmlschema(tbl regclass, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$table_to_xml_and_xmlschema$function$
;]]></string>
			<input_param name="tbl" jt="-1" type="regclass" inOut="1" />
			<input_param name="nulls" jt="-1" type="boolean" inOut="1" />
			<input_param name="tableforest" jt="-1" type="boolean" inOut="1" />
			<input_param name="targetns" jt="-1" type="text" inOut="1" />
		</function>
		<function name="table_to_xmlschema" id="Function-6bf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.table_to_xmlschema(tbl regclass, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$table_to_xmlschema$function$
;]]></string>
			<input_param name="tbl" jt="-1" type="regclass" inOut="1" />
			<input_param name="nulls" jt="-1" type="boolean" inOut="1" />
			<input_param name="tableforest" jt="-1" type="boolean" inOut="1" />
			<input_param name="targetns" jt="-1" type="text" inOut="1" />
		</function>
		<function name="tan" id="Function-42c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tan(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtan$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="tand" id="Function-25de" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tand(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtand$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="tanh" id="Function-fb2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tanh(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtanh$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="text" id="Function-1dde" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text(xml)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xmltotext$function$
;]]></string>
			<input_param jt="-1" type="xml" inOut="1" />
		</function>
		<function name="text" id="Function-ae9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text(boolean)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$booltext$function$
;]]></string>
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="text" id="Function-1b02" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text(character)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$rtrim1$function$
;]]></string>
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="text" id="Function-268d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text(name)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$name_text$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="text" id="Function-14d8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text(inet)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_show$function$
;]]></string>
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="text" id="Function-21ea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text("char")
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$char_text$function$
;]]></string>
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
		</function>
		<function name="text_ge" id="Function-a6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_ge(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$text_ge$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="text_gt" id="Function-22c2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_gt(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$text_gt$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="text_larger" id="Function-187" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_larger(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$text_larger$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="text_le" id="Function-2356" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_le(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$text_le$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="text_lt" id="Function-a1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_lt(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$text_lt$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="text_pattern_ge" id="Function-1a61" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_pattern_ge(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$text_pattern_ge$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="text_pattern_gt" id="Function-13e8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_pattern_gt(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$text_pattern_gt$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="text_pattern_le" id="Function-2fc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_pattern_le(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$text_pattern_le$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="text_pattern_lt" id="Function-42f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_pattern_lt(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$text_pattern_lt$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="text_smaller" id="Function-205e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_smaller(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$text_smaller$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="textanycat" id="Function-50b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textanycat(text, anynonarray)
 RETURNS text
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT COST 1
AS $function$select $1 || $2::pg_catalog.text$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="anynonarray" inOut="1" />
		</function>
		<function name="textcat" id="Function-46c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textcat(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textcat$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="texteq" id="Function-24d0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.texteq(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$texteq$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="texteqname" id="Function-1e9b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.texteqname(text, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$texteqname$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="textgename" id="Function-4bd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textgename(text, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$textgename$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="textgtname" id="Function-156b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textgtname(text, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$textgtname$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="texticlike" id="Function-4ed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.texticlike(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT texticlike_support
AS $function$texticlike$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="texticlike_support" id="Function-2282" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.texticlike_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$texticlike_support$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="texticnlike" id="Function-1dc0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.texticnlike(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$texticnlike$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="texticregexeq" id="Function-22af" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.texticregexeq(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT texticregexeq_support
AS $function$texticregexeq$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="texticregexeq_support" id="Function-2657" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.texticregexeq_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$texticregexeq_support$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="texticregexne" id="Function-b8d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.texticregexne(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$texticregexne$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="textin" id="Function-433" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textin(cstring)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textin$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="textlen" id="Function-fcf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textlen(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textlen$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="textlename" id="Function-1ffe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textlename(text, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$textlename$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="textlike" id="Function-1593" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textlike(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT textlike_support
AS $function$textlike$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="textlike_support" id="Function-d46" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textlike_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textlike_support$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="textltname" id="Function-1c38" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textltname(text, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$textltname$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="textne" id="Function-1c99" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textne(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$textne$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="textnename" id="Function-2673" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textnename(text, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$textnename$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="textnlike" id="Function-191c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textnlike(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textnlike$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="textout" id="Function-abe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textout(text)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textout$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="textrecv" id="Function-221e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textrecv(internal)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$textrecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="textregexeq" id="Function-22ea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textregexeq(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT textregexeq_support
AS $function$textregexeq$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="textregexeq_support" id="Function-2122" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textregexeq_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textregexeq_support$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="textregexne" id="Function-c64" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textregexne(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textregexne$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="textsend" id="Function-3fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textsend(text)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$textsend$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="thesaurus_init" id="Function-6a4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.thesaurus_init(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$thesaurus_init$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="thesaurus_lexize" id="Function-23ae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.thesaurus_lexize(internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$thesaurus_lexize$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="tideq" id="Function-1529" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tideq(tid, tid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tideq$function$
;]]></string>
			<input_param jt="-1" type="tid" inOut="1" />
			<input_param jt="-1" type="tid" inOut="1" />
		</function>
		<function name="tidge" id="Function-2237" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidge(tid, tid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tidge$function$
;]]></string>
			<input_param jt="-1" type="tid" inOut="1" />
			<input_param jt="-1" type="tid" inOut="1" />
		</function>
		<function name="tidgt" id="Function-7bb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidgt(tid, tid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tidgt$function$
;]]></string>
			<input_param jt="-1" type="tid" inOut="1" />
			<input_param jt="-1" type="tid" inOut="1" />
		</function>
		<function name="tidin" id="Function-19fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidin(cstring)
 RETURNS tid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tidin$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="tidlarger" id="Function-140d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidlarger(tid, tid)
 RETURNS tid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tidlarger$function$
;]]></string>
			<input_param jt="-1" type="tid" inOut="1" />
			<input_param jt="-1" type="tid" inOut="1" />
		</function>
		<function name="tidle" id="Function-a73" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidle(tid, tid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tidle$function$
;]]></string>
			<input_param jt="-1" type="tid" inOut="1" />
			<input_param jt="-1" type="tid" inOut="1" />
		</function>
		<function name="tidlt" id="Function-ccd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidlt(tid, tid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tidlt$function$
;]]></string>
			<input_param jt="-1" type="tid" inOut="1" />
			<input_param jt="-1" type="tid" inOut="1" />
		</function>
		<function name="tidne" id="Function-5b8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidne(tid, tid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tidne$function$
;]]></string>
			<input_param jt="-1" type="tid" inOut="1" />
			<input_param jt="-1" type="tid" inOut="1" />
		</function>
		<function name="tidout" id="Function-2bc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidout(tid)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tidout$function$
;]]></string>
			<input_param jt="-1" type="tid" inOut="1" />
		</function>
		<function name="tidrecv" id="Function-fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidrecv(internal)
 RETURNS tid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tidrecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="tidsend" id="Function-2274" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidsend(tid)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tidsend$function$
;]]></string>
			<input_param jt="-1" type="tid" inOut="1" />
		</function>
		<function name="tidsmaller" id="Function-cbf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidsmaller(tid, tid)
 RETURNS tid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tidsmaller$function$
;]]></string>
			<input_param jt="-1" type="tid" inOut="1" />
			<input_param jt="-1" type="tid" inOut="1" />
		</function>
		<function name="time" id="Function-b5c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."time"(timestamp without time zone)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_time$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="time" id="Function-235e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."time"(interval)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_time$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="time" id="Function-19af" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."time"(time without time zone, integer)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT time_support
AS $function$time_scale$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="time" id="Function-1a37" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."time"(timestamp with time zone)
 RETURNS time without time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_time$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="time" id="Function-15e8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."time"(time with time zone)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_time$function$
;]]></string>
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="time_cmp" id="Function-1c7e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_cmp(time without time zone, time without time zone)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$time_cmp$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="time without time zone" inOut="1" />
		</function>
		<function name="time_eq" id="Function-5df" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_eq(time without time zone, time without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$time_eq$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="time without time zone" inOut="1" />
		</function>
		<function name="time_ge" id="Function-10d5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_ge(time without time zone, time without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$time_ge$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="time without time zone" inOut="1" />
		</function>
		<function name="time_gt" id="Function-202d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_gt(time without time zone, time without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$time_gt$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="time without time zone" inOut="1" />
		</function>
		<function name="time_hash" id="Function-c40" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_hash(time without time zone)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_hash$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
		</function>
		<function name="time_hash_extended" id="Function-ad5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_hash_extended(time without time zone, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_hash_extended$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="time_in" id="Function-25db" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_in(cstring, oid, integer)
 RETURNS time without time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$time_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="time_larger" id="Function-21b4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_larger(time without time zone, time without time zone)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_larger$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="time without time zone" inOut="1" />
		</function>
		<function name="time_le" id="Function-1238" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_le(time without time zone, time without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$time_le$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="time without time zone" inOut="1" />
		</function>
		<function name="time_lt" id="Function-7be" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_lt(time without time zone, time without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$time_lt$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="time without time zone" inOut="1" />
		</function>
		<function name="time_mi_interval" id="Function-53d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_mi_interval(time without time zone, interval)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_mi_interval$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="time_mi_time" id="Function-a60" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_mi_time(time without time zone, time without time zone)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_mi_time$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="time without time zone" inOut="1" />
		</function>
		<function name="time_ne" id="Function-20d2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_ne(time without time zone, time without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$time_ne$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="time without time zone" inOut="1" />
		</function>
		<function name="time_out" id="Function-251a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_out(time without time zone)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_out$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
		</function>
		<function name="time_pl_interval" id="Function-e02" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_pl_interval(time without time zone, interval)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_pl_interval$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="time_recv" id="Function-ef7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_recv(internal, oid, integer)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="time_send" id="Function-14f6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_send(time without time zone)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_send$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
		</function>
		<function name="time_smaller" id="Function-8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_smaller(time without time zone, time without time zone)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_smaller$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="time without time zone" inOut="1" />
		</function>
		<function name="time_support" id="Function-23af" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_support$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="timedate_pl" id="Function-c58" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timedate_pl(time without time zone, date)
 RETURNS timestamp without time zone
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select ($2 + $1)$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="timeofday" id="Function-700" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timeofday()
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$timeofday$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="timestamp" id="Function-16ec" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."timestamp"(timestamp without time zone, integer)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT timestamp_support
AS $function$timestamp_scale$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="timestamp" id="Function-21ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."timestamp"(date)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_timestamp$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="timestamp" id="Function-cdf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."timestamp"(date, time without time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$datetime_timestamp$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="time without time zone" inOut="1" />
		</function>
		<function name="timestamp" id="Function-139b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."timestamp"(timestamp with time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_timestamp$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timestamp_cmp" id="Function-25c4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_cmp(timestamp without time zone, timestamp without time zone)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_cmp$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="timestamp_cmp_date" id="Function-15a9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_cmp_date(timestamp without time zone, date)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_cmp_date$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="timestamp_cmp_timestamptz" id="Function-25b0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_cmp_timestamptz(timestamp without time zone, timestamp with time zone)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_cmp_timestamptz$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timestamp_eq" id="Function-1ca3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_eq(timestamp without time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_eq$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="timestamp_eq_date" id="Function-d9c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_eq_date(timestamp without time zone, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_eq_date$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="timestamp_eq_timestamptz" id="Function-f84" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_eq_timestamptz(timestamp without time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_eq_timestamptz$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timestamp_ge" id="Function-26d4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_ge(timestamp without time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_ge$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="timestamp_ge_date" id="Function-14d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_ge_date(timestamp without time zone, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_ge_date$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="timestamp_ge_timestamptz" id="Function-26ee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_ge_timestamptz(timestamp without time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_ge_timestamptz$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timestamp_gt" id="Function-1535" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_gt(timestamp without time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_gt$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="timestamp_gt_date" id="Function-712" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_gt_date(timestamp without time zone, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_gt_date$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="timestamp_gt_timestamptz" id="Function-ed1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_gt_timestamptz(timestamp without time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_gt_timestamptz$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timestamp_hash" id="Function-1e70" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_hash(timestamp without time zone)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_hash$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="timestamp_hash_extended" id="Function-1bb3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_hash_extended(timestamp without time zone, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_hash_extended$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="timestamp_in" id="Function-a91" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_in(cstring, oid, integer)
 RETURNS timestamp without time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="timestamp_larger" id="Function-1de1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_larger(timestamp without time zone, timestamp without time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_larger$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="timestamp_le" id="Function-1c5e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_le(timestamp without time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_le$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="timestamp_le_date" id="Function-c13" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_le_date(timestamp without time zone, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_le_date$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="timestamp_le_timestamptz" id="Function-2d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_le_timestamptz(timestamp without time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_le_timestamptz$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timestamp_lt" id="Function-1e8c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_lt(timestamp without time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_lt$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="timestamp_lt_date" id="Function-23f3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_lt_date(timestamp without time zone, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_lt_date$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="timestamp_lt_timestamptz" id="Function-cf6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_lt_timestamptz(timestamp without time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_lt_timestamptz$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timestamp_mi" id="Function-1b5a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_mi(timestamp without time zone, timestamp without time zone)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_mi$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="timestamp_mi_interval" id="Function-1d6c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_mi_interval(timestamp without time zone, interval)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_mi_interval$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="timestamp_ne" id="Function-26e1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_ne(timestamp without time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_ne$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="timestamp_ne_date" id="Function-80" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_ne_date(timestamp without time zone, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_ne_date$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="timestamp_ne_timestamptz" id="Function-2381" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_ne_timestamptz(timestamp without time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_ne_timestamptz$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timestamp_out" id="Function-1e17" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_out(timestamp without time zone)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_out$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="timestamp_pl_interval" id="Function-14ac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_pl_interval(timestamp without time zone, interval)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_pl_interval$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="timestamp_recv" id="Function-a8b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_recv(internal, oid, integer)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="timestamp_send" id="Function-162e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_send(timestamp without time zone)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_send$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="timestamp_smaller" id="Function-1190" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_smaller(timestamp without time zone, timestamp without time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_smaller$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="timestamp_sortsupport" id="Function-201d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_sortsupport$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="timestamp_support" id="Function-1fb1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_support$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="timestamptypmodin" id="Function-b0e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptypmodin$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="timestamptypmodout" id="Function-1ebb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptypmodout$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="timestamptz" id="Function-107d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz(date)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_timestamptz$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="timestamptz" id="Function-3cd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz(date, time without time zone)
 RETURNS timestamp with time zone
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT COST 1
AS $function$select cast(($1 + $2) as timestamp with time zone)$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="time without time zone" inOut="1" />
		</function>
		<function name="timestamptz" id="Function-ec5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz(date, time with time zone)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$datetimetz_timestamptz$function$
;]]></string>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="timestamptz" id="Function-afa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz(timestamp with time zone, integer)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT timestamp_support
AS $function$timestamptz_scale$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="timestamptz" id="Function-150" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz(timestamp without time zone)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_timestamptz$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="timestamptz_cmp" id="Function-1f56" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_cmp(timestamp with time zone, timestamp with time zone)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_cmp$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timestamptz_cmp_date" id="Function-4f1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_cmp_date(timestamp with time zone, date)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_cmp_date$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="timestamptz_cmp_timestamp" id="Function-19b7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_cmp_timestamp(timestamp with time zone, timestamp without time zone)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_cmp_timestamp$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="timestamptz_eq" id="Function-1295" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_eq(timestamp with time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_eq$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timestamptz_eq_date" id="Function-1f7c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_eq_date(timestamp with time zone, date)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_eq_date$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="timestamptz_eq_timestamp" id="Function-5e0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_eq_timestamp(timestamp with time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_eq_timestamp$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="timestamptz_ge" id="Function-d3f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_ge(timestamp with time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_ge$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timestamptz_ge_date" id="Function-220" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_ge_date(timestamp with time zone, date)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_ge_date$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="timestamptz_ge_timestamp" id="Function-32e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_ge_timestamp(timestamp with time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_ge_timestamp$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="timestamptz_gt" id="Function-c25" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_gt(timestamp with time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_gt$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timestamptz_gt_date" id="Function-7b0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_gt_date(timestamp with time zone, date)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_gt_date$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="timestamptz_gt_timestamp" id="Function-a90" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_gt_timestamp(timestamp with time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_gt_timestamp$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="timestamptz_in" id="Function-169a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_in(cstring, oid, integer)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="timestamptz_larger" id="Function-1541" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_larger(timestamp with time zone, timestamp with time zone)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_larger$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timestamptz_le" id="Function-1d35" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_le(timestamp with time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_le$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timestamptz_le_date" id="Function-1c94" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_le_date(timestamp with time zone, date)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_le_date$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="timestamptz_le_timestamp" id="Function-17c2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_le_timestamp(timestamp with time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_le_timestamp$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="timestamptz_lt" id="Function-8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_lt(timestamp with time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_lt$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timestamptz_lt_date" id="Function-ed0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_lt_date(timestamp with time zone, date)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_lt_date$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="timestamptz_lt_timestamp" id="Function-249f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_lt_timestamp(timestamp with time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_lt_timestamp$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="timestamptz_mi" id="Function-1c95" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_mi(timestamp with time zone, timestamp with time zone)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_mi$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timestamptz_mi_interval" id="Function-1506" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_mi_interval(timestamp with time zone, interval)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_mi_interval$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="timestamptz_ne" id="Function-62f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_ne(timestamp with time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_ne$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timestamptz_ne_date" id="Function-312" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_ne_date(timestamp with time zone, date)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_ne_date$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="timestamptz_ne_timestamp" id="Function-2008" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_ne_timestamp(timestamp with time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_ne_timestamp$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="timestamptz_out" id="Function-348" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_out(timestamp with time zone)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_out$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timestamptz_pl_interval" id="Function-480" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_pl_interval(timestamp with time zone, interval)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_pl_interval$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="timestamptz_recv" id="Function-89c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_recv(internal, oid, integer)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptz_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="timestamptz_send" id="Function-123c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_send(timestamp with time zone)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptz_send$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timestamptz_smaller" id="Function-18de" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_smaller(timestamp with time zone, timestamp with time zone)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_smaller$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timestamptztypmodin" id="Function-246c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptztypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptztypmodin$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="timestamptztypmodout" id="Function-2223" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptztypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptztypmodout$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="timetypmodin" id="Function-746" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetypmodin$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="timetypmodout" id="Function-1baf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetypmodout$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="timetz" id="Function-178f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz(timestamp with time zone)
 RETURNS time with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_timetz$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timetz" id="Function-9af" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz(time with time zone, integer)
 RETURNS time with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT time_support
AS $function$timetz_scale$function$
;]]></string>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="timetz" id="Function-214b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz(time without time zone)
 RETURNS time with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$time_timetz$function$
;]]></string>
			<input_param jt="-1" type="time without time zone" inOut="1" />
		</function>
		<function name="timetz_cmp" id="Function-2027" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_cmp(time with time zone, time with time zone)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timetz_cmp$function$
;]]></string>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="timetz_eq" id="Function-14cf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_eq(time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timetz_eq$function$
;]]></string>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="timetz_ge" id="Function-264" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_ge(time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timetz_ge$function$
;]]></string>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="timetz_gt" id="Function-598" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_gt(time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timetz_gt$function$
;]]></string>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="timetz_hash" id="Function-ab8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_hash(time with time zone)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_hash$function$
;]]></string>
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="timetz_hash_extended" id="Function-148d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_hash_extended(time with time zone, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_hash_extended$function$
;]]></string>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="timetz_in" id="Function-197a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_in(cstring, oid, integer)
 RETURNS time with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timetz_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="timetz_larger" id="Function-165e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_larger(time with time zone, time with time zone)
 RETURNS time with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_larger$function$
;]]></string>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="timetz_le" id="Function-1cd6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_le(time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timetz_le$function$
;]]></string>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="timetz_lt" id="Function-161" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_lt(time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timetz_lt$function$
;]]></string>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="timetz_mi_interval" id="Function-a4c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_mi_interval(time with time zone, interval)
 RETURNS time with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_mi_interval$function$
;]]></string>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="timetz_ne" id="Function-407" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_ne(time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timetz_ne$function$
;]]></string>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="timetz_out" id="Function-1286" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_out(time with time zone)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_out$function$
;]]></string>
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="timetz_pl_interval" id="Function-17ad" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_pl_interval(time with time zone, interval)
 RETURNS time with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_pl_interval$function$
;]]></string>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="timetz_recv" id="Function-1f5c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_recv(internal, oid, integer)
 RETURNS time with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="timetz_send" id="Function-1a6d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_send(time with time zone)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_send$function$
;]]></string>
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="timetz_smaller" id="Function-1f3b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_smaller(time with time zone, time with time zone)
 RETURNS time with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_smaller$function$
;]]></string>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="timetzdate_pl" id="Function-1204" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetzdate_pl(time with time zone, date)
 RETURNS timestamp with time zone
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select ($2 + $1)$function$
;]]></string>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="timetztypmodin" id="Function-370" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetztypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetztypmodin$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="timetztypmodout" id="Function-129a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetztypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetztypmodout$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="timezone" id="Function-222" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timezone(interval, timestamp with time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptz_izone$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timezone" id="Function-964" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timezone(text, timestamp with time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptz_zone$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timezone" id="Function-1a3c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timezone(text, time with time zone)
 RETURNS time with time zone
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$timetz_zone$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="timezone" id="Function-1608" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timezone(interval, time with time zone)
 RETURNS time with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_izone$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="timezone" id="Function-98b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timezone(text, timestamp without time zone)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_zone$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="timezone" id="Function-949" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timezone(interval, timestamp without time zone)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_izone$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="to_ascii" id="Function-1a2d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_ascii(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$to_ascii_default$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_ascii" id="Function-231d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_ascii(text, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$to_ascii_enc$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="to_ascii" id="Function-1d6b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_ascii(text, name)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$to_ascii_encname$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="to_char" id="Function-d24" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_char(interval, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$interval_to_char$function$
;]]></string>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_char" id="Function-442" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_char(timestamp with time zone, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_to_char$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_char" id="Function-2051" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_char(numeric, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$numeric_to_char$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_char" id="Function-2297" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_char(integer, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$int4_to_char$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_char" id="Function-b38" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_char(bigint, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$int8_to_char$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_char" id="Function-8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_char(real, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$float4_to_char$function$
;]]></string>
			<input_param jt="-1" type="real" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_char" id="Function-95c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_char(double precision, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$float8_to_char$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_char" id="Function-1e5a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_char(timestamp without time zone, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_to_char$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_date" id="Function-36c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_date(text, text)
 RETURNS date
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_date$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_hex" id="Function-932" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_hex(integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$to_hex32$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="to_hex" id="Function-17ef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_hex(bigint)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$to_hex64$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="to_json" id="Function-2515" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_json(anyelement)
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_json$function$
;]]></string>
			<input_param jt="-1" type="anyelement" inOut="1" />
		</function>
		<function name="to_jsonb" id="Function-fff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_jsonb(anyelement)
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_jsonb$function$
;]]></string>
			<input_param jt="-1" type="anyelement" inOut="1" />
		</function>
		<function name="to_number" id="Function-453" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_number(text, text)
 RETURNS numeric
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$numeric_to_number$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_regclass" id="Function-638" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regclass(text)
 RETURNS regclass
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regclass$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_regnamespace" id="Function-1312" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regnamespace(text)
 RETURNS regnamespace
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regnamespace$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_regoper" id="Function-16aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regoper(text)
 RETURNS regoper
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regoper$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_regoperator" id="Function-974" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regoperator(text)
 RETURNS regoperator
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regoperator$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_regproc" id="Function-154e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regproc(text)
 RETURNS regproc
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regproc$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_regprocedure" id="Function-5aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regprocedure(text)
 RETURNS regprocedure
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regprocedure$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_regrole" id="Function-2185" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regrole(text)
 RETURNS regrole
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regrole$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_regtype" id="Function-24fe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regtype(text)
 RETURNS regtype
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regtype$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_timestamp" id="Function-321" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_timestamp(double precision)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_timestamptz$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="to_timestamp" id="Function-2391" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_timestamp(text, text)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_timestamp$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_tsquery" id="Function-1085" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_tsquery(regconfig, text)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$to_tsquery_byid$function$
;]]></string>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_tsquery" id="Function-1e27" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_tsquery(text)
 RETURNS tsquery
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$to_tsquery$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_tsvector" id="Function-1a57" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_tsvector(regconfig, text)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$to_tsvector_byid$function$
;]]></string>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_tsvector" id="Function-26f6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_tsvector(text)
 RETURNS tsvector
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$to_tsvector$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_tsvector" id="Function-1391" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_tsvector(jsonb)
 RETURNS tsvector
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$jsonb_string_to_tsvector$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="to_tsvector" id="Function-1736" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_tsvector(json)
 RETURNS tsvector
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$json_string_to_tsvector$function$
;]]></string>
			<input_param jt="-1" type="json" inOut="1" />
		</function>
		<function name="to_tsvector" id="Function-533" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_tsvector(regconfig, jsonb)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$jsonb_string_to_tsvector_byid$function$
;]]></string>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="to_tsvector" id="Function-a53" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_tsvector(regconfig, json)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$json_string_to_tsvector_byid$function$
;]]></string>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="json" inOut="1" />
		</function>
		<function name="transaction_timestamp" id="Function-1d74" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.transaction_timestamp()
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$now$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="translate" id="Function-129d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.translate(text, text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$translate$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="trigger_in" id="Function-21bc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.trigger_in(cstring)
 RETURNS trigger
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$trigger_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="trigger_out" id="Function-129f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.trigger_out(trigger)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$trigger_out$function$
;]]></string>
			<input_param jt="-1" type="trigger" inOut="1" />
		</function>
		<function name="trunc" id="Function-123" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.trunc(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtrunc$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="trunc" id="Function-16b3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.trunc(numeric, integer)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_trunc$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="trunc" id="Function-1b83" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.trunc(numeric)
 RETURNS numeric
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.trunc($1,0)$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="trunc" id="Function-1ea6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.trunc(macaddr8)
 RETURNS macaddr8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_trunc$function$
;]]></string>
			<input_param jt="-1" type="macaddr8" inOut="1" />
		</function>
		<function name="trunc" id="Function-1f85" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.trunc(macaddr)
 RETURNS macaddr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_trunc$function$
;]]></string>
			<input_param jt="-1" type="macaddr" inOut="1" />
		</function>
		<function name="ts_debug" id="Function-2365" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_debug(config regconfig, document text, OUT alias text, OUT description text, OUT token text, OUT dictionaries regdictionary[], OUT dictionary regdictionary, OUT lexemes text[])
 RETURNS SETOF record
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT
AS $function$
SELECT
    tt.alias AS alias,
    tt.description AS description,
    parse.token AS token,
    ARRAY ( SELECT m.mapdict::pg_catalog.regdictionary
            FROM pg_catalog.pg_ts_config_map AS m
            WHERE m.mapcfg = $1 AND m.maptokentype = parse.tokid
            ORDER BY m.mapseqno )
    AS dictionaries,
    ( SELECT mapdict::pg_catalog.regdictionary
      FROM pg_catalog.pg_ts_config_map AS m
      WHERE m.mapcfg = $1 AND m.maptokentype = parse.tokid
      ORDER BY pg_catalog.ts_lexize(mapdict, parse.token) IS NULL, m.mapseqno
      LIMIT 1
    ) AS dictionary,
    ( SELECT pg_catalog.ts_lexize(mapdict, parse.token)
      FROM pg_catalog.pg_ts_config_map AS m
      WHERE m.mapcfg = $1 AND m.maptokentype = parse.tokid
      ORDER BY pg_catalog.ts_lexize(mapdict, parse.token) IS NULL, m.mapseqno
      LIMIT 1
    ) AS lexemes
FROM pg_catalog.ts_parse(
        (SELECT cfgparser FROM pg_catalog.pg_ts_config WHERE oid = $1 ), $2
    ) AS parse,
     pg_catalog.ts_token_type(
        (SELECT cfgparser FROM pg_catalog.pg_ts_config WHERE oid = $1 )
    ) AS tt
WHERE tt.tokid = parse.tokid
$function$
;]]></string>
			<input_param name="config" jt="-1" type="regconfig" inOut="1" />
			<input_param name="document" jt="-1" type="text" inOut="1" />
			<input_param name="alias" jt="-1" type="text" inOut="3" />
			<input_param name="description" jt="-1" type="text" inOut="3" />
			<input_param name="token" jt="-1" type="text" inOut="3" />
			<input_param name="dictionaries" jt="-1" type="ARRAY" inOut="3" />
			<input_param name="dictionary" jt="-1" type="regdictionary" inOut="3" />
			<input_param name="lexemes" jt="-1" type="ARRAY" inOut="3" />
		</function>
		<function name="ts_debug" id="Function-ab0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_debug(document text, OUT alias text, OUT description text, OUT token text, OUT dictionaries regdictionary[], OUT dictionary regdictionary, OUT lexemes text[])
 RETURNS SETOF record
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT
AS $function$
    SELECT * FROM pg_catalog.ts_debug( pg_catalog.get_current_ts_config(), $1);
$function$
;]]></string>
			<input_param name="document" jt="-1" type="text" inOut="1" />
			<input_param name="alias" jt="-1" type="text" inOut="3" />
			<input_param name="description" jt="-1" type="text" inOut="3" />
			<input_param name="token" jt="-1" type="text" inOut="3" />
			<input_param name="dictionaries" jt="-1" type="ARRAY" inOut="3" />
			<input_param name="dictionary" jt="-1" type="regdictionary" inOut="3" />
			<input_param name="lexemes" jt="-1" type="ARRAY" inOut="3" />
		</function>
		<function name="ts_delete" id="Function-6f8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_delete(tsvector, text)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_delete_str$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="ts_delete" id="Function-60" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_delete(tsvector, text[])
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_delete_arr$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="ts_filter" id="Function-125f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_filter(tsvector, "char"[])
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_filter$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="ts_headline" id="Function-19f7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(regconfig, text, tsquery, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_byid_opt$function$
;]]></string>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="ts_headline" id="Function-1175" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(regconfig, text, tsquery)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_byid$function$
;]]></string>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="ts_headline" id="Function-2059" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(text, tsquery, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_opt$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="ts_headline" id="Function-1f5e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(text, tsquery)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="ts_headline" id="Function-1e2d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(regconfig, jsonb, tsquery, text)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_jsonb_byid_opt$function$
;]]></string>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="ts_headline" id="Function-f8f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(regconfig, jsonb, tsquery)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_jsonb_byid$function$
;]]></string>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="ts_headline" id="Function-1498" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(jsonb, tsquery, text)
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_jsonb_opt$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="ts_headline" id="Function-1ee5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(jsonb, tsquery)
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_jsonb$function$
;]]></string>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="ts_headline" id="Function-61a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(regconfig, json, tsquery, text)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_json_byid_opt$function$
;]]></string>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="json" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="ts_headline" id="Function-1297" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(regconfig, json, tsquery)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_json_byid$function$
;]]></string>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="json" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="ts_headline" id="Function-2073" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(json, tsquery, text)
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_json_opt$function$
;]]></string>
			<input_param jt="-1" type="json" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="ts_headline" id="Function-117e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(json, tsquery)
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_json$function$
;]]></string>
			<input_param jt="-1" type="json" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="ts_lexize" id="Function-e0b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_lexize(regdictionary, text)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_lexize$function$
;]]></string>
			<input_param jt="-1" type="regdictionary" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="ts_match_qv" id="Function-6ee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_match_qv(tsquery, tsvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_match_qv$function$
;]]></string>
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="tsvector" inOut="1" />
		</function>
		<function name="ts_match_tq" id="Function-19af" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_match_tq(text, tsquery)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_match_tq$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="ts_match_tt" id="Function-2491" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_match_tt(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_match_tt$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="ts_match_vq" id="Function-a75" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_match_vq(tsvector, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_match_vq$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="ts_parse" id="Function-9da" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_parse(parser_oid oid, txt text, OUT tokid integer, OUT token text)
 RETURNS SETOF record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_parse_byid$function$
;]]></string>
			<input_param name="parser_oid" jt="-1" type="oid" inOut="1" />
			<input_param name="txt" jt="-1" type="text" inOut="1" />
			<input_param name="tokid" jt="-1" type="integer" inOut="3" />
			<input_param name="token" jt="-1" type="text" inOut="3" />
		</function>
		<function name="ts_parse" id="Function-1ea2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_parse(parser_name text, txt text, OUT tokid integer, OUT token text)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$ts_parse_byname$function$
;]]></string>
			<input_param name="parser_name" jt="-1" type="text" inOut="1" />
			<input_param name="txt" jt="-1" type="text" inOut="1" />
			<input_param name="tokid" jt="-1" type="integer" inOut="3" />
			<input_param name="token" jt="-1" type="text" inOut="3" />
		</function>
		<function name="ts_rank" id="Function-1373" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rank(real[], tsvector, tsquery, integer)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_rank_wttf$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="ts_rank" id="Function-1e1e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rank(real[], tsvector, tsquery)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_rank_wtt$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="ts_rank" id="Function-1a7b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rank(tsvector, tsquery, integer)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_rank_ttf$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="ts_rank" id="Function-1ca9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rank(tsvector, tsquery)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_rank_tt$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="ts_rank_cd" id="Function-14cf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rank_cd(real[], tsvector, tsquery, integer)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_rankcd_wttf$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="ts_rank_cd" id="Function-abb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rank_cd(real[], tsvector, tsquery)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_rankcd_wtt$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="ts_rank_cd" id="Function-7fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rank_cd(tsvector, tsquery, integer)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_rankcd_ttf$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="ts_rank_cd" id="Function-486" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rank_cd(tsvector, tsquery)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_rankcd_tt$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="ts_rewrite" id="Function-15f2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rewrite(tsquery, tsquery, tsquery)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_rewrite$function$
;]]></string>
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="ts_rewrite" id="Function-a3f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rewrite(tsquery, text)
 RETURNS tsquery
 LANGUAGE internal
 STRICT COST 100
AS $function$tsquery_rewrite_query$function$
;]]></string>
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="ts_stat" id="Function-1958" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_stat(query text, OUT word text, OUT ndoc integer, OUT nentry integer)
 RETURNS SETOF record
 LANGUAGE internal
 STRICT COST 10 ROWS 10000
AS $function$ts_stat1$function$
;]]></string>
			<input_param name="query" jt="-1" type="text" inOut="1" />
			<input_param name="word" jt="-1" type="text" inOut="3" />
			<input_param name="ndoc" jt="-1" type="integer" inOut="3" />
			<input_param name="nentry" jt="-1" type="integer" inOut="3" />
		</function>
		<function name="ts_stat" id="Function-1303" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_stat(query text, weights text, OUT word text, OUT ndoc integer, OUT nentry integer)
 RETURNS SETOF record
 LANGUAGE internal
 STRICT COST 10 ROWS 10000
AS $function$ts_stat2$function$
;]]></string>
			<input_param name="query" jt="-1" type="text" inOut="1" />
			<input_param name="weights" jt="-1" type="text" inOut="1" />
			<input_param name="word" jt="-1" type="text" inOut="3" />
			<input_param name="ndoc" jt="-1" type="integer" inOut="3" />
			<input_param name="nentry" jt="-1" type="integer" inOut="3" />
		</function>
		<function name="ts_token_type" id="Function-196d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_token_type(parser_oid oid, OUT tokid integer, OUT alias text, OUT description text)
 RETURNS SETOF record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 16
AS $function$ts_token_type_byid$function$
;]]></string>
			<input_param name="parser_oid" jt="-1" type="oid" inOut="1" />
			<input_param name="tokid" jt="-1" type="integer" inOut="3" />
			<input_param name="alias" jt="-1" type="text" inOut="3" />
			<input_param name="description" jt="-1" type="text" inOut="3" />
		</function>
		<function name="ts_token_type" id="Function-1a8a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_token_type(parser_name text, OUT tokid integer, OUT alias text, OUT description text)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT ROWS 16
AS $function$ts_token_type_byname$function$
;]]></string>
			<input_param name="parser_name" jt="-1" type="text" inOut="1" />
			<input_param name="tokid" jt="-1" type="integer" inOut="3" />
			<input_param name="alias" jt="-1" type="text" inOut="3" />
			<input_param name="description" jt="-1" type="text" inOut="3" />
		</function>
		<function name="ts_typanalyze" id="Function-145d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_typanalyze(internal)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$ts_typanalyze$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="tsm_handler_in" id="Function-aea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsm_handler_in(cstring)
 RETURNS tsm_handler
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$tsm_handler_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="tsm_handler_out" id="Function-8bf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsm_handler_out(tsm_handler)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsm_handler_out$function$
;]]></string>
			<input_param jt="-1" type="tsm_handler" inOut="1" />
		</function>
		<function name="tsmatchjoinsel" id="Function-19c4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsmatchjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$tsmatchjoinsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="tsmatchsel" id="Function-1b06" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsmatchsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$tsmatchsel$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="tsq_mcontained" id="Function-1c70" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsq_mcontained(tsquery, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsq_mcontained$function$
;]]></string>
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="tsq_mcontains" id="Function-8cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsq_mcontains(tsquery, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsq_mcontains$function$
;]]></string>
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="tsquery_and" id="Function-24f0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_and(tsquery, tsquery)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_and$function$
;]]></string>
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="tsquery_cmp" id="Function-993" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_cmp(tsquery, tsquery)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_cmp$function$
;]]></string>
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="tsquery_eq" id="Function-1378" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_eq(tsquery, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_eq$function$
;]]></string>
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="tsquery_ge" id="Function-1c33" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_ge(tsquery, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_ge$function$
;]]></string>
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="tsquery_gt" id="Function-661" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_gt(tsquery, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_gt$function$
;]]></string>
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="tsquery_le" id="Function-2149" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_le(tsquery, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_le$function$
;]]></string>
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="tsquery_lt" id="Function-2493" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_lt(tsquery, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_lt$function$
;]]></string>
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="tsquery_ne" id="Function-20e2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_ne(tsquery, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_ne$function$
;]]></string>
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="tsquery_not" id="Function-db1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_not(tsquery)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_not$function$
;]]></string>
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="tsquery_or" id="Function-762" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_or(tsquery, tsquery)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_or$function$
;]]></string>
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="tsquery_phrase" id="Function-198c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_phrase(tsquery, tsquery)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_phrase$function$
;]]></string>
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="tsquery_phrase" id="Function-1e71" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_phrase(tsquery, tsquery, integer)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_phrase_distance$function$
;]]></string>
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="tsqueryin" id="Function-11eb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsqueryin(cstring)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsqueryin$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="tsqueryout" id="Function-1d6c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsqueryout(tsquery)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsqueryout$function$
;]]></string>
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="tsqueryrecv" id="Function-4dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsqueryrecv(internal)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsqueryrecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="tsquerysend" id="Function-fc0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquerysend(tsquery)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquerysend$function$
;]]></string>
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="tsrange" id="Function-19a0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsrange(timestamp without time zone, timestamp without time zone)
 RETURNS tsrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor2$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="tsrange" id="Function-4bd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsrange(timestamp without time zone, timestamp without time zone, text)
 RETURNS tsrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor3$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="tsrange_subdiff" id="Function-a84" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsrange_subdiff(timestamp without time zone, timestamp without time zone)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsrange_subdiff$function$
;]]></string>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="tstzrange" id="Function-b2d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tstzrange(timestamp with time zone, timestamp with time zone)
 RETURNS tstzrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor2$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="tstzrange" id="Function-22dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tstzrange(timestamp with time zone, timestamp with time zone, text)
 RETURNS tstzrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor3$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="tstzrange_subdiff" id="Function-13ca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tstzrange_subdiff(timestamp with time zone, timestamp with time zone)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tstzrange_subdiff$function$
;]]></string>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="tsvector_cmp" id="Function-21b1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_cmp(tsvector, tsvector)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_cmp$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="tsvector" inOut="1" />
		</function>
		<function name="tsvector_concat" id="Function-2430" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_concat(tsvector, tsvector)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_concat$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="tsvector" inOut="1" />
		</function>
		<function name="tsvector_eq" id="Function-1bd0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_eq(tsvector, tsvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_eq$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="tsvector" inOut="1" />
		</function>
		<function name="tsvector_ge" id="Function-19e6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_ge(tsvector, tsvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_ge$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="tsvector" inOut="1" />
		</function>
		<function name="tsvector_gt" id="Function-1f79" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_gt(tsvector, tsvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_gt$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="tsvector" inOut="1" />
		</function>
		<function name="tsvector_le" id="Function-5a3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_le(tsvector, tsvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_le$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="tsvector" inOut="1" />
		</function>
		<function name="tsvector_lt" id="Function-8c4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_lt(tsvector, tsvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_lt$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="tsvector" inOut="1" />
		</function>
		<function name="tsvector_ne" id="Function-267" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_ne(tsvector, tsvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_ne$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="tsvector" inOut="1" />
		</function>
		<function name="tsvector_to_array" id="Function-f30" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_to_array(tsvector)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_to_array$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
		</function>
		<function name="tsvector_update_trigger" id="Function-b1b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_update_trigger()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE
AS $function$tsvector_update_trigger_byid$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="tsvector_update_trigger_column" id="Function-235" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_update_trigger_column()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE
AS $function$tsvector_update_trigger_bycolumn$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="tsvectorin" id="Function-15b1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvectorin(cstring)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvectorin$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="tsvectorout" id="Function-862" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvectorout(tsvector)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvectorout$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
		</function>
		<function name="tsvectorrecv" id="Function-230d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvectorrecv(internal)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvectorrecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="tsvectorsend" id="Function-162a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvectorsend(tsvector)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvectorsend$function$
;]]></string>
			<input_param jt="-1" type="tsvector" inOut="1" />
		</function>
		<function name="txid_current" id="Function-7b8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_current()
 RETURNS bigint
 LANGUAGE internal
 STABLE STRICT
AS $function$txid_current$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="txid_current_if_assigned" id="Function-1635" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_current_if_assigned()
 RETURNS bigint
 LANGUAGE internal
 STABLE STRICT
AS $function$txid_current_if_assigned$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="txid_current_snapshot" id="Function-1f56" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_current_snapshot()
 RETURNS txid_snapshot
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$txid_current_snapshot$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="txid_snapshot_in" id="Function-495" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_snapshot_in(cstring)
 RETURNS txid_snapshot
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$txid_snapshot_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="txid_snapshot_out" id="Function-719" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_snapshot_out(txid_snapshot)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$txid_snapshot_out$function$
;]]></string>
			<input_param jt="-1" type="txid_snapshot" inOut="1" />
		</function>
		<function name="txid_snapshot_recv" id="Function-f2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_snapshot_recv(internal)
 RETURNS txid_snapshot
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$txid_snapshot_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="txid_snapshot_send" id="Function-48a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_snapshot_send(txid_snapshot)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$txid_snapshot_send$function$
;]]></string>
			<input_param jt="-1" type="txid_snapshot" inOut="1" />
		</function>
		<function name="txid_snapshot_xip" id="Function-236c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_snapshot_xip(txid_snapshot)
 RETURNS SETOF bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 50
AS $function$txid_snapshot_xip$function$
;]]></string>
			<input_param jt="-1" type="txid_snapshot" inOut="1" />
		</function>
		<function name="txid_snapshot_xmax" id="Function-88e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_snapshot_xmax(txid_snapshot)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$txid_snapshot_xmax$function$
;]]></string>
			<input_param jt="-1" type="txid_snapshot" inOut="1" />
		</function>
		<function name="txid_snapshot_xmin" id="Function-965" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_snapshot_xmin(txid_snapshot)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$txid_snapshot_xmin$function$
;]]></string>
			<input_param jt="-1" type="txid_snapshot" inOut="1" />
		</function>
		<function name="txid_status" id="Function-14aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_status(bigint)
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$txid_status$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="txid_visible_in_snapshot" id="Function-5a8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_visible_in_snapshot(bigint, txid_snapshot)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$txid_visible_in_snapshot$function$
;]]></string>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="txid_snapshot" inOut="1" />
		</function>
		<function name="uhc_to_utf8" id="Function-2623" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uhc_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_uhc', $function$uhc_to_utf8$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="unique_key_recheck" id="Function-3fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unique_key_recheck()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$unique_key_recheck$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="unknownin" id="Function-1740" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unknownin(cstring)
 RETURNS unknown
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$unknownin$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="unknownout" id="Function-26a9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unknownout(unknown)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$unknownout$function$
;]]></string>
			<input_param jt="-1" type="unknown" inOut="1" />
		</function>
		<function name="unknownrecv" id="Function-202b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unknownrecv(internal)
 RETURNS unknown
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$unknownrecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="unknownsend" id="Function-16b3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unknownsend(unknown)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$unknownsend$function$
;]]></string>
			<input_param jt="-1" type="unknown" inOut="1" />
		</function>
		<function name="unnest" id="Function-d2d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unnest(anyarray)
 RETURNS SETOF anyelement
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100 SUPPORT array_unnest_support
AS $function$array_unnest$function$
;]]></string>
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="unnest" id="Function-853" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unnest(tsvector tsvector, OUT lexeme text, OUT positions smallint[], OUT weights text[])
 RETURNS SETOF record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 10
AS $function$tsvector_unnest$function$
;]]></string>
			<input_param name="tsvector" jt="-1" type="tsvector" inOut="1" />
			<input_param name="lexeme" jt="-1" type="text" inOut="3" />
			<input_param name="positions" jt="-1" type="ARRAY" inOut="3" />
			<input_param name="weights" jt="-1" type="ARRAY" inOut="3" />
		</function>
		<function name="upper" id="Function-25af" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.upper(anyrange)
 RETURNS anyelement
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_upper$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="upper" id="Function-1554" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.upper(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$upper$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="upper_inc" id="Function-518" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.upper_inc(anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_upper_inc$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="upper_inf" id="Function-1a06" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.upper_inf(anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_upper_inf$function$
;]]></string>
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="utf8_to_ascii" id="Function-21f6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_ascii(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_ascii', $function$utf8_to_ascii$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="utf8_to_big5" id="Function-e41" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_big5(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_big5', $function$utf8_to_big5$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="utf8_to_euc_cn" id="Function-aa1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_euc_cn(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc_cn', $function$utf8_to_euc_cn$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="utf8_to_euc_jis_2004" id="Function-20ef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_euc_jis_2004(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc2004', $function$utf8_to_euc_jis_2004$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="utf8_to_euc_jp" id="Function-17ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_euc_jp(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc_jp', $function$utf8_to_euc_jp$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="utf8_to_euc_kr" id="Function-1e28" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_euc_kr(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc_kr', $function$utf8_to_euc_kr$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="utf8_to_euc_tw" id="Function-23ee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_euc_tw(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc_tw', $function$utf8_to_euc_tw$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="utf8_to_gb18030" id="Function-26d5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_gb18030(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_gb18030', $function$utf8_to_gb18030$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="utf8_to_gbk" id="Function-7d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_gbk(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_gbk', $function$utf8_to_gbk$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="utf8_to_iso8859" id="Function-9b4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_iso8859(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_iso8859', $function$utf8_to_iso8859$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="utf8_to_iso8859_1" id="Function-b51" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_iso8859_1(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_iso8859_1', $function$utf8_to_iso8859_1$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="utf8_to_johab" id="Function-b95" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_johab(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_johab', $function$utf8_to_johab$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="utf8_to_koi8r" id="Function-f1f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_koi8r(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_cyrillic', $function$utf8_to_koi8r$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="utf8_to_koi8u" id="Function-9a8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_koi8u(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_cyrillic', $function$utf8_to_koi8u$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="utf8_to_shift_jis_2004" id="Function-2152" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_shift_jis_2004(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_sjis2004', $function$utf8_to_shift_jis_2004$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="utf8_to_sjis" id="Function-1fe7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_sjis(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_sjis', $function$utf8_to_sjis$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="utf8_to_uhc" id="Function-10fe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_uhc(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_uhc', $function$utf8_to_uhc$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="utf8_to_win" id="Function-11fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_win(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_win', $function$utf8_to_win$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="uuid_cmp" id="Function-2033" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_cmp(uuid, uuid)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$uuid_cmp$function$
;]]></string>
			<input_param jt="-1" type="uuid" inOut="1" />
			<input_param jt="-1" type="uuid" inOut="1" />
		</function>
		<function name="uuid_eq" id="Function-cd8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_eq(uuid, uuid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$uuid_eq$function$
;]]></string>
			<input_param jt="-1" type="uuid" inOut="1" />
			<input_param jt="-1" type="uuid" inOut="1" />
		</function>
		<function name="uuid_ge" id="Function-1ed4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_ge(uuid, uuid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$uuid_ge$function$
;]]></string>
			<input_param jt="-1" type="uuid" inOut="1" />
			<input_param jt="-1" type="uuid" inOut="1" />
		</function>
		<function name="uuid_gt" id="Function-190" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_gt(uuid, uuid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$uuid_gt$function$
;]]></string>
			<input_param jt="-1" type="uuid" inOut="1" />
			<input_param jt="-1" type="uuid" inOut="1" />
		</function>
		<function name="uuid_hash" id="Function-1763" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_hash(uuid)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$uuid_hash$function$
;]]></string>
			<input_param jt="-1" type="uuid" inOut="1" />
		</function>
		<function name="uuid_hash_extended" id="Function-eda" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_hash_extended(uuid, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$uuid_hash_extended$function$
;]]></string>
			<input_param jt="-1" type="uuid" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="uuid_in" id="Function-58b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_in(cstring)
 RETURNS uuid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$uuid_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="uuid_le" id="Function-1462" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_le(uuid, uuid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$uuid_le$function$
;]]></string>
			<input_param jt="-1" type="uuid" inOut="1" />
			<input_param jt="-1" type="uuid" inOut="1" />
		</function>
		<function name="uuid_lt" id="Function-1621" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_lt(uuid, uuid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$uuid_lt$function$
;]]></string>
			<input_param jt="-1" type="uuid" inOut="1" />
			<input_param jt="-1" type="uuid" inOut="1" />
		</function>
		<function name="uuid_ne" id="Function-1d26" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_ne(uuid, uuid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$uuid_ne$function$
;]]></string>
			<input_param jt="-1" type="uuid" inOut="1" />
			<input_param jt="-1" type="uuid" inOut="1" />
		</function>
		<function name="uuid_out" id="Function-2707" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_out(uuid)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$uuid_out$function$
;]]></string>
			<input_param jt="-1" type="uuid" inOut="1" />
		</function>
		<function name="uuid_recv" id="Function-adf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_recv(internal)
 RETURNS uuid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$uuid_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="uuid_send" id="Function-1976" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_send(uuid)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$uuid_send$function$
;]]></string>
			<input_param jt="-1" type="uuid" inOut="1" />
		</function>
		<function name="uuid_sortsupport" id="Function-1f83" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$uuid_sortsupport$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="varbit" id="Function-153b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbit(bit varying, integer, boolean)
 RETURNS bit varying
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT varbit_support
AS $function$varbit$function$
;]]></string>
			<input_param jt="-1" type="bit varying" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="varbit_in" id="Function-226d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbit_in(cstring, oid, integer)
 RETURNS bit varying
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varbit_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="varbit_out" id="Function-504" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbit_out(bit varying)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varbit_out$function$
;]]></string>
			<input_param jt="-1" type="bit varying" inOut="1" />
		</function>
		<function name="varbit_recv" id="Function-c54" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbit_recv(internal, oid, integer)
 RETURNS bit varying
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varbit_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="varbit_send" id="Function-bb0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbit_send(bit varying)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varbit_send$function$
;]]></string>
			<input_param jt="-1" type="bit varying" inOut="1" />
		</function>
		<function name="varbit_support" id="Function-c4c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbit_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varbit_support$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="varbitcmp" id="Function-1d4d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbitcmp(bit varying, bit varying)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitcmp$function$
;]]></string>
			<input_param jt="-1" type="bit varying" inOut="1" />
			<input_param jt="-1" type="bit varying" inOut="1" />
		</function>
		<function name="varbiteq" id="Function-132b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbiteq(bit varying, bit varying)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$biteq$function$
;]]></string>
			<input_param jt="-1" type="bit varying" inOut="1" />
			<input_param jt="-1" type="bit varying" inOut="1" />
		</function>
		<function name="varbitge" id="Function-bb7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbitge(bit varying, bit varying)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitge$function$
;]]></string>
			<input_param jt="-1" type="bit varying" inOut="1" />
			<input_param jt="-1" type="bit varying" inOut="1" />
		</function>
		<function name="varbitgt" id="Function-16ef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbitgt(bit varying, bit varying)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitgt$function$
;]]></string>
			<input_param jt="-1" type="bit varying" inOut="1" />
			<input_param jt="-1" type="bit varying" inOut="1" />
		</function>
		<function name="varbitle" id="Function-11" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbitle(bit varying, bit varying)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitle$function$
;]]></string>
			<input_param jt="-1" type="bit varying" inOut="1" />
			<input_param jt="-1" type="bit varying" inOut="1" />
		</function>
		<function name="varbitlt" id="Function-da4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbitlt(bit varying, bit varying)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitlt$function$
;]]></string>
			<input_param jt="-1" type="bit varying" inOut="1" />
			<input_param jt="-1" type="bit varying" inOut="1" />
		</function>
		<function name="varbitne" id="Function-957" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbitne(bit varying, bit varying)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitne$function$
;]]></string>
			<input_param jt="-1" type="bit varying" inOut="1" />
			<input_param jt="-1" type="bit varying" inOut="1" />
		</function>
		<function name="varbittypmodin" id="Function-240c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbittypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varbittypmodin$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="varbittypmodout" id="Function-c7d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbittypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varbittypmodout$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="varchar" id="Function-1954" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."varchar"(name)
 RETURNS character varying
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$name_text$function$
;]]></string>
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="varchar" id="Function-1ca2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."varchar"(character varying, integer, boolean)
 RETURNS character varying
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT varchar_support
AS $function$varchar$function$
;]]></string>
			<input_param jt="-1" type="character varying" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="varchar_support" id="Function-ee7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varchar_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varchar_support$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="varcharin" id="Function-124d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varcharin(cstring, oid, integer)
 RETURNS character varying
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varcharin$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="varcharout" id="Function-14ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varcharout(character varying)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varcharout$function$
;]]></string>
			<input_param jt="-1" type="character varying" inOut="1" />
		</function>
		<function name="varcharrecv" id="Function-1330" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varcharrecv(internal, oid, integer)
 RETURNS character varying
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$varcharrecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="varcharsend" id="Function-115e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varcharsend(character varying)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$varcharsend$function$
;]]></string>
			<input_param jt="-1" type="character varying" inOut="1" />
		</function>
		<function name="varchartypmodin" id="Function-2196" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varchartypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varchartypmodin$function$
;]]></string>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="varchartypmodout" id="Function-714" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varchartypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varchartypmodout$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="version" id="Function-1adc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.version()
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pgsql_version$function$
;]]></string>
			<result_param jt="-1" />
		</function>
		<function name="void_in" id="Function-20e6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.void_in(cstring)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$void_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="void_out" id="Function-1394" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.void_out(void)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$void_out$function$
;]]></string>
			<input_param jt="-1" type="void" inOut="1" />
		</function>
		<function name="void_recv" id="Function-1a4a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.void_recv(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$void_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="void_send" id="Function-26c9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.void_send(void)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$void_send$function$
;]]></string>
			<input_param jt="-1" type="void" inOut="1" />
		</function>
		<function name="websearch_to_tsquery" id="Function-10bd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.websearch_to_tsquery(regconfig, text)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$websearch_to_tsquery_byid$function$
;]]></string>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="websearch_to_tsquery" id="Function-193f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.websearch_to_tsquery(text)
 RETURNS tsquery
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$websearch_to_tsquery$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="width" id="Function-22ca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.width(box)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_width$function$
;]]></string>
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="width_bucket" id="Function-2480" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.width_bucket(numeric, numeric, numeric, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$width_bucket_numeric$function$
;]]></string>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="width_bucket" id="Function-11a6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.width_bucket(double precision, double precision, double precision, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$width_bucket_float8$function$
;]]></string>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="width_bucket" id="Function-d43" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.width_bucket(anyelement, anyarray)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$width_bucket_array$function$
;]]></string>
			<input_param jt="-1" type="anyelement" inOut="1" />
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="win1250_to_latin2" id="Function-db2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win1250_to_latin2(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/latin2_and_win1250', $function$win1250_to_latin2$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="win1250_to_mic" id="Function-8b5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win1250_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/latin2_and_win1250', $function$win1250_to_mic$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="win1251_to_iso" id="Function-b13" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win1251_to_iso(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$win1251_to_iso$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="win1251_to_koi8r" id="Function-18db" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win1251_to_koi8r(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$win1251_to_koi8r$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="win1251_to_mic" id="Function-2eb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win1251_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$win1251_to_mic$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="win1251_to_win866" id="Function-25a3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win1251_to_win866(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$win1251_to_win866$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="win866_to_iso" id="Function-1c3d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win866_to_iso(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$win866_to_iso$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="win866_to_koi8r" id="Function-117a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win866_to_koi8r(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$win866_to_koi8r$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="win866_to_mic" id="Function-1740" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win866_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$win866_to_mic$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="win866_to_win1251" id="Function-1ba8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win866_to_win1251(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$win866_to_win1251$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="win_to_utf8" id="Function-18a5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_win', $function$win_to_utf8$function$
;]]></string>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="cstring" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="xideq" id="Function-1fb2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xideq(xid, xid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$xideq$function$
;]]></string>
			<input_param jt="-1" type="xid" inOut="1" />
			<input_param jt="-1" type="xid" inOut="1" />
		</function>
		<function name="xideqint4" id="Function-2185" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xideqint4(xid, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$xideq$function$
;]]></string>
			<input_param jt="-1" type="xid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="xidin" id="Function-2102" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xidin(cstring)
 RETURNS xid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xidin$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="xidneq" id="Function-1d9f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xidneq(xid, xid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$xidneq$function$
;]]></string>
			<input_param jt="-1" type="xid" inOut="1" />
			<input_param jt="-1" type="xid" inOut="1" />
		</function>
		<function name="xidneqint4" id="Function-56b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xidneqint4(xid, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$xidneq$function$
;]]></string>
			<input_param jt="-1" type="xid" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="xidout" id="Function-3e2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xidout(xid)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xidout$function$
;]]></string>
			<input_param jt="-1" type="xid" inOut="1" />
		</function>
		<function name="xidrecv" id="Function-454" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xidrecv(internal)
 RETURNS xid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xidrecv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="xidsend" id="Function-12ca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xidsend(xid)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xidsend$function$
;]]></string>
			<input_param jt="-1" type="xid" inOut="1" />
		</function>
		<function name="xml" id="Function-98d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xml(text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$texttoxml$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="xml_in" id="Function-1787" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xml_in(cstring)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$xml_in$function$
;]]></string>
			<input_param jt="-1" type="cstring" inOut="1" />
		</function>
		<function name="xml_is_well_formed" id="Function-123" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xml_is_well_formed(text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$xml_is_well_formed$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="xml_is_well_formed_content" id="Function-223a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xml_is_well_formed_content(text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xml_is_well_formed_content$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="xml_is_well_formed_document" id="Function-1c8a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xml_is_well_formed_document(text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xml_is_well_formed_document$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="xml_out" id="Function-181c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xml_out(xml)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xml_out$function$
;]]></string>
			<input_param jt="-1" type="xml" inOut="1" />
		</function>
		<function name="xml_recv" id="Function-1339" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xml_recv(internal)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$xml_recv$function$
;]]></string>
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="xml_send" id="Function-e37" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xml_send(xml)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$xml_send$function$
;]]></string>
			<input_param jt="-1" type="xml" inOut="1" />
		</function>
		<function name="xmlcomment" id="Function-1a4f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xmlcomment(text)
 RETURNS xml
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xmlcomment$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="xmlconcat2" id="Function-181e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xmlconcat2(xml, xml)
 RETURNS xml
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$xmlconcat2$function$
;]]></string>
			<input_param jt="-1" type="xml" inOut="1" />
			<input_param jt="-1" type="xml" inOut="1" />
		</function>
		<function name="xmlexists" id="Function-8cf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."xmlexists"(text, xml)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xmlexists$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="xml" inOut="1" />
		</function>
		<function name="xmlvalidate" id="Function-6e6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xmlvalidate(xml, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xmlvalidate$function$
;]]></string>
			<input_param jt="-1" type="xml" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="xpath" id="Function-13b4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xpath(text, xml, text[])
 RETURNS xml[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xpath$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="xml" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="xpath" id="Function-1ae0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xpath(text, xml)
 RETURNS xml[]
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.xpath($1, $2, '{}'::pg_catalog.text[])$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="xml" inOut="1" />
		</function>
		<function name="xpath_exists" id="Function-26d7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xpath_exists(text, xml, text[])
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xpath_exists$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="xml" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="xpath_exists" id="Function-176f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xpath_exists(text, xml)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.xpath_exists($1, $2, '{}'::pg_catalog.text[])$function$
;]]></string>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="xml" inOut="1" />
		</function>
	</schema>
	<schema name="public" >
		<comment><![CDATA[standard public schema]]></comment>
		<table name="admins" generator_rows="100" spec="" >
			<column name="idadmin" type="serial" length="32" jt="4" mandatory="y" />
			<column name="users" type="varchar" length="20" jt="12" />
			<column name="mdp" type="varchar" length="20" jt="12" />
			<column name="api_token" type="varchar" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<index name="admins_pkey" unique="PRIMARY_KEY" >
				<column name="idadmin" />
			</index>
		</table>
		<table name="branches" generator_rows="100" spec="" >
			<column name="idbranche" type="serial" jt="4" mandatory="y" />
			<column name="branche" prior="branches" type="varchar" length="25" jt="12" />
			<column name="description" type="text" jt="12" />
			<index name="pk_branches" unique="PRIMARY_KEY" >
				<column name="idbranche" />
			</index>
		</table>
		<table name="branches_employes" generator_rows="150" spec="" >
			<column name="id_branche_employe" type="serial" jt="4" mandatory="y" />
			<column name="idemploye" type="integer" jt="4" />
			<column name="idbranche" type="integer" jt="4" />
			<column name="dateaffectation" type="date" jt="91" />
			<index name="pk_branches_employes" unique="PRIMARY_KEY" >
				<column name="id_branche_employe" />
			</index>
			<fk name="idemploye" to_schema="public" to_table="employes" >
				<fk_column name="idemploye" pk="idemploye" />
			</fk>
			<fk name="idbranche" to_schema="public" to_table="branches" >
				<fk_column name="idbranche" pk="idbranche" />
			</fk>
		</table>
		<table name="employes" generator_rows="100" spec="" >
			<column name="idemploye" type="serial" length="32" jt="4" mandatory="y" />
			<column name="nom" type="text" jt="12" />
			<column name="prenom" type="text" jt="12" />
			<column name="imgprofile" type="text" jt="12" />
			<column name="sexe" type="varchar" length="10" jt="12" />
			<column name="mail" type="varchar" length="30" jt="12" />
			<column name="mdp" type="varchar" length="30" jt="12" />
			<column name="api_token" type="varchar" jt="12" >
				<defo><![CDATA['0'::character varying]]></defo>
			</column>
			<column name="etatsup" type="integer" length="32" jt="4" >
				<defo><![CDATA[0]]></defo>
			</column>
			<index name="employes_pkey" unique="PRIMARY_KEY" >
				<column name="idemploye" />
			</index>
		</table>
		<table name="typeconges" generator_rows="100" >
			<column name="idtypeconge" type="serial" jt="4" mandatory="y" />
			<column name="typeconge" type="varchar" length="25" jt="12" />
			<column name="description" type="text" jt="12" />
			<column name="dureemax" type="integer" jt="4" />
			<index name="pk_typeconges" unique="PRIMARY_KEY" >
				<column name="idtypeconge" />
			</index>
		</table>
		<sequence name="admins_idadmin_seq" options="AS integer START WITH 1 INCREMENT BY 1" />
		<sequence name="employes_idemploye_seq" options="AS integer START WITH 1 INCREMENT BY 1" />
	</schema>
	<layout name="Layout" id="Layout-774" show_column_type="y" show_schema_name="y" show_relation="columns" >
		<entity schema="public" name="admins" color="BED3F4" x="64" y="48" />
		<entity schema="public" name="branches" color="C7F4BE" x="304" y="256" />
		<entity schema="public" name="branches_employes" color="C7F4BE" x="304" y="48" />
		<entity schema="public" name="employes" color="C7F4BE" x="576" y="112" />
		<entity schema="public" name="typeconges" color="BED3F4" x="48" y="256" />
		<script name="admins" id="Editor-fce" language="SQL" >
			<string><![CDATA[CREATE  TABLE "public".admins ( 
	idadmin              serial  NOT NULL  ,
	users                varchar(20)    ,
	mdp                  varchar(20)    ,
	api_token            varchar DEFAULT '0'::character varying   ,
	CONSTRAINT admins_pkey PRIMARY KEY ( idadmin )
 );
]]></string>
		</script>
		<script name="admins_002" id="Editor-d7" language="SQL" >
			<string><![CDATA[INSERT INTO "public".admins
	( users, mdp) VALUES ( 'admin' ,'admin' );]]></string>
		</script>
		<script name="employes_002" id="Editor-c44" language="SQL" >
			<string><![CDATA[select * from employes;
]]></string>
		</script>
		<script name="employes_003" id="Editor-194e" language="SQL" >
			<string><![CDATA[select * from employes ;]]></string>
		</script>
	</layout>
</project>